// Generated by Construct 2, the HTML5 game and app creator :: http://www.scirra.com
var cr = {};
cr.plugins_ = {};
cr.behaviors = {};
if (typeof Object.getPrototypeOf !== "function")
{
	if (typeof "test".__proto__ === "object")
	{
		Object.getPrototypeOf = function(object) {
			return object.__proto__;
		};
	}
	else
	{
		Object.getPrototypeOf = function(object) {
			return object.constructor.prototype;
		};
	}
}
(function(){
	cr.logexport = function (msg)
	{
		if (window.console && window.console.log)
			window.console.log(msg);
	};
	cr.seal = function(x)
	{
		return x;
	};
	cr.freeze = function(x)
	{
		return x;
	};
	cr.is_undefined = function (x)
	{
		return typeof x === "undefined";
	};
	cr.is_number = function (x)
	{
		return typeof x === "number";
	};
	cr.is_string = function (x)
	{
		return typeof x === "string";
	};
	cr.isPOT = function (x)
	{
		return x > 0 && ((x - 1) & x) === 0;
	};
	cr.abs = function (x)
	{
		return (x < 0 ? -x : x);
	};
	cr.max = function (a, b)
	{
		return (a > b ? a : b);
	};
	cr.min = function (a, b)
	{
		return (a < b ? a : b);
	};
	cr.PI = Math.PI;
	cr.round = function (x)
	{
		return (x + 0.5) | 0;
	};
	cr.floor = function (x)
	{
		return x | 0;
	};
	function Vector2(x, y)
	{
		this.x = x;
		this.y = y;
		cr.seal(this);
	};
	Vector2.prototype.offset = function (px, py)
	{
		this.x += px;
		this.y += py;
		return this;
	};
	Vector2.prototype.mul = function (px, py)
	{
		this.x *= px;
		this.y *= py;
		return this;
	};
	cr.vector2 = Vector2;
	cr.segments_intersect = function(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y)
	{
		if (cr.max(a1x, a2x) < cr.min(b1x, b2x)
		 || cr.min(a1x, a2x) > cr.max(b1x, b2x)
		 || cr.max(a1y, a2y) < cr.min(b1y, b2y)
		 || cr.min(a1y, a2y) > cr.max(b1y, b2y))
		{
			return false;
		}
		var dpx = b1x - a1x + b2x - a2x;
		var dpy = b1y - a1y + b2y - a2y;
		var qax = a2x - a1x;
		var qay = a2y - a1y;
		var qbx = b2x - b1x;
		var qby = b2y - b1y;
		var d = cr.abs(qay * qbx - qby * qax);
		var la = qbx * dpy - qby * dpx;
		var lb = qax * dpy - qay * dpx;
		return cr.abs(la) <= d && cr.abs(lb) <= d;
	};
	function Rect(left, top, right, bottom)
	{
		this.set(left, top, right, bottom);
		cr.seal(this);
	};
	Rect.prototype.set = function (left, top, right, bottom)
	{
		this.left = left;
		this.top = top;
		this.right = right;
		this.bottom = bottom;
	};
	Rect.prototype.width = function ()
	{
		return this.right - this.left;
	};
	Rect.prototype.height = function ()
	{
		return this.bottom - this.top;
	};
	Rect.prototype.offset = function (px, py)
	{
		this.left += px;
		this.top += py;
		this.right += px;
		this.bottom += py;
		return this;
	};
	Rect.prototype.intersects_rect = function (rc)
	{
		return !(rc.right < this.left || rc.bottom < this.top || rc.left > this.right || rc.top > this.bottom);
	};
	Rect.prototype.contains_pt = function (x, y)
	{
		return (x >= this.left && x <= this.right) && (y >= this.top && y <= this.bottom);
	};
	cr.rect = Rect;
	function Quad()
	{
		this.tlx = 0;
		this.tly = 0;
		this.trx = 0;
		this.try_ = 0;	// is a keyword otherwise!
		this.brx = 0;
		this.bry = 0;
		this.blx = 0;
		this.bly = 0;
		cr.seal(this);
	};
	Quad.prototype.set_from_rect = function (rc)
	{
		this.tlx = rc.left;
		this.tly = rc.top;
		this.trx = rc.right;
		this.try_ = rc.top;
		this.brx = rc.right;
		this.bry = rc.bottom;
		this.blx = rc.left;
		this.bly = rc.bottom;
	};
	Quad.prototype.set_from_rotated_rect = function (rc, a)
	{
		if (a === 0)
		{
			this.set_from_rect(rc);
		}
		else
		{
			var sin_a = Math.sin(a);
			var cos_a = Math.cos(a);
			var left_sin_a = rc.left * sin_a;
			var top_sin_a = rc.top * sin_a;
			var right_sin_a = rc.right * sin_a;
			var bottom_sin_a = rc.bottom * sin_a;
			var left_cos_a = rc.left * cos_a;
			var top_cos_a = rc.top * cos_a;
			var right_cos_a = rc.right * cos_a;
			var bottom_cos_a = rc.bottom * cos_a;
			this.tlx = left_cos_a - top_sin_a;
			this.tly = top_cos_a + left_sin_a;
			this.trx = right_cos_a - top_sin_a;
			this.try_ = top_cos_a + right_sin_a;
			this.brx = right_cos_a - bottom_sin_a;
			this.bry = bottom_cos_a + right_sin_a;
			this.blx = left_cos_a - bottom_sin_a;
			this.bly = bottom_cos_a + left_sin_a;
		}
	};
	Quad.prototype.offset = function (px, py)
	{
		this.tlx += px;
		this.tly += py;
		this.trx += px;
		this.try_ += py;
		this.brx += px;
		this.bry += py;
		this.blx += px;
		this.bly += py;
		return this;
	};
	Quad.prototype.bounding_box = function (rc)
	{
		rc.left =   cr.min(cr.min(this.tlx, this.trx),  cr.min(this.brx, this.blx));
		rc.top =    cr.min(cr.min(this.tly, this.try_), cr.min(this.bry, this.bly));
		rc.right =  cr.max(cr.max(this.tlx, this.trx),  cr.max(this.brx, this.blx));
		rc.bottom = cr.max(cr.max(this.tly, this.try_), cr.max(this.bry, this.bly));
	};
	Quad.prototype.contains_pt = function (x, y)
	{
		var v0x = this.trx - this.tlx;
		var v0y = this.try_ - this.tly;
		var v1x = this.brx - this.tlx;
		var v1y = this.bry - this.tly;
		var v2x = x - this.tlx;
		var v2y = y - this.tly;
		var dot00 = v0x * v0x + v0y * v0y
		var dot01 = v0x * v1x + v0y * v1y
		var dot02 = v0x * v2x + v0y * v2y
		var dot11 = v1x * v1x + v1y * v1y
		var dot12 = v1x * v2x + v1y * v2y
		var invDenom = 1.0 / (dot00 * dot11 - dot01 * dot01);
		var u = (dot11 * dot02 - dot01 * dot12) * invDenom;
		var v = (dot00 * dot12 - dot01 * dot02) * invDenom;
		if ((u >= 0.0) && (v > 0.0) && (u + v < 1))
			return true;
		v0x = this.blx - this.tlx;
		v0y = this.bly - this.tly;
		var dot00 = v0x * v0x + v0y * v0y
		var dot01 = v0x * v1x + v0y * v1y
		var dot02 = v0x * v2x + v0y * v2y
		invDenom = 1.0 / (dot00 * dot11 - dot01 * dot01);
		u = (dot11 * dot02 - dot01 * dot12) * invDenom;
		v = (dot00 * dot12 - dot01 * dot02) * invDenom;
		return (u >= 0.0) && (v > 0.0) && (u + v < 1);
	};
	Quad.prototype.at = function (i, xory)
	{
		switch (i)
		{
			case 0: return xory ? this.tlx : this.tly;
			case 1: return xory ? this.trx : this.try_;
			case 2: return xory ? this.brx : this.bry;
			case 3: return xory ? this.blx : this.bly;
			case 4: return xory ? this.tlx : this.tly;		// same as 0, repeated for perf
			default: return xory ? this.tlx : this.tly;
		}
	};
	Quad.prototype.midX = function ()
	{
		return (this.tlx + this.trx  + this.brx + this.blx) / 4;
	};
	Quad.prototype.midY = function ()
	{
		return (this.tly + this.try_ + this.bry + this.bly) / 4;
	};
	Quad.prototype.intersects_segment = function (x1, y1, x2, y2)
	{
		if (this.contains_pt(x1, y1) || this.contains_pt(x2, y2))
			return true;
		var a1x, a1y, a2x, a2y;
		var i;
		for (i = 0; i < 4; i++)
		{
			a1x = this.at(i, true);
			a1y = this.at(i, false);
			a2x = this.at(i + 1, true);
			a2y = this.at(i + 1, false);
			if (cr.segments_intersect(x1, y1, x2, y2, a1x, a1y, a2x, a2y))
				return true;
		}
		return false;
	};
	Quad.prototype.intersects_quad = function (rhs)
	{
		var midx = rhs.midX();
		var midy = rhs.midY();
		if (this.contains_pt(midx, midy))
			return true;
		midx = this.midX();
		midy = this.midY();
		if (rhs.contains_pt(midx, midy))
			return true;
		var a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y;
		var i, j;
		for (i = 0; i < 4; i++)
		{
			for (j = 0; j < 4; j++)
			{
				a1x = this.at(i, true);
				a1y = this.at(i, false);
				a2x = this.at(i + 1, true);
				a2y = this.at(i + 1, false);
				b1x = rhs.at(j, true);
				b1y = rhs.at(j, false);
				b2x = rhs.at(j + 1, true);
				b2y = rhs.at(j + 1, false);
				if (cr.segments_intersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y))
					return true;
			}
		}
		return false;
	};
	cr.quad = Quad;
	cr.RGB = function (red, green, blue)
	{
		return Math.max(Math.min(red, 255), 0)
			 | (Math.max(Math.min(green, 255), 0) << 8)
			 | (Math.max(Math.min(blue, 255), 0) << 16);
	};
	cr.GetRValue = function (rgb)
	{
		return rgb & 0xFF;
	};
	cr.GetGValue = function (rgb)
	{
		return (rgb & 0xFF00) >> 8;
	};
	cr.GetBValue = function (rgb)
	{
		return (rgb & 0xFF0000) >> 16;
	};
	cr.shallowCopy = function (a, b, allowOverwrite)
	{
		var attr;
		for (attr in b)
		{
			if (b.hasOwnProperty(attr))
			{
;
				a[attr] = b[attr];
			}
		}
		return a;
	};
	cr.arrayRemove = function (arr, index)
	{
		var i, len;
		index = cr.floor(index);
		if (index < 0 || index >= arr.length)
			return;							// index out of bounds
		if (index === 0)					// removing first item
			arr.shift();
		else if (index === arr.length - 1)	// removing last item
			arr.pop();
		else
		{
			for (i = index, len = arr.length - 1; i < len; i++)
				arr[i] = arr[i + 1];
			arr.length = len;
		}
	};
	cr.shallowAssignArray = function(dest, src)
	{
		dest.length = src.length;
		var i, len;
		for (i = 0, len = src.length; i < len; i++)
			dest[i] = src[i];
	};
	cr.arrayFindRemove = function (arr, item)
	{
		var index = arr.indexOf(item);
		if (index !== -1)
			cr.arrayRemove(arr, index);
	};
	cr.clamp = function(x, a, b)
	{
		if (x < a)
			return a;
		else if (x > b)
			return b;
		else
			return x;
	};
	cr.to_radians = function(x)
	{
		return x / (180.0 / cr.PI);
	};
	cr.to_degrees = function(x)
	{
		return x * (180.0 / cr.PI);
	};
	cr.clamp_angle_degrees = function (a)
	{
		a %= 360;       // now in (-360, 360) range
		if (a < 0)
			a += 360;   // now in [0, 360) range
		return a;
	};
	cr.clamp_angle = function (a)
	{
		a %= 2 * cr.PI;       // now in (-2pi, 2pi) range
		if (a < 0)
			a += 2 * cr.PI;   // now in [0, 2pi) range
		return a;
	};
	cr.to_clamped_degrees = function (x)
	{
		return cr.clamp_angle_degrees(cr.to_degrees(x));
	};
	cr.to_clamped_radians = function (x)
	{
		return cr.clamp_angle(cr.to_radians(x));
	};
	cr.angleTo = function(x1, y1, x2, y2)
	{
		var dx = x2 - x1;
        var dy = y2 - y1;
		return Math.atan2(dy, dx);
	};
	cr.angleDiff = function (a1, a2)
	{
		if (a1 === a2)
			return 0;
		var s1 = Math.sin(a1);
		var c1 = Math.cos(a1);
		var s2 = Math.sin(a2);
		var c2 = Math.cos(a2);
		var n = s1 * s2 + c1 * c2;
		if (n >= 1)
			return 0;
		if (n <= -1)
			return cr.PI;
		return Math.acos(n);
	};
	cr.angleRotate = function (start, end, step)
	{
		var ss = Math.sin(start);
		var cs = Math.cos(start);
		var se = Math.sin(end);
		var ce = Math.cos(end);
		if (Math.acos(ss * se + cs * ce) > step)
		{
			if (cs * se - ss * ce > 0)
				return cr.clamp_angle(start + step);
			else
				return cr.clamp_angle(start - step);
		}
		else
			return cr.clamp_angle(end);
	};
	cr.angleClockwise = function (a1, a2)
	{
		var s1 = Math.sin(a1);
		var c1 = Math.cos(a1);
		var s2 = Math.sin(a2);
		var c2 = Math.cos(a2);
		return c1 * s2 - s1 * c2 <= 0;
	};
	cr.rotatePtAround = function (px, py, a, ox, oy, getx)
	{
		if (a === 0)
			return getx ? px : py;
		var sin_a = Math.sin(a);
		var cos_a = Math.cos(a);
		px -= ox;
		py -= oy;
		var left_sin_a = px * sin_a;
		var top_sin_a = py * sin_a;
		var left_cos_a = px * cos_a;
		var top_cos_a = py * cos_a;
		px = left_cos_a - top_sin_a;
		py = top_cos_a + left_sin_a;
		px += ox;
		py += oy;
		return getx ? px : py;
	}
	cr.distanceTo = function(x1, y1, x2, y2)
	{
		var dx = x2 - x1;
        var dy = y2 - y1;
		return Math.sqrt(dx*dx + dy*dy);
	};
	cr.xor = function (x, y)
	{
		return !x !== !y;
	};
	cr.lerp = function (a, b, x)
	{
		return a + (b - a) * x;
	};
	cr.hasAnyOwnProperty = function (o)
	{
		var p;
		for (p in o)
		{
			if (o.hasOwnProperty(p))
				return true;
		}
		return false;
	};
	cr.wipe = function (obj)
	{
		var p;
		for (p in obj)
		{
			if (obj.hasOwnProperty(p))
				delete obj[p];
		}
	};
	var startup_time = +(new Date());
	cr.performance_now = function()
	{
		if (typeof window["performance"] !== "undefined")
		{
			var winperf = window["performance"];
			if (typeof winperf.now !== "undefined")
				return winperf.now();
			else if (typeof winperf["webkitNow"] !== "undefined")
				return winperf["webkitNow"]();
			else if (typeof winperf["msNow"] !== "undefined")
				return winperf["msNow"]();
		}
		return Date.now() - startup_time;
	};
	function ObjectSet_()
	{
		this.items = {};
		this.item_count = 0;
		this.values_cache = [];
		this.cache_valid = true;
		cr.seal(this);
	};
	ObjectSet_.prototype.contains = function (x)
	{
		return this.items.hasOwnProperty(x.toString());
	};
	ObjectSet_.prototype.add = function (x)
	{
		var str = x.toString();
		if (!this.items.hasOwnProperty(str))
		{
			this.items[str] = x;
			this.item_count++;
			this.cache_valid = false;
		}
		return this;
	};
	ObjectSet_.prototype.remove = function (x)
	{
		var str = x.toString();
		if (this.items.hasOwnProperty(str))
		{
			delete this.items[str];
			this.item_count--;
			this.cache_valid = false;
		}
		return this;
	};
	ObjectSet_.prototype.clear = function ()
	{
		cr.wipe(this.items);
		this.item_count = 0;
		this.values_cache.length = 0;
		this.cache_valid = true;
		return this;
	};
	ObjectSet_.prototype.isEmpty = function ()
	{
		return this.item_count === 0;
	};
	ObjectSet_.prototype.count = function ()
	{
		return this.item_count;
	};
	ObjectSet_.prototype.update_cache = function ()
	{
		if (this.cache_valid)
			return;
		this.values_cache.length = this.item_count;
		var p, n = 0;
		for (p in this.items)
		{
			if (this.items.hasOwnProperty(p))
				this.values_cache[n++] = this.items[p];
		}
;
		this.cache_valid = true;
	};
	ObjectSet_.prototype.values = function ()
	{
		this.update_cache();
		return this.values_cache.slice(0);
	};
	ObjectSet_.prototype.valuesRef = function ()
	{
		this.update_cache();
		return this.values_cache;
	};
	cr.ObjectSet = ObjectSet_;
	function KahanAdder_()
	{
		this.c = 0;
        this.y = 0;
        this.t = 0;
        this.sum = 0;
		cr.seal(this);
	};
	KahanAdder_.prototype.add = function (v)
	{
		this.y = v - this.c;
	    this.t = this.sum + this.y;
	    this.c = (this.t - this.sum) - this.y;
	    this.sum = this.t;
	};
    KahanAdder_.prototype.reset = function ()
    {
        this.c = 0;
        this.y = 0;
        this.t = 0;
        this.sum = 0;
    };
	cr.KahanAdder = KahanAdder_;
	cr.regexp_escape = function(text)
	{
		return text.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
	};
	function CollisionPoly_(pts_array_)
	{
		this.pts_cache = [];
		this.set_pts(pts_array_);
		cr.seal(this);
	};
	CollisionPoly_.prototype.set_pts = function(pts_array_)
	{
		this.pts_array = pts_array_;
		this.pts_count = pts_array_.length / 2;			// x, y, x, y... in array
		this.pts_cache.length = pts_array_.length;
		this.cache_width = -1;
		this.cache_height = -1;
		this.cache_angle = 0;
	};
	CollisionPoly_.prototype.is_empty = function()
	{
		return !this.pts_array.length;
	};
	CollisionPoly_.prototype.set_from_quad = function(q, offx, offy, w, h)
	{
		this.pts_cache.length = 8;
		this.pts_count = 4;
		var myptscache = this.pts_cache;
		myptscache[0] = q.tlx - offx;
		myptscache[1] = q.tly - offy;
		myptscache[2] = q.trx - offx;
		myptscache[3] = q.try_ - offy;
		myptscache[4] = q.brx - offx;
		myptscache[5] = q.bry - offy;
		myptscache[6] = q.blx - offx;
		myptscache[7] = q.bly - offy;
		this.cache_width = w;
		this.cache_height = h;
	};
	CollisionPoly_.prototype.set_from_poly = function (r)
	{
		this.pts_count = r.pts_count;
		cr.shallowAssignArray(this.pts_cache, r.pts_cache);
	};
	CollisionPoly_.prototype.cache_poly = function(w, h, a)
	{
		if (this.cache_width === w && this.cache_height === h && this.cache_angle === a)
			return;		// cache up-to-date
		this.cache_width = w;
		this.cache_height = h;
		this.cache_angle = a;
		var i, len, x, y;
		var sina = 0;
		var cosa = 1;
		var myptsarray = this.pts_array;
		var myptscache = this.pts_cache;
		if (a !== 0)
		{
			sina = Math.sin(a);
			cosa = Math.cos(a);
		}
		for (i = 0, len = this.pts_count; i < len; i++)
		{
			x = myptsarray[i*2] * w;
			y = myptsarray[i*2+1] * h;
			myptscache[i*2] = (x * cosa) - (y * sina);
			myptscache[i*2+1] = (y * cosa) + (x * sina);
		}
	};
	CollisionPoly_.prototype.contains_pt = function (a2x, a2y)
	{
		var myptscache = this.pts_cache;
		if (a2x === myptscache[0] && a2y === myptscache[1])
			return true;
		var i, x, y, len = this.pts_count;
		var bboxLeft = myptscache[0];
		var bboxRight = bboxLeft;
		var bboxTop = myptscache[1];
		var bboxBottom = bboxTop;
		for (i = 1; i < len; i++)
		{
			x = myptscache[i*2];
			y = myptscache[i*2+1];
			if (x < bboxLeft)
				bboxLeft = x;
			if (x > bboxRight)
				bboxRight = x;
			if (y < bboxTop)
				bboxTop = y;
			if (y > bboxBottom)
				bboxBottom = y;
		}
		var a1x = bboxLeft - 110;
		var a1y = bboxTop - 101;
		var a3x = bboxRight + 131
		var a3y = bboxBottom + 120;
		var b1x, b1y, b2x, b2y;
		var count1 = 0, count2 = 0;
		for (i = 0; i < len; i++)
		{
			b1x = myptscache[i*2];
			b1y = myptscache[i*2+1];
			b2x = myptscache[((i+1)%len)*2];
			b2y = myptscache[((i+1)%len)*2+1];
			if (cr.segments_intersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y))
				count1++;
			if (cr.segments_intersect(a3x, a3y, a2x, a2y, b1x, b1y, b2x, b2y))
				count2++;
		}
		return (count1 % 2 === 1) || (count2 % 2 === 1);
	};
	CollisionPoly_.prototype.intersects_poly = function (rhs, offx, offy)
	{
		var rhspts = rhs.pts_cache;
		var mypts = this.pts_cache;
		if (this.contains_pt(rhspts[0] + offx, rhspts[1] + offy))
			return true;
		if (rhs.contains_pt(mypts[0] - offx, mypts[1] - offy))
			return true;
		var i, leni, j, lenj;
		var a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y;
		for (i = 0, leni = this.pts_count; i < leni; i++)
		{
			a1x = mypts[i*2];
			a1y = mypts[i*2+1];
			a2x = mypts[((i+1)%leni)*2];
			a2y = mypts[((i+1)%leni)*2+1];
			for (j = 0, lenj = rhs.pts_count; j < lenj; j++)
			{
				b1x = rhspts[j*2] + offx;
				b1y = rhspts[j*2+1] + offy;
				b2x = rhspts[((j+1)%lenj)*2] + offx;
				b2y = rhspts[((j+1)%lenj)*2+1] + offy;
				if (cr.segments_intersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y))
					return true;
			}
		}
		return false;
	};
	CollisionPoly_.prototype.intersects_segment = function (offx, offy, x1, y1, x2, y2)
	{
		var mypts = this.pts_cache;
		if (this.contains_pt(x1 - offx, y1 - offy))
			return true;
		var i, leni;
		var a1x, a1y, a2x, a2y;
		for (i = 0, leni = this.pts_count; i < leni; i++)
		{
			a1x = mypts[i*2] + offx;
			a1y = mypts[i*2+1] + offy;
			a2x = mypts[((i+1)%leni)*2] + offx;
			a2y = mypts[((i+1)%leni)*2+1] + offy;
			if (cr.segments_intersect(x1, y1, x2, y2, a1x, a1y, a2x, a2y))
				return true;
		}
		return false;
	};
	cr.CollisionPoly = CollisionPoly_;
	var fxNames = [ "lighter",
					"xor",
					"copy",
					"destination-over",
					"source-in",
					"destination-in",
					"source-out",
					"destination-out",
					"source-atop",
					"destination-atop"];
	cr.effectToCompositeOp = function(effect)
	{
		if (effect <= 0 || effect >= 11)
			return "source-over";
		return fxNames[effect - 1];	// not including "none" so offset by 1
	};
	cr.setGLBlend = function(this_, effect, gl)
	{
		if (!gl)
			return;
		this_.srcBlend = gl.ONE;
		this_.destBlend = gl.ONE_MINUS_SRC_ALPHA;
		switch (effect) {
		case 1:		// lighter (additive)
			this_.srcBlend = gl.ONE;
			this_.destBlend = gl.ONE;
			break;
		case 2:		// xor
			break;	// todo
		case 3:		// copy
			this_.srcBlend = gl.ONE;
			this_.destBlend = gl.ZERO;
			break;
		case 4:		// destination-over
			this_.srcBlend = gl.ONE_MINUS_DST_ALPHA;
			this_.destBlend = gl.ONE;
			break;
		case 5:		// source-in
			this_.srcBlend = gl.DST_ALPHA;
			this_.destBlend = gl.ZERO;
			break;
		case 6:		// destination-in
			this_.srcBlend = gl.ZERO;
			this_.destBlend = gl.SRC_ALPHA;
			break;
		case 7:		// source-out
			this_.srcBlend = gl.ONE_MINUS_DST_ALPHA;
			this_.destBlend = gl.ZERO;
			break;
		case 8:		// destination-out
			this_.srcBlend = gl.ZERO;
			this_.destBlend = gl.ONE_MINUS_SRC_ALPHA;
			break;
		case 9:		// source-atop
			this_.srcBlend = gl.DST_ALPHA;
			this_.destBlend = gl.ONE_MINUS_SRC_ALPHA;
			break;
		case 10:	// destination-atop
			this_.srcBlend = gl.ONE_MINUS_DST_ALPHA;
			this_.destBlend = gl.SRC_ALPHA;
			break;
		}
	};
	cr.round6dp = function (x)
	{
		return Math.round(x * 1000000) / 1000000;
	};
}());
;
(function()
{
	function Runtime(canvas)
	{
		if (!canvas || (!canvas.getContext && !canvas["dc"]))
			return;
		if (canvas["c2runtime"])
			return;
		else
			canvas["c2runtime"] = this;
		var self = this;
		this.isPhoneGap = (typeof window["device"] !== "undefined" && (typeof window["device"]["cordova"] !== "undefined" || typeof window["device"]["phonegap"] !== "undefined"));
		this.isDirectCanvas = !!canvas["dc"];
		this.isAppMobi = (typeof window["AppMobi"] !== "undefined" || this.isDirectCanvas);
		this.isCocoonJs = !!window["c2cocoonjs"];
		if (this.isCocoonJs)
		{
			CocoonJS["App"]["onSuspended"].addEventListener(function() {
				self["setSuspended"](true);
			});
			CocoonJS["App"]["onActivated"].addEventListener(function () {
				self["setSuspended"](false);
			});
		}
		this.isDomFree = this.isDirectCanvas || this.isCocoonJs;
		this.isTizen = /tizen/i.test(navigator.userAgent);
		this.isAndroid = /android/i.test(navigator.userAgent) && !this.isTizen;		// tizen says "like Android"
		this.isIE = /msie/i.test(navigator.userAgent);
		this.isiPhone = /iphone/i.test(navigator.userAgent) || /ipod/i.test(navigator.userAgent);	// treat ipod as an iphone
		this.isiPad = /ipad/i.test(navigator.userAgent);
		this.isiOS = this.isiPhone || this.isiPad;
		this.isChrome = /chrome/i.test(navigator.userAgent) || /chromium/i.test(navigator.userAgent);
		this.isSafari = !this.isChrome && /safari/i.test(navigator.userAgent);		// Chrome includes Safari in UA
		this.isWindows = /windows/i.test(navigator.userAgent);
		this.isNodeWebkit = (typeof window["c2nodewebkit"] !== "undefined");
		this.isArcade = (typeof window["is_scirra_arcade"] !== "undefined");
		this.isWindows8App = !!(typeof window["c2isWindows8"] !== "undefined" && window["c2isWindows8"]);
		this.isWindowsPhone8 = !!(typeof window["c2isWindowsPhone8"] !== "undefined" && window["c2isWindowsPhone8"]);
		this.isBlackberry10 = !!(typeof window["c2isBlackberry10"] !== "undefined" && window["c2isBlackberry10"]);
		this.devicePixelRatio = 1;
		this.isMobile = (this.isPhoneGap || this.isAppMobi || this.isCocoonJs || this.isAndroid || this.isiOS || this.isWindowsPhone8 || this.isBlackberry10 || this.isTizen);
		if (!this.isMobile)
			this.isMobile = /(blackberry|bb10|playbook|palm|symbian|nokia|windows\s+ce|phone|mobile|tablet)/i.test(navigator.userAgent);
		if (typeof cr_is_preview !== "undefined" && !this.isNodeWebkit && (window.location.search === "?nw" || /nodewebkit/i.test(navigator.userAgent)))
		{
			this.isNodeWebkit = true;
		}
		this.canvas = canvas;
		this.canvasdiv = document.getElementById("c2canvasdiv");
		this.gl = null;
		this.glwrap = null;
		this.ctx = null;
		this.canvas.oncontextmenu = function (e) { if (e.preventDefault) e.preventDefault(); return false; };
		this.canvas.onselectstart = function (e) { if (e.preventDefault) e.preventDefault(); return false; };
		if (this.isDirectCanvas)
			window["c2runtime"] = this;
		if (this.isNodeWebkit)
		{
			window.ondragover = function(e) { e.preventDefault(); return false; };
			window.ondrop = function(e) { e.preventDefault(); return false; };
		}
		this.width = canvas.width;
		this.height = canvas.height;
		this.lastwidth = this.width;
		this.lastheight = this.height;
		this.redraw = true;
		this.isSuspended = false;
		if (!Date.now) {
		  Date.now = function now() {
			return +new Date();
		  };
		}
		this.plugins = [];
		this.types = {};
		this.types_by_index = [];
		this.behaviors = [];
		this.layouts = {};
		this.layouts_by_index = [];
		this.eventsheets = {};
		this.eventsheets_by_index = [];
		this.wait_for_textures = [];        // for blocking until textures loaded
		this.triggers_to_postinit = [];
		this.all_global_vars = [];
		this.deathRow = new cr.ObjectSet();
		this.isInClearDeathRow = false;
		this.isInOnDestroy = 0;					// needs to support recursion so increments and decrements and is true if > 0
		this.isRunningEvents = false;
		this.createRow = [];
		this.isLoadingState = false;
		this.saveToSlot = "";
		this.loadFromSlot = "";
		this.loadFromJson = "";
		this.lastSaveJson = "";
		this.signalledContinuousPreview = false;
		this.suspendDrawing = false;		// for hiding display until continuous preview loads
		this.dt = 0;
        this.dt1 = 0;
		this.logictime = 0;			// used to calculate CPUUtilisation
		this.cpuutilisation = 0;
		this.zeroDtCount = 0;
        this.timescale = 1.0;
        this.kahanTime = new cr.KahanAdder();
		this.last_tick_time = 0;
		this.measuring_dt = true;
		this.fps = 0;
		this.last_fps_time = 0;
		this.tickcount = 0;
		this.execcount = 0;
		this.framecount = 0;        // for fps
		this.objectcount = 0;
		this.changelayout = null;
		this.destroycallbacks = [];
		this.event_stack = [];
		this.event_stack_index = -1;
		this.localvar_stack = [[]];
		this.localvar_stack_index = 0;
		this.trigger_depth = 0;		// recursion depth for triggers
		this.pushEventStack(null);
		this.loop_stack = [];
		this.loop_stack_index = -1;
		this.next_uid = 0;
		this.next_puid = 0;		// permanent unique ids
		this.layout_first_tick = true;
		this.family_count = 0;
		this.suspend_events = [];
		this.raf_id = 0;
		this.timeout_id = 0;
		this.isloading = true;
		this.loadingprogress = 0;
		this.isNodeFullscreen = false;
		this.stackLocalCount = 0;	// number of stack-based local vars for recursion
		this.had_a_click = false;
        this.objects_to_tick = new cr.ObjectSet();
		this.objects_to_tick2 = new cr.ObjectSet();
		this.registered_collisions = [];
		this.temp_poly = new cr.CollisionPoly([]);
		this.temp_poly2 = new cr.CollisionPoly([]);
		this.allGroups = [];				// array of all event groups
        this.activeGroups = {};				// event group activation states
		this.cndsBySid = {};
		this.actsBySid = {};
		this.varsBySid = {};
		this.blocksBySid = {};
		this.running_layout = null;			// currently running layout
		this.layer_canvas = null;			// for layers "render-to-texture"
		this.layer_ctx = null;
		this.layer_tex = null;
		this.layout_tex = null;
		this.is_WebGL_context_lost = false;
		this.uses_background_blending = false;	// if any shader uses background blending, so entire layout renders to texture
		this.fx_tex = [null, null];
		this.fullscreen_scaling = 0;
		this.files_subfolder = "";			// path with project files
		this.objectsByUid = {};				// maps every in-use UID (as a string) to its instance
		this.loaderlogo = null;
		this.snapshotCanvas = null;
		this.snapshotData = "";
		this.load();
		this.isRetina = (!this.isDomFree && this.useiOSRetina && (this.isiOS || this.isTizen));
		this.devicePixelRatio = (this.isRetina ? (window["devicePixelRatio"] || 1) : 1);
		this.ClearDeathRow();
		var attribs;
		if (typeof jQuery !== "undefined" && this.fullscreen_mode > 0)
			this["setSize"](jQuery(window).width(), jQuery(window).height());
		try {
			if (this.enableWebGL && (this.isCocoonJs || !this.isDomFree))
			{
				attribs = { "depth": false, "antialias": !this.isMobile };
				var use_webgl = true;
				if (this.isChrome && this.isWindows)
				{
					var tempcanvas = document.createElement("canvas");
					var tempgl = (tempcanvas.getContext("webgl", attribs) || tempcanvas.getContext("experimental-webgl", attribs));
					if (tempgl.getSupportedExtensions().toString() === "OES_texture_float,OES_standard_derivatives,WEBKIT_WEBGL_lose_context")
					{
;
						use_webgl = false;
					}
				}
				if (use_webgl)
					this.gl = (canvas.getContext("webgl", attribs) || canvas.getContext("experimental-webgl", attribs));
			}
		}
		catch (e) {
		}
		if (this.gl)
		{
;
			if (!this.isDomFree)
			{
				this.overlay_canvas = document.createElement("canvas");
				jQuery(this.overlay_canvas).appendTo(this.canvas.parentNode);
				this.overlay_canvas.oncontextmenu = function (e) { return false; };
				this.overlay_canvas.onselectstart = function (e) { return false; };
				this.overlay_canvas.width = canvas.width;
				this.overlay_canvas.height = canvas.height;
				this.positionOverlayCanvas();
				this.overlay_ctx = this.overlay_canvas.getContext("2d");
			}
			this.glwrap = new cr.GLWrap(this.gl, this.isMobile);
			this.glwrap.setSize(canvas.width, canvas.height);
			this.ctx = null;
			this.canvas.addEventListener("webglcontextlost", function (ev) {
				ev.preventDefault();
				self.onContextLost();
				window["cr_setSuspended"](true);		// stop rendering
			}, false);
			this.canvas.addEventListener("webglcontextrestored", function (ev) {
				self.glwrap.initState();
				self.glwrap.setSize(self.glwrap.width, self.glwrap.height, true);
				self.layer_tex = null;
				self.layout_tex = null;
				self.fx_tex[0] = null;
				self.fx_tex[1] = null;
				self.onContextRestored();
				self.redraw = true;
				window["cr_setSuspended"](false);		// resume rendering
			}, false);
			var i, len, j, lenj, k, lenk, t, s, l, y;
			for (i = 0, len = this.types_by_index.length; i < len; i++)
			{
				t = this.types_by_index[i];
				for (j = 0, lenj = t.effect_types.length; j < lenj; j++)
				{
					s = t.effect_types[j];
					s.shaderindex = this.glwrap.getShaderIndex(s.id);
					this.uses_background_blending = this.uses_background_blending || this.glwrap.programUsesDest(s.shaderindex);
				}
			}
			for (i = 0, len = this.layouts_by_index.length; i < len; i++)
			{
				l = this.layouts_by_index[i];
				for (j = 0, lenj = l.effect_types.length; j < lenj; j++)
				{
					s = l.effect_types[j];
					s.shaderindex = this.glwrap.getShaderIndex(s.id);
				}
				for (j = 0, lenj = l.layers.length; j < lenj; j++)
				{
					y = l.layers[j];
					for (k = 0, lenk = y.effect_types.length; k < lenk; k++)
					{
						s = y.effect_types[k];
						s.shaderindex = this.glwrap.getShaderIndex(s.id);
						this.uses_background_blending = this.uses_background_blending || this.glwrap.programUsesDest(s.shaderindex);
					}
				}
			}
		}
		else
		{
			if (this.fullscreen_mode > 0 && this.isDirectCanvas)
			{
;
				this.canvas = null;
				document.oncontextmenu = function (e) { return false; };
				document.onselectstart = function (e) { return false; };
				this.ctx = AppMobi["canvas"]["getContext"]("2d");
				try {
					this.ctx["samplingMode"] = this.linearSampling ? "smooth" : "sharp";
					this.ctx["globalScale"] = 1;
					this.ctx["HTML5CompatibilityMode"] = true;
				} catch(e){}
				if (this.width !== 0 && this.height !== 0)
				{
					this.ctx.width = this.width;
					this.ctx.height = this.height;
				}
			}
			if (!this.ctx)
			{
;
				if (this.isCocoonJs)
				{
					attribs = { "antialias" : !!this.linearSampling };
					this.ctx = canvas.getContext("2d", attribs);
				}
				else
					this.ctx = canvas.getContext("2d");
				this.ctx["webkitImageSmoothingEnabled"] = this.linearSampling;
				this.ctx["mozImageSmoothingEnabled"] = this.linearSampling;
				this.ctx["msImageSmoothingEnabled"] = this.linearSampling;
				this.ctx["imageSmoothingEnabled"] = this.linearSampling;
			}
			this.overlay_canvas = null;
			this.overlay_ctx = null;
		}
		this.tickFunc = function () { self.tick(); };
		if (window != window.top && !this.isDomFree && !this.isWindows8App)
		{
			document.addEventListener("mousedown", function () {
				window.focus();
			}, true);
			document.addEventListener("touchstart", function () {
				window.focus();
			}, true);
		}
		if (typeof cr_is_preview !== "undefined")
		{
			if (this.isCocoonJs)
				console.log("[Construct 2] In preview-over-wifi via CocoonJS mode");
			if (window.location.search === "?continuous")
			{
				cr.logexport("Reloading for continuous preview");
				this.loadFromSlot = "__c2_continuouspreview";
				this.suspendDrawing = true;
			}
			if (this.pauseOnBlur && !this.isMobile)
			{
				jQuery(window).focus(function ()
				{
					self["setSuspended"](false);
				});
				jQuery(window).blur(function ()
				{
					self["setSuspended"](true);
				});
			}
		}
		this.go();			// run loading screen
		this.extra = {};
		cr.seal(this);
	};
	var webkitRepaintFlag = false;
	Runtime.prototype["setSize"] = function (w, h)
	{
		var tryHideAddressBar = this.hideAddressBar && this.isiPhone && !navigator["standalone"] && !this.isDomFree && !this.isPhoneGap;
		var addressBarHeight = 0;
		if (tryHideAddressBar)
		{
			if (this.isiPhone)
				addressBarHeight = 60;
			else if (this.isAndroid)
				addressBarHeight = 56;
			h += addressBarHeight;
		}
		var offx = 0, offy = 0;
		var neww = 0, newh = 0, intscale = 0;
		var mode = this.fullscreen_mode;
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || document["fullScreen"] || this.isNodeFullscreen);
		if (isfullscreen && this.fullscreen_scaling > 0)
			mode = this.fullscreen_scaling;
		if (mode >= 4)
		{
			var orig_aspect = this.original_width / this.original_height;
			var cur_aspect = w / h;
			if (cur_aspect > orig_aspect)
			{
				neww = h * orig_aspect;
				if (mode === 5)	// integer scaling
				{
					intscale = neww / this.original_width;
					if (intscale > 1)
						intscale = Math.floor(intscale);
					else if (intscale < 1)
						intscale = 1 / Math.ceil(1 / intscale);
					neww = this.original_width * intscale;
					newh = this.original_height * intscale;
					offx = (w - neww) / 2;
					offy = (h - newh) / 2;
					w = neww;
					h = newh;
				}
				else
				{
					offx = (w - neww) / 2;
					w = neww;
				}
			}
			else
			{
				newh = w / orig_aspect;
				if (mode === 5)	// integer scaling
				{
					intscale = newh / this.original_height;
					if (intscale > 1)
						intscale = Math.floor(intscale);
					else if (intscale < 1)
						intscale = 1 / Math.ceil(1 / intscale);
					neww = this.original_width * intscale;
					newh = this.original_height * intscale;
					offx = (w - neww) / 2;
					offy = (h - newh) / 2;
					w = neww;
					h = newh;
				}
				else
				{
					offy = (h - newh) / 2;
					h = newh;
				}
			}
			if (isfullscreen && !this.isNodeWebkit)
			{
				offx = 0;
				offy = 0;
			}
			offx = Math.floor(offx);
			offy = Math.floor(offy);
			w = Math.floor(w);
			h = Math.floor(h);
		}
		else if (this.isNodeWebkit && this.isNodeFullscreen && this.fullscreen_mode_set === 0)
		{
			offx = Math.floor((w - this.original_width) / 2);
			offy = Math.floor((h - this.original_height) / 2);
			w = this.original_width;
			h = this.original_height;
		}
		if (this.isRetina && this.isiPad && this.devicePixelRatio > 1)	// don't apply to iPad 1-2
		{
			if (w >= 1024)
				w = 1023;		// 2046 retina pixels
			if (h >= 1024)
				h = 1023;
		}
		var multiplier = this.devicePixelRatio;
		this.width = w * multiplier;
		this.height = h * multiplier;
		this.redraw = true;
		if (this.canvasdiv && !this.isDomFree)
		{
			jQuery(this.canvasdiv).css({"width": w + "px",
										"height": h + "px",
										"margin-left": offx,
										"margin-top": offy});
			if (typeof cr_is_preview !== "undefined")
			{
				jQuery("#borderwrap").css({"width": w + "px",
											"height": h + "px"});
			}
		}
		if (this.canvas)
		{
			this.canvas.width = w * multiplier;
			this.canvas.height = h * multiplier;
			if (this.isRetina)
			{
				jQuery(this.canvas).css({"width": w + "px",
										"height": h + "px"});
			}
		}
		if (this.overlay_canvas)
		{
			this.overlay_canvas.width = w;
			this.overlay_canvas.height = h;
		}
		if (this.glwrap)
			this.glwrap.setSize(w, h);
		if (this.isDirectCanvas && this.ctx)
		{
			this.ctx.width = w;
			this.ctx.height = h;
		}
		if (this.ctx)
		{
			this.ctx["webkitImageSmoothingEnabled"] = this.linearSampling;
			this.ctx["mozImageSmoothingEnabled"] = this.linearSampling;
			this.ctx["msImageSmoothingEnabled"] = this.linearSampling;
			this.ctx["imageSmoothingEnabled"] = this.linearSampling;
		}
		if (tryHideAddressBar && addressBarHeight > 0)
		{
			window.setTimeout(function () {
				window.scrollTo(0, 1);
			}, 100);
		}
	};
	Runtime.prototype.onContextLost = function ()
	{
		this.is_WebGL_context_lost = true;
		var i, len, t;
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			t = this.types_by_index[i];
			if (t.onLostWebGLContext)
				t.onLostWebGLContext();
		}
	};
	Runtime.prototype.onContextRestored = function ()
	{
		this.is_WebGL_context_lost = false;
		var i, len, t;
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			t = this.types_by_index[i];
			if (t.onRestoreWebGLContext)
				t.onRestoreWebGLContext();
		}
	};
	Runtime.prototype.positionOverlayCanvas = function()
	{
		if (this.isDomFree)
			return;
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || document["fullScreen"] || this.isNodeFullscreen);
		var overlay_position = isfullscreen ? jQuery(this.canvas).offset() : jQuery(this.canvas).position();
		overlay_position.position = "absolute";
		jQuery(this.overlay_canvas).css(overlay_position);
	};
	var caf = window["cancelAnimationFrame"] ||
	  window["mozCancelAnimationFrame"]    ||
	  window["webkitCancelAnimationFrame"] ||
	  window["msCancelAnimationFrame"]     ||
	  window["oCancelAnimationFrame"];
	Runtime.prototype["setSuspended"] = function (s)
	{
		var i, len;
		if (s && !this.isSuspended)
		{
			cr.logexport("[Construct 2] Suspending");
			this.isSuspended = true;			// next tick will be last
			if (this.raf_id !== 0 && caf)		// note: CocoonJS does not implement cancelAnimationFrame
				caf(this.raf_id);
			if (this.timeout_id !== 0)
				clearTimeout(this.timeout_id);
			for (i = 0, len = this.suspend_events.length; i < len; i++)
				this.suspend_events[i](true);
		}
		else if (!s && this.isSuspended)
		{
			cr.logexport("[Construct 2] Resuming");
			this.isSuspended = false;
			this.last_tick_time = cr.performance_now();	// ensure first tick is a zero-dt one
			this.last_fps_time = cr.performance_now();	// reset FPS counter
			this.framecount = 0;
			for (i = 0, len = this.suspend_events.length; i < len; i++)
				this.suspend_events[i](false);
			this.tick();						// kick off runtime again
		}
	};
	Runtime.prototype.addSuspendCallback = function (f)
	{
		this.suspend_events.push(f);
	};
	Runtime.prototype.load = function ()
	{
;
		var pm = cr.getProjectModel();
		this.name = pm[0];
		this.first_layout = pm[1];
		this.fullscreen_mode = pm[11];	// 0 = off, 1 = crop, 2 = scale inner, 3 = scale outer, 4 = letterbox scale, 5 = integer letterbox scale
		this.fullscreen_mode_set = pm[11];
		if (this.isDomFree && (pm[11] >= 4 || pm[11] === 0))
		{
			cr.logexport("[Construct 2] Letterbox scale fullscreen modes are not supported on this platform - falling back to 'Scale outer'");
			this.fullscreen_mode = 3;
			this.fullscreen_mode_set = 3;
		}
		this.uses_loader_layout = pm[17];
		this.loaderstyle = pm[18];
		if (this.loaderstyle === 0)
		{
			this.loaderlogo = new Image();
			this.loaderlogo.src = "loading-logo.png";
		}
		this.next_uid = pm[20];
		this.system = new cr.system_object(this);
		var i, len, j, lenj, k, lenk, idstr, m, b, t, f;
		var plugin, plugin_ctor;
		for (i = 0, len = pm[2].length; i < len; i++)
		{
			m = pm[2][i];
;
			cr.add_common_aces(m);
			plugin = new m[0](this);
			plugin.singleglobal = m[1];
			plugin.is_world = m[2];
			plugin.must_predraw = m[9];
			if (plugin.onCreate)
				plugin.onCreate();  // opportunity to override default ACEs
			cr.seal(plugin);
			this.plugins.push(plugin);
		}
		pm = cr.getProjectModel();
		for (i = 0, len = pm[3].length; i < len; i++)
		{
			m = pm[3][i];
			plugin_ctor = m[1];
;
			plugin = null;
			for (j = 0, lenj = this.plugins.length; j < lenj; j++)
			{
				if (this.plugins[j] instanceof plugin_ctor)
				{
					plugin = this.plugins[j];
					break;
				}
			}
;
;
			var type_inst = new plugin.Type(plugin);
;
			type_inst.name = m[0];
			type_inst.is_family = m[2];
			type_inst.instvar_sids = m[3].slice(0);
			type_inst.vars_count = m[3].length;
			type_inst.behs_count = m[4];
			type_inst.fx_count = m[5];
			type_inst.sid = m[11];
			if (type_inst.is_family)
			{
				type_inst.members = [];				// types in this family
				type_inst.family_index = this.family_count++;
				type_inst.families = null;
			}
			else
			{
				type_inst.members = null;
				type_inst.family_index = -1;
				type_inst.families = [];			// families this type belongs to
			}
			type_inst.family_var_map = null;
			type_inst.family_beh_map = null;
			type_inst.family_fx_map = null;
			type_inst.is_contained = false;
			type_inst.container = null;
			if (m[6])
			{
				type_inst.texture_file = m[6][0];
				type_inst.texture_filesize = m[6][1];
				type_inst.texture_pixelformat = m[6][2];
			}
			else
			{
				type_inst.texture_file = null;
				type_inst.texture_filesize = 0;
				type_inst.texture_pixelformat = 0;		// rgba8
			}
			if (m[7])
			{
				type_inst.animations = m[7];
			}
			else
			{
				type_inst.animations = null;
			}
			type_inst.index = i;                                // save index in to types array in type
			type_inst.instances = [];                           // all instances of this type
			type_inst.deadCache = [];							// destroyed instances to recycle next create
			type_inst.solstack = [new cr.selection(type_inst)]; // initialise SOL stack with one empty SOL
			type_inst.cur_sol = 0;
			type_inst.default_instance = null;
			type_inst.stale_iids = true;
			type_inst.updateIIDs = cr.type_updateIIDs;
			type_inst.getFirstPicked = cr.type_getFirstPicked;
			type_inst.getPairedInstance = cr.type_getPairedInstance;
			type_inst.getCurrentSol = cr.type_getCurrentSol;
			type_inst.pushCleanSol = cr.type_pushCleanSol;
			type_inst.pushCopySol = cr.type_pushCopySol;
			type_inst.popSol = cr.type_popSol;
			type_inst.getBehaviorByName = cr.type_getBehaviorByName;
			type_inst.getBehaviorIndexByName = cr.type_getBehaviorIndexByName;
			type_inst.getEffectIndexByName = cr.type_getEffectIndexByName;
			type_inst.applySolToContainer = cr.type_applySolToContainer;
			type_inst.extra = {};
			type_inst.toString = cr.type_toString;
			type_inst.behaviors = [];
			for (j = 0, lenj = m[8].length; j < lenj; j++)
			{
				b = m[8][j];
				var behavior_ctor = b[1];
				var behavior_plugin = null;
				for (k = 0, lenk = this.behaviors.length; k < lenk; k++)
				{
					if (this.behaviors[k] instanceof behavior_ctor)
					{
						behavior_plugin = this.behaviors[k];
						break;
					}
				}
				if (!behavior_plugin)
				{
					behavior_plugin = new behavior_ctor(this);
					behavior_plugin.my_instances = new cr.ObjectSet(); 	// instances of this behavior
					if (behavior_plugin.onCreate)
						behavior_plugin.onCreate();
					cr.seal(behavior_plugin);
					this.behaviors.push(behavior_plugin);
				}
				var behavior_type = new behavior_plugin.Type(behavior_plugin, type_inst);
				behavior_type.name = b[0];
				behavior_type.sid = b[2];
				behavior_type.onCreate();
				cr.seal(behavior_type);
				type_inst.behaviors.push(behavior_type);
			}
			type_inst.global = m[9];
			type_inst.isOnLoaderLayout = m[10];
			type_inst.effect_types = [];
			for (j = 0, lenj = m[12].length; j < lenj; j++)
			{
				type_inst.effect_types.push({
					id: m[12][j][0],
					name: m[12][j][1],
					shaderindex: -1,
					active: true,
					index: j
				});
			}
			if (!this.uses_loader_layout || type_inst.is_family || type_inst.isOnLoaderLayout || !plugin.is_world)
			{
				type_inst.onCreate();
				cr.seal(type_inst);
			}
			if (type_inst.name)
				this.types[type_inst.name] = type_inst;
			this.types_by_index.push(type_inst);
			if (plugin.singleglobal)
			{
				var instance = new plugin.Instance(type_inst);
				instance.uid = this.next_uid++;
				instance.puid = this.next_puid++;
				instance.iid = 0;
				instance.get_iid = cr.inst_get_iid;
				instance.toString = cr.inst_toString;
				instance.properties = m[13];
				instance.onCreate();
				cr.seal(instance);
				type_inst.instances.push(instance);
			}
		}
		for (i = 0, len = pm[4].length; i < len; i++)
		{
			var familydata = pm[4][i];
			var familytype = this.types_by_index[familydata[0]];
			var familymember;
			for (j = 1, lenj = familydata.length; j < lenj; j++)
			{
				familymember = this.types_by_index[familydata[j]];
				familymember.families.push(familytype);
				familytype.members.push(familymember);
			}
		}
		for (i = 0, len = pm[22].length; i < len; i++)
		{
			var containerdata = pm[22][i];
			var containertypes = [];
			for (j = 0, lenj = containerdata.length; j < lenj; j++)
				containertypes.push(this.types_by_index[containerdata[j]]);
			for (j = 0, lenj = containertypes.length; j < lenj; j++)
			{
				containertypes[j].is_contained = true;
				containertypes[j].container = containertypes;
			}
		}
		if (this.family_count > 0)
		{
			for (i = 0, len = this.types_by_index.length; i < len; i++)
			{
				t = this.types_by_index[i];
				if (t.is_family || !t.families.length)
					continue;
				t.family_var_map = new Array(this.family_count);
				t.family_beh_map = new Array(this.family_count);
				t.family_fx_map = new Array(this.family_count);
				var all_fx = [];
				var varsum = 0;
				var behsum = 0;
				var fxsum = 0;
				for (j = 0, lenj = t.families.length; j < lenj; j++)
				{
					f = t.families[j];
					t.family_var_map[f.family_index] = varsum;
					varsum += f.vars_count;
					t.family_beh_map[f.family_index] = behsum;
					behsum += f.behs_count;
					t.family_fx_map[f.family_index] = fxsum;
					fxsum += f.fx_count;
					for (k = 0, lenk = f.effect_types.length; k < lenk; k++)
						all_fx.push(cr.shallowCopy({}, f.effect_types[k]));
				}
				t.effect_types = all_fx.concat(t.effect_types);
				for (j = 0, lenj = t.effect_types.length; j < lenj; j++)
					t.effect_types[j].index = j;
			}
		}
		for (i = 0, len = pm[5].length; i < len; i++)
		{
			m = pm[5][i];
			var layout = new cr.layout(this, m);
			cr.seal(layout);
			this.layouts[layout.name] = layout;
			this.layouts_by_index.push(layout);
		}
		for (i = 0, len = pm[6].length; i < len; i++)
		{
			m = pm[6][i];
			var sheet = new cr.eventsheet(this, m);
			cr.seal(sheet);
			this.eventsheets[sheet.name] = sheet;
			this.eventsheets_by_index.push(sheet);
		}
		for (i = 0, len = this.eventsheets_by_index.length; i < len; i++)
			this.eventsheets_by_index[i].postInit();
		for (i = 0, len = this.triggers_to_postinit.length; i < len; i++)
			this.triggers_to_postinit[i].postInit();
		this.triggers_to_postinit.length = 0;
		this.files_subfolder = pm[7];
		this.pixel_rounding = pm[8];
		this.original_width = pm[9];
		this.original_height = pm[10];
		this.aspect_scale = 1.0;
		this.enableWebGL = pm[12];
		this.linearSampling = pm[13];
		this.clearBackground = pm[14];
		this.versionstr = pm[15];
		var iOSretina = pm[16];
		if (iOSretina === 2)
			iOSretina = (this.isiPhone ? 1 : 0);
		this.useiOSRetina = (iOSretina !== 0);
		this.hideAddressBar = pm[19];
		this.pauseOnBlur = pm[21];
		this.start_time = Date.now();
	};
	Runtime.prototype.findWaitingTexture = function (src_)
	{
		var i, len;
		for (i = 0, len = this.wait_for_textures.length; i < len; i++)
		{
			if (this.wait_for_textures[i].cr_src === src_)
				return this.wait_for_textures[i];
		}
		return null;
	};
	Runtime.prototype.areAllTexturesLoaded = function ()
	{
		var totalsize = 0;
		var completedsize = 0;
		var ret = true;
		var i, len;
		for (i = 0, len = this.wait_for_textures.length; i < len; i++)
		{
			var filesize = this.wait_for_textures[i].cr_filesize;
			if (!filesize || filesize <= 0)
				filesize = 50000;
			totalsize += filesize;
			if (this.wait_for_textures[i].complete || this.wait_for_textures[i]["loaded"])
				completedsize += filesize;
			else
				ret = false;    // not all textures loaded
		}
		if (totalsize == 0)
			this.progress = 0;
		else
			this.progress = (completedsize / totalsize);
		return ret;
	};
	Runtime.prototype.go = function ()
	{
		if (!this.ctx && !this.glwrap)
			return;
		var ctx = this.ctx || this.overlay_ctx;
		if (this.overlay_canvas)
			this.positionOverlayCanvas();
		this.progress = 0;
		this.last_progress = -1;
		if (this.areAllTexturesLoaded())
			this.go_textures_done();
		else
		{
			var ms_elapsed = Date.now() - this.start_time;
			var multiplier = 1;
			if (this.isTizen)
				multiplier = this.devicePixelRatio;
			if (ctx)
			{
				if (this.loaderstyle !== 3 && ms_elapsed >= 500 && this.last_progress != this.progress)
				{
					ctx.clearRect(0, 0, this.width, this.height);
					var mx = this.width / (2 * multiplier);
					var my = this.height / (2 * multiplier);
					var haslogo = (this.loaderstyle === 0 && this.loaderlogo.complete);
					var hlw = 40;
					var hlh = 0;
					var logowidth = 80;
					if (haslogo)
					{
						logowidth = this.loaderlogo.width;
						hlw = logowidth / 2;
						hlh = this.loaderlogo.height / 2;
						ctx.drawImage(this.loaderlogo, cr.floor(mx - hlw), cr.floor(my - hlh));
					}
					if (this.loaderstyle <= 1)
					{
						my += hlh + (haslogo ? 12 : 0);
						mx -= hlw;
						mx = cr.floor(mx) + 0.5;
						my = cr.floor(my) + 0.5;
						ctx.fillStyle = "DodgerBlue";
						ctx.fillRect(mx, my, Math.floor(logowidth * this.progress), 6);
						ctx.strokeStyle = "black";
						ctx.strokeRect(mx, my, logowidth, 6);
						ctx.strokeStyle = "white";
						ctx.strokeRect(mx - 1, my - 1, logowidth + 2, 8);
					}
					else if (this.loaderstyle === 2)
					{
						ctx.font = "12pt Arial";
						ctx.fillStyle = "#999";
						ctx.textBaseLine = "middle";
						var percent_text = Math.round(this.progress * 100) + "%";
						var text_dim = ctx.measureText ? ctx.measureText(percent_text) : null;
						var text_width = text_dim ? text_dim.width : 0;
						ctx.fillText(percent_text, mx - (text_width / 2), my);
					}
				}
				this.last_progress = this.progress;
			}
			setTimeout((function (self) { return function () { self.go(); }; })(this), 100);
		}
	};
	Runtime.prototype.go_textures_done = function ()
	{
		if (this.overlay_canvas)
		{
			this.canvas.parentNode.removeChild(this.overlay_canvas);
			this.overlay_ctx = null;
			this.overlay_canvas = null;
		}
		this.start_time = Date.now();
		this.last_fps_time = cr.performance_now();       // for counting framerate
		var i, len, t;
		if (this.uses_loader_layout)
		{
			for (i = 0, len = this.types_by_index.length; i < len; i++)
			{
				t = this.types_by_index[i];
				if (!t.is_family && !t.isOnLoaderLayout && t.plugin.is_world)
				{
					t.onCreate();
					cr.seal(t);
				}
			}
		}
		else
			this.isloading = false;
		for (i = 0, len = this.layouts_by_index.length; i < len; i++)
		{
			this.layouts_by_index[i].createGlobalNonWorlds();
		}
		if (this.fullscreen_mode >= 2)
		{
			var orig_aspect = this.original_width / this.original_height;
			var cur_aspect = this.width / this.height;
			if ((this.fullscreen_mode !== 2 && cur_aspect > orig_aspect) || (this.fullscreen_mode === 2 && cur_aspect < orig_aspect))
				this.aspect_scale = this.height / this.original_height;
			else
				this.aspect_scale = this.width / this.original_width;
		}
		if (this.first_layout)
			this.layouts[this.first_layout].startRunning();
		else
			this.layouts_by_index[0].startRunning();
;
		if (!this.uses_loader_layout)
		{
			this.loadingprogress = 1;
			this.trigger(cr.system_object.prototype.cnds.OnLoadFinished, null);
		}
		this.tick();
		if (this.isDirectCanvas)
			AppMobi["webview"]["execute"]("onGameReady();");
	};
	var raf = window["requestAnimationFrame"] ||
	  window["mozRequestAnimationFrame"]    ||
	  window["webkitRequestAnimationFrame"] ||
	  window["msRequestAnimationFrame"]     ||
	  window["oRequestAnimationFrame"];
	Runtime.prototype.tick = function ()
	{
		if (!this.running_layout)
			return;
		if (this.isArcade)
		{
			var curwidth = jQuery(window).width();
			var curheight = jQuery(window).height();
			if (this.lastwidth !== curwidth || this.lastheight !== curheight)
			{
				this.lastwidth = curwidth;
				this.lastheight = curheight;
				this["setSize"](curwidth, curheight);
			}
		}
		var logic_start = cr.performance_now();
		if (this.isloading)
		{
			var done = this.areAllTexturesLoaded();		// updates this.progress
			this.loadingprogress = this.progress;
			if (done)
			{
				this.isloading = false;
				this.progress = 1;
				this.trigger(cr.system_object.prototype.cnds.OnLoadFinished, null);
			}
		}
		this.logic();
		if ((this.redraw || this.isCocoonJs) && !this.is_WebGL_context_lost && !this.suspendDrawing)
		{
			this.redraw = false;
			if (this.glwrap)
				this.drawGL();
			else
				this.draw();
			if (this.snapshotCanvas)
			{
				if (this.canvas && this.canvas.toDataURL)
				{
					this.snapshotData = this.canvas.toDataURL(this.snapshotCanvas[0], this.snapshotCanvas[1]);
					this.trigger(cr.system_object.prototype.cnds.OnCanvasSnapshot, null);
				}
				this.snapshotCanvas = null;
			}
		}
		this.tickcount++;
		this.execcount++;
		this.framecount++;
		this.logictime += cr.performance_now() - logic_start;
		if (this.isSuspended)
			return;
		if (raf)
			this.raf_id = raf(this.tickFunc, this.canvas);
		else
		{
			this.timeout_id = setTimeout(this.tickFunc, this.isMobile ? 1 : 16);
		}
	};
	Runtime.prototype.logic = function ()
	{
		var i, leni, j, lenj, k, lenk, type, inst, binst;
		var cur_time = cr.performance_now();
		if (cur_time - this.last_fps_time >= 1000)  // every 1 second
		{
			this.last_fps_time += 1000;
			this.fps = this.framecount;
			this.framecount = 0;
			this.cpuutilisation = this.logictime;
			this.logictime = 0;
		}
		if (this.measuring_dt)
		{
			if (this.last_tick_time !== 0)
			{
				var ms_diff = cur_time - this.last_tick_time;
				if (ms_diff === 0)
				{
					this.zeroDtCount++;
					if (this.zeroDtCout >= 10)
						this.measuring_dt = false;
					this.dt1 = 1.0 / 60.0;            // 60fps assumed (0.01666...)
				}
				else
				{
					this.dt1 = ms_diff / 1000.0; // dt measured in seconds
					if (this.dt1 > 0.5)
						this.dt1 = 0;
					else if (this.dt1 > 0.1)
						this.dt1 = 0.1;
				}
			}
			this.last_tick_time = cur_time;
		}
        this.dt = this.dt1 * this.timescale;
        this.kahanTime.add(this.dt);
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || document["fullScreen"] || this.isNodeFullscreen);
		if (this.fullscreen_mode >= 2 /* scale */ || (isfullscreen && this.fullscreen_scaling > 0))
		{
			var orig_aspect = this.original_width / this.original_height;
			var cur_aspect = this.width / this.height;
			var mode = this.fullscreen_mode;
			if (isfullscreen && this.fullscreen_scaling > 0)
				mode = this.fullscreen_scaling;
			if ((mode !== 2 && cur_aspect > orig_aspect) || (mode === 2 && cur_aspect < orig_aspect))
			{
				this.aspect_scale = this.height / this.original_height;
			}
			else
			{
				this.aspect_scale = this.width / this.original_width;
			}
			if (this.running_layout)
			{
				this.running_layout.scrollToX(this.running_layout.scrollX);
				this.running_layout.scrollToY(this.running_layout.scrollY);
			}
		}
		else
			this.aspect_scale = 1;
		this.ClearDeathRow();
		this.isInOnDestroy++;
		this.system.runWaits();		// prevent instance list changing
		this.isInOnDestroy--;
		this.ClearDeathRow();		// allow instance list changing
		this.isInOnDestroy++;
		for (i = 0, leni = this.types_by_index.length; i < leni; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family || (!type.behaviors.length && !type.families.length))
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
				{
					inst.behavior_insts[k].tick();
				}
			}
		}
		for (i = 0, leni = this.types_by_index.length; i < leni; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family || (!type.behaviors.length && !type.families.length))
				continue;	// type doesn't have any behaviors
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
				{
					binst = inst.behavior_insts[k];
					if (binst.posttick)
						binst.posttick();
				}
			}
		}
        var tickarr = this.objects_to_tick.valuesRef();
        for (i = 0, leni = tickarr.length; i < leni; i++)
            tickarr[i].tick();
		this.isInOnDestroy--;		// end preventing instance lists from being changed
		this.handleSaveLoad();		// save/load now if queued
		i = 0;
		while (this.changelayout && i++ < 10)
		{
			this.doChangeLayout(this.changelayout);
		}
        for (i = 0, leni = this.eventsheets_by_index.length; i < leni; i++)
            this.eventsheets_by_index[i].hasRun = false;
		if (this.running_layout.event_sheet)
			this.running_layout.event_sheet.run();
		this.registered_collisions.length = 0;
		this.layout_first_tick = false;
		this.isInOnDestroy++;		// prevent instance lists from being changed
		for (i = 0, leni = this.types_by_index.length; i < leni; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family || (!type.behaviors.length && !type.families.length))
				continue;	// type doesn't have any behaviors
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				var inst = type.instances[j];
				for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
				{
					binst = inst.behavior_insts[k];
					if (binst.tick2)
						binst.tick2();
				}
			}
		}
        tickarr = this.objects_to_tick2.valuesRef();
        for (i = 0, leni = tickarr.length; i < leni; i++)
            tickarr[i].tick2();
		this.isInOnDestroy--;		// end preventing instance lists from being changed
	};
	Runtime.prototype.doChangeLayout = function (changeToLayout)
	{
;
		var prev_layout = this.running_layout;
		this.running_layout.stopRunning();
		var i, len, j, lenj, k, lenk, type, inst, binst;
		if (this.glwrap)
		{
			for (i = 0, len = this.types_by_index.length; i < len; i++)
			{
				type = this.types_by_index[i];
				if (type.is_family)
					continue;
				if (type.unloadTextures && (!type.global || type.instances.length === 0) && changeToLayout.initial_types.indexOf(type) === -1)
				{
					type.unloadTextures();
				}
			}
		}
		if (prev_layout == changeToLayout)
			this.system.waits.length = 0;
		changeToLayout.startRunning();
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			type = this.types_by_index[i];
			if (!type.global && !type.plugin.singleglobal)
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				if (inst.onLayoutChange)
					inst.onLayoutChange();
				if (inst.behavior_insts)
				{
					for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
					{
						binst = inst.behavior_insts[k];
						if (binst.onLayoutChange)
							binst.onLayoutChange();
					}
				}
			}
		}
		this.redraw = true;
		this.layout_first_tick = true;
		this.ClearDeathRow();
	};
    Runtime.prototype.tickMe = function (inst)
    {
        this.objects_to_tick.add(inst);
    };
	Runtime.prototype.untickMe = function (inst)
	{
		this.objects_to_tick.remove(inst);
	};
	Runtime.prototype.tick2Me = function (inst)
    {
        this.objects_to_tick2.add(inst);
    };
	Runtime.prototype.untick2Me = function (inst)
	{
		this.objects_to_tick2.remove(inst);
	};
    Runtime.prototype.getDt = function (inst)
    {
        if (!inst || inst.my_timescale === -1.0)
            return this.dt;
        return this.dt1 * inst.my_timescale;
    };
	Runtime.prototype.draw = function ()
	{
		this.running_layout.draw(this.ctx);
		if (this.isDirectCanvas)
			this.ctx["present"]();
	};
	Runtime.prototype.drawGL = function ()
	{
		this.running_layout.drawGL(this.glwrap);
	};
	Runtime.prototype.addDestroyCallback = function (f)
	{
		if (f)
			this.destroycallbacks.push(f);
	};
	Runtime.prototype.removeDestroyCallback = function (f)
	{
		cr.arrayFindRemove(this.destroycallbacks, f);
	};
	Runtime.prototype.getObjectByUID = function (uid_)
	{
;
		return this.objectsByUid[uid_.toString()];
	};
	Runtime.prototype.DestroyInstance = function (inst)
	{
		var i, len;
		if (!this.deathRow.contains(inst))
		{
			this.deathRow.add(inst);
			if (inst.is_contained)
			{
				for (i = 0, len = inst.siblings.length; i < len; i++)
				{
					this.DestroyInstance(inst.siblings[i]);
				}
			}
			if (this.isInClearDeathRow)
				this.deathRow.values_cache.push(inst);
			this.isInOnDestroy++;		// support recursion
			this.trigger(Object.getPrototypeOf(inst.type.plugin).cnds.OnDestroyed, inst);
			this.isInOnDestroy--;
		}
	};
	Runtime.prototype.ClearDeathRow = function ()
	{
		var inst, index, type, instances, binst;
		var i, j, k, leni, lenj, lenk;
		var w, f;
		this.isInClearDeathRow = true;
		for (i = 0, leni = this.createRow.length; i < leni; i++)
		{
			inst = this.createRow[i];
			type = inst.type;
			type.instances.push(inst);
			type.stale_iids = true;
			for (j = 0, lenj = type.families.length; j < lenj; j++)
			{
				type.families[j].instances.push(inst);
				type.families[j].stale_iids = true;
			}
		}
		this.createRow.length = 0;
		var arr = this.deathRow.valuesRef();	// get array of items from set
		for (i = 0; i < arr.length; i++)		// check array length every time in case it changes
		{
			inst = arr[i];
			type = inst.type;
			instances = type.instances;
			for (j = 0, lenj = this.destroycallbacks.length; j < lenj; j++)
				this.destroycallbacks[j](inst);
			cr.arrayFindRemove(instances, inst);
			if (inst.layer)
			{
				cr.arrayRemove(inst.layer.instances, inst.get_zindex());
				inst.layer.zindices_stale = true;
			}
			for (j = 0, lenj = type.families.length; j < lenj; j++)
			{
				cr.arrayFindRemove(type.families[j].instances, inst);
				type.families[j].stale_iids = true;
			}
			if (inst.behavior_insts)
			{
				for (j = 0, lenj = inst.behavior_insts.length; j < lenj; j++)
				{
					binst = inst.behavior_insts[j];
					if (binst.onDestroy)
						binst.onDestroy();
					binst.behavior.my_instances.remove(inst);
				}
			}
            this.objects_to_tick.remove(inst);
			this.objects_to_tick2.remove(inst);
			for (j = 0, lenj = this.system.waits.length; j < lenj; j++)
			{
				w = this.system.waits[j];
				if (w.sols.hasOwnProperty(type.index))
					cr.arrayFindRemove(w.sols[type.index].insts, inst);
				if (!type.is_family)
				{
					for (k = 0, lenk = type.families.length; k < lenk; k++)
					{
						f = type.families[k];
						if (w.sols.hasOwnProperty(f.index))
							cr.arrayFindRemove(w.sols[f.index].insts, inst);
					}
				}
			}
			if (inst.onDestroy)
				inst.onDestroy();
			if (this.objectsByUid.hasOwnProperty(inst.uid.toString()))
				delete this.objectsByUid[inst.uid.toString()];
			this.objectcount--;
			if (type.deadCache.length < 64)
				type.deadCache.push(inst);
			type.stale_iids = true;
		}
		if (!this.deathRow.isEmpty())
			this.redraw = true;
		this.deathRow.clear();
		this.isInClearDeathRow = false;
	};
	Runtime.prototype.createInstance = function (type, layer, sx, sy)
	{
		if (type.is_family)
		{
			var i = cr.floor(Math.random() * type.members.length);
			return this.createInstance(type.members[i], layer, sx, sy);
		}
		if (!type.default_instance)
		{
			return null;
		}
		return this.createInstanceFromInit(type.default_instance, layer, false, sx, sy, false);
	};
	var all_behaviors = [];
	Runtime.prototype.createInstanceFromInit = function (initial_inst, layer, is_startup_instance, sx, sy, skip_siblings)
	{
		var i, len, j, lenj, p, effect_fallback, x, y;
		if (!initial_inst)
			return null;
		var type = this.types_by_index[initial_inst[1]];
;
;
		var is_world = type.plugin.is_world;
;
		if (this.isloading && is_world && !type.isOnLoaderLayout)
			return null;
		if (is_world && !this.glwrap && initial_inst[0][11] === 11)
			return null;
		var original_layer = layer;
		if (!is_world)
			layer = null;
		var inst;
		if (type.deadCache.length)
		{
			inst = type.deadCache.pop();
			inst.recycled = true;
			type.plugin.Instance.call(inst, type);
		}
		else
		{
			inst = new type.plugin.Instance(type);
			inst.recycled = false;
		}
		if (is_startup_instance && !skip_siblings)
			inst.uid = initial_inst[2];
		else
			inst.uid = this.next_uid++;
		this.objectsByUid[inst.uid.toString()] = inst;
		inst.puid = this.next_puid++;
		inst.iid = 0;
		inst.get_iid = cr.inst_get_iid;
		type.stale_iids = true;
		var initial_vars = initial_inst[3];
		if (inst.recycled)
		{
			for (i = 0, len = initial_vars.length; i < len; i++)
				inst.instance_vars[i] = initial_vars[i];
			cr.wipe(inst.extra);
		}
		else
		{
			inst.instance_vars = initial_vars.slice(0);
			inst.extra = {};
		}
		if (is_world)
		{
			var wm = initial_inst[0];
;
			inst.x = cr.is_undefined(sx) ? wm[0] : sx;
			inst.y = cr.is_undefined(sy) ? wm[1] : sy;
			inst.z = wm[2];
			inst.width = wm[3];
			inst.height = wm[4];
			inst.depth = wm[5];
			inst.angle = wm[6];
			inst.opacity = wm[7];
			inst.hotspotX = wm[8];
			inst.hotspotY = wm[9];
			inst.blend_mode = wm[10];
			effect_fallback = wm[11];
			if (!this.glwrap && type.effect_types.length)	// no WebGL renderer and shaders used
				inst.blend_mode = effect_fallback;			// use fallback blend mode - destroy mode was handled above
			inst.compositeOp = cr.effectToCompositeOp(inst.blend_mode);
			if (this.gl)
				cr.setGLBlend(inst, inst.blend_mode, this.gl);
			if (inst.recycled)
			{
				for (i = 0, len = wm[12].length; i < len; i++)
				{
					for (j = 0, lenj = wm[12][i].length; j < lenj; j++)
						inst.effect_params[i][j] = wm[12][i][j];
				}
				inst.bbox.set(0, 0, 0, 0);
				inst.bquad.set_from_rect(inst.bbox);
				inst.bbox_changed_callbacks.length = 0;
			}
			else
			{
				inst.effect_params = wm[12].slice(0);
				for (i = 0, len = inst.effect_params.length; i < len; i++)
					inst.effect_params[i] = wm[12][i].slice(0);
				inst.active_effect_types = [];
				inst.active_effect_flags = [];
				inst.active_effect_flags.length = type.effect_types.length;
				inst.bbox = new cr.rect(0, 0, 0, 0);
				inst.bquad = new cr.quad();
				inst.bbox_changed_callbacks = [];
				inst.set_bbox_changed = cr.set_bbox_changed;
				inst.add_bbox_changed_callback = cr.add_bbox_changed_callback;
				inst.contains_pt = cr.inst_contains_pt;
				inst.update_bbox = cr.update_bbox;
				inst.get_zindex = cr.inst_get_zindex;
			}
			for (i = 0, len = type.effect_types.length; i < len; i++)
				inst.active_effect_flags[i] = true;
			inst.updateActiveEffects = cr.inst_updateActiveEffects;
			inst.updateActiveEffects();
			inst.uses_shaders = !!inst.active_effect_types.length;
			inst.bbox_changed = true;
			inst.visible = true;
            inst.my_timescale = -1.0;
			inst.layer = layer;
			inst.zindex = layer.instances.length;	// will be placed at top of current layer
			if (typeof inst.collision_poly === "undefined")
				inst.collision_poly = null;
			inst.collisionsEnabled = true;
			this.redraw = true;
		}
		inst.toString = cr.inst_toString;
		var initial_props, binst;
		all_behaviors.length = 0;
		for (i = 0, len = type.families.length; i < len; i++)
		{
			all_behaviors.push.apply(all_behaviors, type.families[i].behaviors);
		}
		all_behaviors.push.apply(all_behaviors, type.behaviors);
		if (inst.recycled)
		{
			for (i = 0, len = all_behaviors.length; i < len; i++)
			{
				var btype = all_behaviors[i];
				binst = inst.behavior_insts[i];
				binst.recycled = true;
				btype.behavior.Instance.call(binst, btype, inst);
				initial_props = initial_inst[4][i];
				for (j = 0, lenj = initial_props.length; j < lenj; j++)
					binst.properties[j] = initial_props[j];
				binst.onCreate();
				btype.behavior.my_instances.add(inst);
			}
		}
		else
		{
			inst.behavior_insts = [];
			for (i = 0, len = all_behaviors.length; i < len; i++)
			{
				var btype = all_behaviors[i];
				var binst = new btype.behavior.Instance(btype, inst);
				binst.recycled = false;
				binst.properties = initial_inst[4][i].slice(0);
				binst.onCreate();
				cr.seal(binst);
				inst.behavior_insts.push(binst);
				btype.behavior.my_instances.add(inst);
			}
		}
		initial_props = initial_inst[5];
		if (inst.recycled)
		{
			for (i = 0, len = initial_props.length; i < len; i++)
				inst.properties[i] = initial_props[i];
		}
		else
			inst.properties = initial_props.slice(0);
		this.createRow.push(inst);
		if (layer)
		{
;
			layer.instances.push(inst);
		}
		this.objectcount++;
		if (type.is_contained)
		{
			inst.is_contained = true;
			if (inst.recycled)
				inst.siblings.length = 0;
			else
				inst.siblings = [];			// note: should not include self in siblings
			if (!is_startup_instance && !skip_siblings)	// layout links initial instances
			{
				for (i = 0, len = type.container.length; i < len; i++)
				{
					if (type.container[i] === type)
						continue;
					if (!type.container[i].default_instance)
					{
						return null;
					}
					inst.siblings.push(this.createInstanceFromInit(type.container[i].default_instance, original_layer, false, is_world ? inst.x : sx, is_world ? inst.y : sy, true));
				}
				for (i = 0, len = inst.siblings.length; i < len; i++)
				{
					inst.siblings[i].siblings.push(inst);
					for (j = 0; j < len; j++)
					{
						if (i !== j)
							inst.siblings[i].siblings.push(inst.siblings[j]);
					}
				}
			}
		}
		else
		{
			inst.is_contained = false;
			inst.siblings = null;
		}
		inst.onCreate();
		if (!inst.recycled)
			cr.seal(inst);
		for (i = 0, len = inst.behavior_insts.length; i < len; i++)
		{
			if (inst.behavior_insts[i].postCreate)
				inst.behavior_insts[i].postCreate();
		}
		return inst;
	};
	Runtime.prototype.getLayerByName = function (layer_name)
	{
		var i, len;
		for (i = 0, len = this.running_layout.layers.length; i < len; i++)
		{
			var layer = this.running_layout.layers[i];
			if (layer.name.toLowerCase() === layer_name.toLowerCase())
				return layer;
		}
		return null;
	};
	Runtime.prototype.getLayerByNumber = function (index)
	{
		index = cr.floor(index);
		if (index < 0)
			index = 0;
		if (index >= this.running_layout.layers.length)
			index = this.running_layout.layers.length - 1;
		return this.running_layout.layers[index];
	};
	Runtime.prototype.getLayer = function (l)
	{
		if (cr.is_number(l))
			return this.getLayerByNumber(l);
		else
			return this.getLayerByName(l.toString());
	};
	Runtime.prototype.clearSol = function (solModifiers)
	{
		var i, len;
		for (i = 0, len = solModifiers.length; i < len; i++)
		{
			solModifiers[i].getCurrentSol().select_all = true;
		}
	};
	Runtime.prototype.pushCleanSol = function (solModifiers)
	{
		var i, len;
		for (i = 0, len = solModifiers.length; i < len; i++)
		{
			solModifiers[i].pushCleanSol();
		}
	};
	Runtime.prototype.pushCopySol = function (solModifiers)
	{
		var i, len;
		for (i = 0, len = solModifiers.length; i < len; i++)
		{
			solModifiers[i].pushCopySol();
		}
	};
	Runtime.prototype.popSol = function (solModifiers)
	{
		var i, len;
		for (i = 0, len = solModifiers.length; i < len; i++)
		{
			solModifiers[i].popSol();
		}
	};
	Runtime.prototype.testAndSelectCanvasPointOverlap = function (type, ptx, pty, inverted)
	{
		var sol = type.getCurrentSol();
		var i, j, inst, len;
		var lx, ly;
		if (sol.select_all)
		{
			if (!inverted)
			{
				sol.select_all = false;
				sol.instances.length = 0;   // clear contents
			}
			for (i = 0, len = type.instances.length; i < len; i++)
			{
				inst = type.instances[i];
				inst.update_bbox();
				lx = inst.layer.canvasToLayer(ptx, pty, true);
				ly = inst.layer.canvasToLayer(ptx, pty, false);
				if (inst.contains_pt(lx, ly))
				{
					if (inverted)
						return false;
					else
						sol.instances.push(inst);
				}
			}
		}
		else
		{
			j = 0;
			for (i = 0, len = sol.instances.length; i < len; i++)
			{
				inst = sol.instances[i];
				inst.update_bbox();
				lx = inst.layer.canvasToLayer(ptx, pty, true);
				ly = inst.layer.canvasToLayer(ptx, pty, false);
				if (inst.contains_pt(lx, ly))
				{
					if (inverted)
						return false;
					else
					{
						sol.instances[j] = sol.instances[i];
						j++;
					}
				}
			}
			if (!inverted)
				sol.instances.length = j;
		}
		type.applySolToContainer();
		if (inverted)
			return true;		// did not find anything overlapping
		else
			return sol.hasObjects();
	};
	Runtime.prototype.testOverlap = function (a, b)
	{
		if (!a || !b || a === b || !a.collisionsEnabled || !b.collisionsEnabled)
			return false;
		a.update_bbox();
		b.update_bbox();
		var layera = a.layer;
		var layerb = b.layer;
		var different_layers = (layera !== layerb && (layera.parallaxX !== layerb.parallaxX || layerb.parallaxY !== layerb.parallaxY || layera.scale !== layerb.scale || layera.angle !== layerb.angle || layera.zoomRate !== layerb.zoomRate));
		var i, len, x, y, haspolya, haspolyb, polya, polyb;
		if (!different_layers)	// same layers: easy check
		{
			if (!a.bbox.intersects_rect(b.bbox))
				return false;
			if (!a.bquad.intersects_quad(b.bquad))
				return false;
			haspolya = (a.collision_poly && !a.collision_poly.is_empty());
			haspolyb = (b.collision_poly && !b.collision_poly.is_empty());
			if (!haspolya && !haspolyb)
				return true;
			if (haspolya)
			{
				a.collision_poly.cache_poly(a.width, a.height, a.angle);
				polya = a.collision_poly;
			}
			else
			{
				this.temp_poly.set_from_quad(a.bquad, a.x, a.y, a.width, a.height);
				polya = this.temp_poly;
			}
			if (haspolyb)
			{
				b.collision_poly.cache_poly(b.width, b.height, b.angle);
				polyb = b.collision_poly;
			}
			else
			{
				this.temp_poly.set_from_quad(b.bquad, b.x, b.y, b.width, b.height);
				polyb = this.temp_poly;
			}
			return polya.intersects_poly(polyb, b.x - a.x, b.y - a.y);
		}
		else	// different layers: need to do full translated check
		{
			haspolya = (a.collision_poly && !a.collision_poly.is_empty());
			haspolyb = (b.collision_poly && !b.collision_poly.is_empty());
			if (haspolya)
			{
				a.collision_poly.cache_poly(a.width, a.height, a.angle);
				this.temp_poly.set_from_poly(a.collision_poly);
			}
			else
			{
				this.temp_poly.set_from_quad(a.bquad, a.x, a.y, a.width, a.height);
			}
			polya = this.temp_poly;
			if (haspolyb)
			{
				b.collision_poly.cache_poly(b.width, b.height, b.angle);
				this.temp_poly2.set_from_poly(b.collision_poly);
			}
			else
			{
				this.temp_poly2.set_from_quad(b.bquad, b.x, b.y, b.width, b.height);
			}
			polyb = this.temp_poly2;
			for (i = 0, len = polya.pts_count; i < len; i++)
			{
				x = polya.pts_cache[i*2];
				y = polya.pts_cache[i*2+1];
				polya.pts_cache[i*2] = layera.layerToCanvas(x + a.x, y + a.y, true);
				polya.pts_cache[i*2+1] = layera.layerToCanvas(x + a.x, y + a.y, false);
			}
			for (i = 0, len = polyb.pts_count; i < len; i++)
			{
				x = polyb.pts_cache[i*2];
				y = polyb.pts_cache[i*2+1];
				polyb.pts_cache[i*2] = layerb.layerToCanvas(x + b.x, y + b.y, true);
				polyb.pts_cache[i*2+1] = layerb.layerToCanvas(x + b.x, y + b.y, false);
			}
			return polya.intersects_poly(polyb, 0, 0);
		}
	};
	var tmpQuad = new cr.quad();
	var tmpRect = new cr.rect(0, 0, 0, 0);
	Runtime.prototype.testRectOverlap = function (r, b)
	{
		if (!b || !b.collisionsEnabled)
			return false;
		b.update_bbox();
		var layerb = b.layer;
		var haspolyb, polyb;
		if (!b.bbox.intersects_rect(r))
			return false;
		tmpQuad.set_from_rect(r);
		if (!b.bquad.intersects_quad(tmpQuad))
			return false;
		haspolyb = (b.collision_poly && !b.collision_poly.is_empty());
		if (!haspolyb)
			return true;
		b.collision_poly.cache_poly(b.width, b.height, b.angle);
		tmpQuad.offset(-r.left, -r.top);
		this.temp_poly.set_from_quad(tmpQuad, 0, 0, 1, 1);
		return b.collision_poly.intersects_poly(this.temp_poly, r.left - b.x, r.top - b.y);
	};
	Runtime.prototype.testSegmentOverlap = function (x1, y1, x2, y2, b)
	{
		if (!b || !b.collisionsEnabled)
			return false;
		b.update_bbox();
		var layerb = b.layer;
		var haspolyb, polyb;
		tmpRect.set(cr.min(x1, x2), cr.min(y1, y2), cr.max(x1, x2), cr.max(y1, y2));
		if (!b.bbox.intersects_rect(tmpRect))
			return false;
		if (!b.bquad.intersects_segment(x1, y1, x2, y2))
			return false;
		haspolyb = (b.collision_poly && !b.collision_poly.is_empty());
		if (!haspolyb)
			return true;
		b.collision_poly.cache_poly(b.width, b.height, b.angle);
		return b.collision_poly.intersects_segment(b.x, b.y, x1, y1, x2, y2);
	};
	Runtime.prototype.typeHasBehavior = function (t, b)
	{
		if (!b)
			return false;
		var i, len, j, lenj, f;
		for (i = 0, len = t.behaviors.length; i < len; i++)
		{
			if (t.behaviors[i].behavior instanceof b)
				return true;
		}
		if (!t.is_family)
		{
			for (i = 0, len = t.families.length; i < len; i++)
			{
				f = t.families[i];
				for (j = 0, lenj = f.behaviors.length; j < lenj; j++)
				{
					if (f.behaviors[j].behavior instanceof b)
						return true;
				}
			}
		}
		return false;
	};
	Runtime.prototype.typeHasNoSaveBehavior = function (t)
	{
		return this.typeHasBehavior(t, cr.behaviors.NoSave);
	};
	Runtime.prototype.typeHasPersistBehavior = function (t)
	{
		return this.typeHasBehavior(t, cr.behaviors.Persist);
	};
	Runtime.prototype.getSolidBehavior = function ()
	{
		if (!cr.behaviors.solid)
			return null;
		var i, len;
		for (i = 0, len = this.behaviors.length; i < len; i++)
		{
			if (this.behaviors[i] instanceof cr.behaviors.solid)
				return this.behaviors[i];
		}
		return null;
	};
	Runtime.prototype.testOverlapSolid = function (inst)
	{
		var solid = this.getSolidBehavior();
		if (!solid)
			return null;
		var i, len, s;
		var solids = solid.my_instances.valuesRef();
		for (i = 0, len = solids.length; i < len; ++i)
		{
			s = solids[i];
			if (!s.extra.solidEnabled)
				continue;
			if (this.testOverlap(inst, s))
				return s;
		}
		return null;
	};
	Runtime.prototype.testRectOverlapSolid = function (r)
	{
		var solid = this.getSolidBehavior();
		if (!solid)
			return null;
		var i, len, s;
		var solids = solid.my_instances.valuesRef();
		for (i = 0, len = solids.length; i < len; ++i)
		{
			s = solids[i];
			if (!s.extra.solidEnabled)
				continue;
			if (this.testRectOverlap(r, s))
				return s;
		}
		return null;
	};
	var jumpthru_array_ret = [];
	Runtime.prototype.testOverlapJumpThru = function (inst, all)
	{
		var jumpthru = null;
		var i, len, s;
		if (!cr.behaviors.jumpthru)
			return null;
		for (i = 0, len = this.behaviors.length; i < len; i++)
		{
			if (this.behaviors[i] instanceof cr.behaviors.jumpthru)
			{
				jumpthru = this.behaviors[i];
				break;
			}
		}
		if (!jumpthru)
			return null;
		var ret = null;
		if (all)
		{
			ret = jumpthru_array_ret;
			ret.length = 0;
		}
		var jumpthrus = jumpthru.my_instances.valuesRef();
		for (i = 0, len = jumpthrus.length; i < len; ++i)
		{
			s = jumpthrus[i];
			if (!s.extra.jumpthruEnabled)
				continue;
			if (this.testOverlap(inst, s))
			{
				if (all)
					ret.push(s);
				else
					return s;
			}
		}
		return ret;
	};
	Runtime.prototype.pushOutSolid = function (inst, xdir, ydir, dist, include_jumpthrus, specific_jumpthru)
	{
		var push_dist = dist || 50;
		var oldx = inst.x
		var oldy = inst.y;
		var i;
		var last_overlapped = null, secondlast_overlapped = null;
		for (i = 0; i < push_dist; i++)
		{
			inst.x = (oldx + (xdir * i));
			inst.y = (oldy + (ydir * i));
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, last_overlapped))
			{
				last_overlapped = this.testOverlapSolid(inst);
				if (last_overlapped)
					secondlast_overlapped = last_overlapped;
				if (!last_overlapped)
				{
					if (include_jumpthrus)
					{
						if (specific_jumpthru)
							last_overlapped = (this.testOverlap(inst, specific_jumpthru) ? specific_jumpthru : null);
						else
							last_overlapped = this.testOverlapJumpThru(inst);
						if (last_overlapped)
							secondlast_overlapped = last_overlapped;
					}
					if (!last_overlapped)
					{
						if (secondlast_overlapped)
							this.pushInFractional(inst, xdir, ydir, secondlast_overlapped, 16);
						return true;
					}
				}
			}
		}
		inst.x = oldx;
		inst.y = oldy;
		inst.set_bbox_changed();
		return false;
	};
	Runtime.prototype.pushOut = function (inst, xdir, ydir, dist, otherinst)
	{
		var push_dist = dist || 50;
		var oldx = inst.x
		var oldy = inst.y;
		var i;
		for (i = 0; i < push_dist; i++)
		{
			inst.x = (oldx + (xdir * i));
			inst.y = (oldy + (ydir * i));
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, otherinst))
				return true;
		}
		inst.x = oldx;
		inst.y = oldy;
		inst.set_bbox_changed();
		return false;
	};
	Runtime.prototype.pushInFractional = function (inst, xdir, ydir, obj, limit)
	{
		var divisor = 2;
		var frac;
		var forward = false;
		var overlapping = false;
		var bestx = inst.x;
		var besty = inst.y;
		while (divisor <= limit)
		{
			frac = 1 / divisor;
			divisor *= 2;
			inst.x += xdir * frac * (forward ? 1 : -1);
			inst.y += ydir * frac * (forward ? 1 : -1);
			inst.set_bbox_changed();
			if (this.testOverlap(inst, obj))
			{
				forward = true;
				overlapping = true;
			}
			else
			{
				forward = false;
				overlapping = false;
				bestx = inst.x;
				besty = inst.y;
			}
		}
		if (overlapping)
		{
			inst.x = bestx;
			inst.y = besty;
			inst.set_bbox_changed();
		}
	};
	Runtime.prototype.pushOutSolidNearest = function (inst, max_dist_)
	{
		var max_dist = (cr.is_undefined(max_dist_) ? 100 : max_dist_);
		var dist = 0;
		var oldx = inst.x
		var oldy = inst.y;
		var dir = 0;
		var dx = 0, dy = 0;
		var last_overlapped = this.testOverlapSolid(inst);
		if (!last_overlapped)
			return true;		// already clear of solids
		while (dist <= max_dist)
		{
			switch (dir) {
			case 0:		dx = 0; dy = -1; dist++; break;
			case 1:		dx = 1; dy = -1; break;
			case 2:		dx = 1; dy = 0; break;
			case 3:		dx = 1; dy = 1; break;
			case 4:		dx = 0; dy = 1; break;
			case 5:		dx = -1; dy = 1; break;
			case 6:		dx = -1; dy = 0; break;
			case 7:		dx = -1; dy = -1; break;
			}
			dir = (dir + 1) % 8;
			inst.x = cr.floor(oldx + (dx * dist));
			inst.y = cr.floor(oldy + (dy * dist));
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, last_overlapped))
			{
				last_overlapped = this.testOverlapSolid(inst);
				if (!last_overlapped)
					return true;
			}
		}
		inst.x = oldx;
		inst.y = oldy;
		inst.set_bbox_changed();
		return false;
	};
	Runtime.prototype.registerCollision = function (a, b)
	{
		if (!a.collisionsEnabled || !b.collisionsEnabled)
			return;
		this.registered_collisions.push([a, b]);
	};
	Runtime.prototype.checkRegisteredCollision = function (a, b)
	{
		var i, len, x;
		for (i = 0, len = this.registered_collisions.length; i < len; i++)
		{
			x = this.registered_collisions[i];
			if ((x[0] == a && x[1] == b) || (x[0] == b && x[1] == a))
				return true;
		}
		return false;
	};
	Runtime.prototype.calculateSolidBounceAngle = function(inst, startx, starty, obj)
	{
		var objx = inst.x;
		var objy = inst.y;
		var radius = cr.max(10, cr.distanceTo(startx, starty, objx, objy));
		var startangle = cr.angleTo(startx, starty, objx, objy);
		var firstsolid = obj || this.testOverlapSolid(inst);
		if (!firstsolid)
			return cr.clamp_angle(startangle + cr.PI);
		var cursolid = firstsolid;
		var i, curangle, anticlockwise_free_angle, clockwise_free_angle;
		var increment = cr.to_radians(5);	// 5 degree increments
		for (i = 1; i < 36; i++)
		{
			curangle = startangle - i * increment;
			inst.x = startx + Math.cos(curangle) * radius;
			inst.y = starty + Math.sin(curangle) * radius;
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, cursolid))
			{
				cursolid = obj ? null : this.testOverlapSolid(inst);
				if (!cursolid)
				{
					anticlockwise_free_angle = curangle;
					break;
				}
			}
		}
		if (i === 36)
			anticlockwise_free_angle = cr.clamp_angle(startangle + cr.PI);
		var cursolid = firstsolid;
		for (i = 1; i < 36; i++)
		{
			curangle = startangle + i * increment;
			inst.x = startx + Math.cos(curangle) * radius;
			inst.y = starty + Math.sin(curangle) * radius;
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, cursolid))
			{
				cursolid = obj ? null : this.testOverlapSolid(inst);
				if (!cursolid)
				{
					clockwise_free_angle = curangle;
					break;
				}
			}
		}
		if (i === 36)
			clockwise_free_angle = cr.clamp_angle(startangle + cr.PI);
		inst.x = objx;
		inst.y = objy;
		inst.set_bbox_changed();
		if (clockwise_free_angle === anticlockwise_free_angle)
			return clockwise_free_angle;
		var half_diff = cr.angleDiff(clockwise_free_angle, anticlockwise_free_angle) / 2;
		var normal;
		if (cr.angleClockwise(clockwise_free_angle, anticlockwise_free_angle))
		{
			normal = cr.clamp_angle(anticlockwise_free_angle + half_diff + cr.PI);
		}
		else
		{
			normal = cr.clamp_angle(clockwise_free_angle + half_diff);
		}
;
		var vx = Math.cos(startangle);
		var vy = Math.sin(startangle);
		var nx = Math.cos(normal);
		var ny = Math.sin(normal);
		var v_dot_n = vx * nx + vy * ny;
		var rx = vx - 2 * v_dot_n * nx;
		var ry = vy - 2 * v_dot_n * ny;
		return cr.angleTo(0, 0, rx, ry);
	};
	var triggerSheetStack = [];
	var triggerSheetIndex = -1;
	Runtime.prototype.trigger = function (method, inst, value /* for fast triggers */)
	{
;
		if (!this.running_layout)
			return false;
		var sheet = this.running_layout.event_sheet;
		if (!sheet)
			return false;     // no event sheet active; nothing to trigger
		triggerSheetIndex++;
		if (triggerSheetIndex === triggerSheetStack.length)
			triggerSheetStack.push(new cr.ObjectSet());
		else
			triggerSheetStack[triggerSheetIndex].clear();
        var ret = this.triggerOnSheet(method, inst, sheet, value);
		triggerSheetIndex--;
		return ret;
    };
    Runtime.prototype.triggerOnSheet = function (method, inst, sheet, value)
    {
		var alreadyTriggeredSheets = triggerSheetStack[triggerSheetIndex];
        if (alreadyTriggeredSheets.contains(sheet))
            return false;
        alreadyTriggeredSheets.add(sheet);
        var includes = sheet.includes.valuesRef();
        var ret = false;
		var i, leni, r;
        for (i = 0, leni = includes.length; i < leni; i++)
        {
			if (includes[i].isActive())
			{
				r = this.triggerOnSheet(method, inst, includes[i].include_sheet, value);
				ret = ret || r;
			}
        }
		if (!inst)
		{
			r = this.triggerOnSheetForTypeName(method, inst, "system", sheet, value);
			ret = ret || r;
		}
		else
		{
			r = this.triggerOnSheetForTypeName(method, inst, inst.type.name, sheet, value);
			ret = ret || r;
			for (i = 0, leni = inst.type.families.length; i < leni; i++)
			{
				r = this.triggerOnSheetForTypeName(method, inst, inst.type.families[i].name, sheet, value);
				ret = ret || r;
			}
		}
		return ret;             // true if anything got triggered
	};
	Runtime.prototype.triggerOnSheetForTypeName = function (method, inst, type_name, sheet, value)
	{
		var i, leni;
		var ret = false, ret2 = false;
		var trig, index;
		var fasttrigger = (typeof value !== "undefined");
		var triggers = (fasttrigger ? sheet.fasttriggers : sheet.triggers);
		var obj_entry = triggers[type_name];
		if (!obj_entry)
			return ret;
		var triggers_list = null;
		for (i = 0, leni = obj_entry.length; i < leni; i++)
		{
			if (obj_entry[i].method == method)
			{
				triggers_list = obj_entry[i].evs;
				break;
			}
		}
		if (!triggers_list)
			return ret;
		var triggers_to_fire;
		if (fasttrigger)
		{
			triggers_to_fire = triggers_list[value];
		}
		else
		{
			triggers_to_fire = triggers_list;
		}
		if (!triggers_to_fire)
			return null;
		for (i = 0, leni = triggers_to_fire.length; i < leni; i++)
		{
			trig = triggers_to_fire[i][0];
			index = triggers_to_fire[i][1];
			ret2 = this.executeSingleTrigger(inst, type_name, trig, index);
			ret = ret || ret2;
		}
		return ret;
	};
	Runtime.prototype.executeSingleTrigger = function (inst, type_name, trig, index)
	{
		var i, leni;
		var ret = false;
		this.trigger_depth++;
		var current_event = this.getCurrentEventStack().current_event;
		if (current_event)
			this.pushCleanSol(current_event.solModifiersIncludingParents);
		var isrecursive = (this.trigger_depth > 1);		// calling trigger from inside another trigger
		this.pushCleanSol(trig.solModifiersIncludingParents);
		if (isrecursive)
			this.pushLocalVarStack();
		var event_stack = this.pushEventStack(trig);
		event_stack.current_event = trig;
		if (inst)
		{
			var sol = this.types[type_name].getCurrentSol();
			sol.select_all = false;
			sol.instances.length = 1;
			sol.instances[0] = inst;
			this.types[type_name].applySolToContainer();
		}
		var ok_to_run = true;
		if (trig.parent)
		{
			var temp_parents_arr = event_stack.temp_parents_arr;
			var cur_parent = trig.parent;
			while (cur_parent)
			{
				temp_parents_arr.push(cur_parent);
				cur_parent = cur_parent.parent;
			}
			temp_parents_arr.reverse();
			for (i = 0, leni = temp_parents_arr.length; i < leni; i++)
			{
				if (!temp_parents_arr[i].run_pretrigger())   // parent event failed
				{
					ok_to_run = false;
					break;
				}
			}
		}
		if (ok_to_run)
		{
			this.execcount++;
			if (trig.orblock)
				trig.run_orblocktrigger(index);
			else
				trig.run();
			ret = ret || event_stack.last_event_true;
		}
		this.popEventStack();
		if (isrecursive)
			this.popLocalVarStack();
		this.popSol(trig.solModifiersIncludingParents);
		if (current_event)
			this.popSol(current_event.solModifiersIncludingParents);
		if (this.isInOnDestroy === 0 && triggerSheetIndex === 0 && !this.isRunningEvents && (!this.deathRow.isEmpty() || this.createRow.length))
		{
			this.ClearDeathRow();
		}
		this.trigger_depth--;
		return ret;
	};
	Runtime.prototype.getCurrentCondition = function ()
	{
		var evinfo = this.getCurrentEventStack();
		return evinfo.current_event.conditions[evinfo.cndindex];
	};
	Runtime.prototype.getCurrentAction = function ()
	{
		var evinfo = this.getCurrentEventStack();
		return evinfo.current_event.actions[evinfo.actindex];
	};
	Runtime.prototype.pushLocalVarStack = function ()
	{
		this.localvar_stack_index++;
		if (this.localvar_stack_index >= this.localvar_stack.length)
			this.localvar_stack.push([]);
	};
	Runtime.prototype.popLocalVarStack = function ()
	{
;
		this.localvar_stack_index--;
	};
	Runtime.prototype.getCurrentLocalVarStack = function ()
	{
		return this.localvar_stack[this.localvar_stack_index];
	};
	Runtime.prototype.pushEventStack = function (cur_event)
	{
		this.event_stack_index++;
		if (this.event_stack_index >= this.event_stack.length)
			this.event_stack.push(new cr.eventStackFrame());
		var ret = this.getCurrentEventStack();
		ret.reset(cur_event);
		return ret;
	};
	Runtime.prototype.popEventStack = function ()
	{
;
		this.event_stack_index--;
	};
	Runtime.prototype.getCurrentEventStack = function ()
	{
		return this.event_stack[this.event_stack_index];
	};
	Runtime.prototype.pushLoopStack = function (name_)
	{
		this.loop_stack_index++;
		if (this.loop_stack_index >= this.loop_stack.length)
		{
			this.loop_stack.push(cr.seal({ name: name_, index: 0, stopped: false }));
		}
		var ret = this.getCurrentLoop();
		ret.name = name_;
		ret.index = 0;
		ret.stopped = false;
		return ret;
	};
	Runtime.prototype.popLoopStack = function ()
	{
;
		this.loop_stack_index--;
	};
	Runtime.prototype.getCurrentLoop = function ()
	{
		return this.loop_stack[this.loop_stack_index];
	};
	Runtime.prototype.getEventVariableByName = function (name, scope)
	{
		var i, leni, j, lenj, sheet, e;
		while (scope)
		{
			for (i = 0, leni = scope.subevents.length; i < leni; i++)
			{
				e = scope.subevents[i];
				if (e instanceof cr.eventvariable && name.toLowerCase() === e.name.toLowerCase())
					return e;
			}
			scope = scope.parent;
		}
		for (i = 0, leni = this.eventsheets_by_index.length; i < leni; i++)
		{
			sheet = this.eventsheets_by_index[i];
			for (j = 0, lenj = sheet.events.length; j < lenj; j++)
			{
				e = sheet.events[j];
				if (e instanceof cr.eventvariable && name.toLowerCase() === e.name.toLowerCase())
					return e;
			}
		}
		return null;
	};
	Runtime.prototype.getLayoutBySid = function (sid_)
	{
		var i, len;
		for (i = 0, len = this.layouts_by_index.length; i < len; i++)
		{
			if (this.layouts_by_index[i].sid === sid_)
				return this.layouts_by_index[i];
		}
		return null;
	};
	Runtime.prototype.getObjectTypeBySid = function (sid_)
	{
		var i, len;
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			if (this.types_by_index[i].sid === sid_)
				return this.types_by_index[i];
		}
		return null;
	};
	Runtime.prototype.getGroupBySid = function (sid_)
	{
		var i, len;
		for (i = 0, len = this.allGroups.length; i < len; i++)
		{
			if (this.allGroups[i].sid === sid_)
				return this.allGroups[i];
		}
		return null;
	};
	function makeSaveDb(e)
	{
		var db = e.target.result;
		db.createObjectStore("saves", { keyPath: "slot" });
	};
	function IndexedDB_WriteSlot(slot_, data_, oncomplete_, onerror_)
	{
		var request = indexedDB.open("_C2SaveStates");
		request.onupgradeneeded = makeSaveDb;
		request.onerror = onerror_;
		request.onsuccess = function (e)
		{
			var db = e.target.result;
			db.onerror = onerror_;
			var transaction = db.transaction(["saves"], "readwrite");
			var objectStore = transaction.objectStore("saves");
			var putReq = objectStore.put({"slot": slot_, "data": data_ });
			putReq.onsuccess = oncomplete_;
		};
	};
	function IndexedDB_ReadSlot(slot_, oncomplete_, onerror_)
	{
		var request = indexedDB.open("_C2SaveStates");
		request.onupgradeneeded = makeSaveDb;
		request.onerror = onerror_;
		request.onsuccess = function (e)
		{
			var db = e.target.result;
			db.onerror = onerror_;
			var transaction = db.transaction(["saves"]);
			var objectStore = transaction.objectStore("saves");
			var readReq = objectStore.get(slot_);
			readReq.onsuccess = function (e)
			{
				if (readReq.result)
					oncomplete_(readReq.result["data"]);
				else
					oncomplete_(null);
			};
		};
	};
	Runtime.prototype.signalContinuousPreview = function ()
	{
		this.signalledContinuousPreview = true;
	};
	function doContinuousPreviewReload()
	{
		cr.logexport("Reloading for continuous preview");
		if (!!window["c2cocoonjs"])
		{
			CocoonJS["App"]["reload"]();
		}
		else
		{
			if (window.location.search === "?continuous")
				window.location.reload(true);
			else
				window.location = window.location + "?continuous";
		}
	};
	Runtime.prototype.handleSaveLoad = function ()
	{
		var self = this;
		var savingToSlot = this.saveToSlot;
		var savingJson = this.lastSaveJson;
		var loadingFromSlot = this.loadFromSlot;
		var continuous = false;
		if (this.signalledContinuousPreview)
		{
			continuous = true;
			savingToSlot = "__c2_continuouspreview";
			this.signalledContinuousPreview = false;
		}
		if (savingToSlot.length)
		{
			this.ClearDeathRow();
			savingJson = this.saveToJSONString();
			if (window.indexedDB && !this.isCocoonJs)
			{
				IndexedDB_WriteSlot(savingToSlot, savingJson, function ()
				{
					cr.logexport("Saved state to IndexedDB storage (" + savingJson.length + " bytes)");
					self.lastSaveJson = savingJson;
					self.trigger(cr.system_object.prototype.cnds.OnSaveComplete, null);
					self.lastSaveJson = "";
					if (continuous)
						doContinuousPreviewReload();
				}, function (e)
				{
					try {
						localStorage.setItem("__c2save_" + savingToSlot, savingJson);
						cr.logexport("Saved state to WebStorage (" + savingJson.length + " bytes)");
						self.lastSaveJson = savingJson;
						self.trigger(cr.system_object.prototype.cnds.OnSaveComplete, null);
						self.lastSaveJson = "";
						if (continuous)
							doContinuousPreviewReload();
					}
					catch (f)
					{
						cr.logexport("Failed to save game state: " + e + "; " + f);
					}
				});
			}
			else
			{
				try {
					localStorage.setItem("__c2save_" + savingToSlot, savingJson);
					cr.logexport("Saved state to WebStorage (" + savingJson.length + " bytes)");
					self.lastSaveJson = savingJson;
					this.trigger(cr.system_object.prototype.cnds.OnSaveComplete, null);
					self.lastSaveJson = "";
					if (continuous)
						doContinuousPreviewReload();
				}
				catch (e)
				{
					cr.logexport("Error saving to WebStorage: " + e);
				}
			}
			this.saveToSlot = "";
			this.loadFromSlot = "";
			this.loadFromJson = "";
		}
		if (loadingFromSlot.length)
		{
			if (window.indexedDB && !this.isCocoonJs)
			{
				IndexedDB_ReadSlot(loadingFromSlot, function (result_)
				{
					if (result_)
					{
						self.loadFromJson = result_;
						cr.logexport("Loaded state from IndexedDB storage (" + self.loadFromJson.length + " bytes)");
					}
					else
					{
						self.loadFromJson = localStorage.getItem("__c2save_" + loadingFromSlot) || "";
						cr.logexport("Loaded state from WebStorage (" + self.loadFromJson.length + " bytes)");
					}
					self.suspendDrawing = false;
					if (!self.loadFromJson.length)
						self.trigger(cr.system_object.prototype.cnds.OnLoadFailed, null);
				}, function (e)
				{
					self.loadFromJson = localStorage.getItem("__c2save_" + loadingFromSlot) || "";
					cr.logexport("Loaded state from WebStorage (" + self.loadFromJson.length + " bytes)");
					self.suspendDrawing = false;
					if (!self.loadFromJson.length)
						self.trigger(cr.system_object.prototype.cnds.OnLoadFailed, null);
				});
			}
			else
			{
				this.loadFromJson = localStorage.getItem("__c2save_" + loadingFromSlot) || "";
				cr.logexport("Loaded state from WebStorage (" + this.loadFromJson.length + " bytes)");
				this.suspendDrawing = false;
				if (!self.loadFromJson.length)
					self.trigger(cr.system_object.prototype.cnds.OnLoadFailed, null);
			}
			this.loadFromSlot = "";
			this.saveToSlot = "";
		}
		if (this.loadFromJson.length)
		{
			this.ClearDeathRow();
			this.loadFromJSONString(this.loadFromJson);
			this.lastSaveJson = this.loadFromJson;
			this.trigger(cr.system_object.prototype.cnds.OnLoadComplete, null);
			this.lastSaveJson = "";
			this.loadFromJson = "";
		}
	};
	function CopyExtraObject(extra)
	{
		var p, ret = {};
		for (p in extra)
		{
			if (extra.hasOwnProperty(p))
			{
				if (extra[p] instanceof cr.ObjectSet)
					continue;
				if (typeof extra[p].c2userdata !== "undefined")
					continue;
				if (p === "mouseOverInverted")
					continue;
				ret[p] = extra[p];
			}
		}
		return ret;
	};
	Runtime.prototype.saveToJSONString = function()
	{
		var i, len, j, lenj, type, layout, typeobj, g, c, a, v, p;
		var o = {
			"c2save":				true,
			"version":				1,
			"rt": {
				"time":				this.kahanTime.sum,
				"timescale":		this.timescale,
				"tickcount":		this.tickcount,
				"execcount":		this.execcount,
				"next_uid":			this.next_uid,
				"running_layout":	this.running_layout.sid,
				"start_time_offset": (Date.now() - this.start_time)
			},
			"types": {},
			"layouts": {},
			"events": {
				"groups": {},
				"cnds": {},
				"acts": {},
				"vars": {}
			}
		};
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family || this.typeHasNoSaveBehavior(type))
				continue;
			typeobj = {
				"instances": []
			};
			if (cr.hasAnyOwnProperty(type.extra))
				typeobj["ex"] = CopyExtraObject(type.extra);
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				typeobj["instances"].push(this.saveInstanceToJSON(type.instances[j]));
			}
			o["types"][type.sid.toString()] = typeobj;
		}
		for (i = 0, len = this.layouts_by_index.length; i < len; i++)
		{
			layout = this.layouts_by_index[i];
			o["layouts"][layout.sid.toString()] = layout.saveToJSON();
		}
		var ogroups = o["events"]["groups"];
		for (i = 0, len = this.allGroups.length; i < len; i++)
		{
			g = this.allGroups[i];
			ogroups[g.sid.toString()] = !!this.activeGroups[g.group_name];
		}
		var ocnds = o["events"]["cnds"];
		for (p in this.cndsBySid)
		{
			if (this.cndsBySid.hasOwnProperty(p))
			{
				c = this.cndsBySid[p];
				if (cr.hasAnyOwnProperty(c.extra))
					ocnds[p] = { "ex": CopyExtraObject(c.extra) };
			}
		}
		var oacts = o["events"]["acts"];
		for (p in this.actsBySid)
		{
			if (this.actsBySid.hasOwnProperty(p))
			{
				a = this.actsBySid[p];
				if (cr.hasAnyOwnProperty(a.extra))
					oacts[p] = { "ex": a.extra };
			}
		}
		var ovars = o["events"]["vars"];
		for (p in this.varsBySid)
		{
			if (this.varsBySid.hasOwnProperty(p))
			{
				v = this.varsBySid[p];
				if (!v.is_constant && (!v.parent || v.is_static))
					ovars[p] = v.data;
			}
		}
		o["system"] = this.system.saveToJSON();
		return JSON.stringify(o);
	};
	Runtime.prototype.refreshUidMap = function ()
	{
		var i, len, type, j, lenj, inst;
		this.objectsByUid = {};
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family)
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				this.objectsByUid[inst.uid.toString()] = inst;
			}
		}
	};
	Runtime.prototype.loadFromJSONString = function (str)
	{
		var o = JSON.parse(str);
		if (!o["c2save"])
			return;		// probably not a c2 save state
		if (o["version"] > 1)
			return;		// from future version of c2; assume not compatible
		var rt = o["rt"];
		this.kahanTime.reset();
		this.kahanTime.sum = rt["time"];
		this.timescale = rt["timescale"];
		this.tickcount = rt["tickcount"];
		this.execcount = rt["execcount"];
		this.start_time = Date.now() - rt["start_time_offset"];
		var layout_sid = rt["running_layout"];
		if (layout_sid !== this.running_layout.sid)
		{
			var changeToLayout = this.getLayoutBySid(layout_sid);
			if (changeToLayout)
				this.doChangeLayout(changeToLayout);
			else
				return;		// layout that was saved on has gone missing (deleted?)
		}
		this.isLoadingState = true;
		var i, len, j, lenj, k, lenk, p, type, existing_insts, load_insts, inst, binst, layout, layer, g, iid, t;
		var otypes = o["types"];
		for (p in otypes)
		{
			if (otypes.hasOwnProperty(p))
			{
				type = this.getObjectTypeBySid(parseInt(p, 10));
				if (!type || type.is_family || this.typeHasNoSaveBehavior(type))
					continue;
				if (otypes[p]["ex"])
					type.extra = otypes[p]["ex"];
				else
					cr.wipe(type.extra);
				existing_insts = type.instances;
				load_insts = otypes[p]["instances"];
				for (i = 0, len = cr.min(existing_insts.length, load_insts.length); i < len; i++)
				{
					this.loadInstanceFromJSON(existing_insts[i], load_insts[i]);
				}
				for (i = load_insts.length, len = existing_insts.length; i < len; i++)
					this.DestroyInstance(existing_insts[i]);
				for (i = existing_insts.length, len = load_insts.length; i < len; i++)
				{
					layer = null;
					if (type.plugin.is_world)
					{
						layer = this.running_layout.getLayerBySid(load_insts[i]["w"]["l"]);
						if (!layer)
							continue;
					}
					inst = this.createInstanceFromInit(type.default_instance, layer, false, 0, 0, true);
					this.loadInstanceFromJSON(inst, load_insts[i]);
				}
				type.stale_iids = true;
			}
		}
		this.ClearDeathRow();
		this.refreshUidMap();
		var olayouts = o["layouts"];
		for (p in olayouts)
		{
			if (olayouts.hasOwnProperty(p))
			{
				layout = this.getLayoutBySid(parseInt(p, 10));
				if (!layout)
					continue;		// must've gone missing
				layout.loadFromJSON(olayouts[p]);
			}
		}
		var ogroups = o["events"]["groups"];
		for (p in ogroups)
		{
			if (ogroups.hasOwnProperty(p))
			{
				g = this.getGroupBySid(parseInt(p, 10));
				if (g)
					this.activeGroups[g.group_name] = ogroups[p];
			}
		}
		var ocnds = o["events"]["cnds"];
		for (p in ocnds)
		{
			if (ocnds.hasOwnProperty(p) && this.cndsBySid.hasOwnProperty(p))
			{
				this.cndsBySid[p].extra = ocnds[p]["ex"];
			}
		}
		var oacts = o["events"]["acts"];
		for (p in oacts)
		{
			if (oacts.hasOwnProperty(p) && this.actsBySid.hasOwnProperty(p))
			{
				this.actsBySid[p].extra = oacts[p]["ex"];
			}
		}
		var ovars = o["events"]["vars"];
		for (p in ovars)
		{
			if (ovars.hasOwnProperty(p) && this.varsBySid.hasOwnProperty(p))
			{
				this.varsBySid[p].data = ovars[p];
			}
		}
		this.next_uid = rt["next_uid"];
		this.isLoadingState = false;
		this.system.loadFromJSON(o["system"]);
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family)
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				if (type.is_contained)
				{
					iid = inst.get_iid();
					inst.siblings.length = 0;
					for (k = 0, lenk = type.container.length; k < lenk; k++)
					{
						t = type.container[k];
						if (type === t)
							continue;
;
						inst.siblings.push(t.instances[iid]);
					}
				}
				if (inst.afterLoad)
					inst.afterLoad();
				if (inst.behavior_insts)
				{
					for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
					{
						binst = inst.behavior_insts[k];
						if (binst.afterLoad)
							binst.afterLoad();
					}
				}
			}
		}
		this.redraw = true;
	};
	Runtime.prototype.saveInstanceToJSON = function(inst)
	{
		var i, len, world, behinst, et;
		var type = inst.type;
		var plugin = type.plugin;
		var o = {
			"uid": inst.uid
		};
		if (cr.hasAnyOwnProperty(inst.extra))
			o["ex"] = CopyExtraObject(inst.extra);
		if (inst.instance_vars && inst.instance_vars.length)
		{
			o["ivs"] = {};
			for (i = 0, len = inst.instance_vars.length; i < len; i++)
			{
				o["ivs"][inst.type.instvar_sids[i].toString()] = inst.instance_vars[i];
			}
		}
		if (plugin.is_world)
		{
			world = {
				"x": inst.x,
				"y": inst.y,
				"w": inst.width,
				"h": inst.height,
				"l": inst.layer.sid,
				"zi": inst.get_zindex()
			};
			if (inst.angle !== 0)
				world["a"] = inst.angle;
			if (inst.opacity !== 1)
				world["o"] = inst.opacity;
			if (inst.hotspotX !== 0.5)
				world["hX"] = inst.hotspotX;
			if (inst.hotspotY !== 0.5)
				world["hY"] = inst.hotspotY;
			if (inst.blend_mode !== 0)
				world["bm"] = inst.blend_mode;
			if (!inst.visible)
				world["v"] = inst.visible;
			if (!inst.collisionsEnabled)
				world["ce"] = inst.collisionsEnabled;
			if (inst.my_timescale !== -1)
				world["mts"] = inst.my_timescale;
			if (type.effect_types.length)
			{
				world["fx"] = [];
				for (i = 0, len = type.effect_types.length; i < len; i++)
				{
					et = type.effect_types[i];
					world["fx"].push({"name": et.name,
									  "active": inst.active_effect_flags[et.index],
									  "params": inst.effect_params[et.index] });
				}
			}
			o["w"] = world;
		}
		if (inst.behavior_insts && inst.behavior_insts.length)
		{
			o["behs"] = {};
			for (i = 0, len = inst.behavior_insts.length; i < len; i++)
			{
				behinst = inst.behavior_insts[i];
				if (behinst.saveToJSON)
					o["behs"][behinst.type.sid.toString()] = behinst.saveToJSON();
			}
		}
		if (inst.saveToJSON)
			o["data"] = inst.saveToJSON();
		return o;
	};
	Runtime.prototype.getInstanceVarIndexBySid = function (type, sid_)
	{
		var i, len;
		for (i = 0, len = type.instvar_sids.length; i < len; i++)
		{
			if (type.instvar_sids[i] === sid_)
				return i;
		}
		return -1;
	};
	Runtime.prototype.getBehaviorIndexBySid = function (inst, sid_)
	{
		var i, len;
		for (i = 0, len = inst.behavior_insts.length; i < len; i++)
		{
			if (inst.behavior_insts[i].type.sid === sid_)
				return i;
		}
		return -1;
	};
	Runtime.prototype.loadInstanceFromJSON = function(inst, o)
	{
		var p, i, len, iv, oivs, world, fxindex, obehs, behindex;
		var oldlayer;
		var type = inst.type;
		var plugin = type.plugin;
		inst.uid = o["uid"];
		if (o["ex"])
			inst.extra = o["ex"];
		else
			cr.wipe(inst.extra);
		oivs = o["ivs"];
		if (oivs)
		{
			for (p in oivs)
			{
				if (oivs.hasOwnProperty(p))
				{
					iv = this.getInstanceVarIndexBySid(type, parseInt(p, 10));
					if (iv < 0 || iv >= inst.instance_vars.length)
						continue;		// must've gone missing
					inst.instance_vars[iv] = oivs[p];
				}
			}
		}
		if (plugin.is_world)
		{
			world = o["w"];
			if (inst.layer.sid !== world["l"])
			{
				oldlayer = inst.layer;
				inst.layer = this.running_layout.getLayerBySid(world["l"]);
				if (inst.layer)
				{
					inst.layer.instances.push(inst);
					inst.layer.zindices_stale = true;
					cr.arrayFindRemove(oldlayer.instances, inst);
					oldlayer.zindices_stale = true;
				}
				else
				{
					inst.layer = oldlayer;
					this.DestroyInstance(inst);
				}
			}
			inst.x = world["x"];
			inst.y = world["y"];
			inst.width = world["w"];
			inst.height = world["h"];
			inst.zindex = world["zi"];
			inst.angle = world.hasOwnProperty("a") ? world["a"] : 0;
			inst.opacity = world.hasOwnProperty("o") ? world["o"] : 1;
			inst.hotspotX = world.hasOwnProperty("hX") ? world["hX"] : 0.5;
			inst.hotspotY = world.hasOwnProperty("hY") ? world["hY"] : 0.5;
			inst.visible = world.hasOwnProperty("v") ? world["v"] : true;
			inst.collisionsEnabled = world.hasOwnProperty("ce") ? world["ce"] : true;
			inst.my_timescale = world.hasOwnProperty("mts") ? world["mts"] : -1;
			inst.blend_mode = world.hasOwnProperty("bm") ? world["bm"] : 0;;
			inst.compositeOp = cr.effectToCompositeOp(inst.blend_mode);
			if (this.gl)
				cr.setGLBlend(inst, inst.blend_mode, this.gl);
			inst.set_bbox_changed();
			if (world.hasOwnProperty("fx"))
			{
				for (i = 0, len = world["fx"].length; i < len; i++)
				{
					fxindex = type.getEffectIndexByName(world["fx"][i]["name"]);
					if (fxindex < 0)
						continue;		// must've gone missing
					inst.active_effect_flags[fxindex] = world["fx"][i]["active"];
					inst.effect_params[fxindex] = world["fx"][i]["params"];
				}
			}
			inst.updateActiveEffects();
		}
		obehs = o["behs"];
		if (obehs)
		{
			for (p in obehs)
			{
				if (obehs.hasOwnProperty(p))
				{
					behindex = this.getBehaviorIndexBySid(inst, parseInt(p, 10));
					if (behindex < 0)
						continue;		// must've gone missing
					inst.behavior_insts[behindex].loadFromJSON(obehs[p]);
				}
			}
		}
		if (o["data"])
			inst.loadFromJSON(o["data"]);
	};
	cr.runtime = Runtime;
	cr.createRuntime = function (canvasid)
	{
		return new Runtime(document.getElementById(canvasid));
	};
	cr.createDCRuntime = function (w, h)
	{
		return new Runtime({ "dc": true, "width": w, "height": h });
	};
	window["cr_createRuntime"] = cr.createRuntime;
	window["cr_createDCRuntime"] = cr.createDCRuntime;
	window["createCocoonJSRuntime"] = function ()
	{
		window["c2cocoonjs"] = true;
		var canvas = document.createElement("screencanvas") || document.createElement("canvas");
		document.body.appendChild(canvas);
		var rt = new Runtime(canvas);
		window["c2runtime"] = rt;
		window.addEventListener("orientationchange", function () {
			window["c2runtime"]["setSize"](window.innerWidth, window.innerHeight);
		});
		window["c2runtime"]["setSize"](window.innerWidth, window.innerHeight);
		return rt;
	};
}());
window["cr_getC2Runtime"] = function()
{
	var canvas = document.getElementById("c2canvas");
	if (canvas)
		return canvas["c2runtime"];
	else if (window["c2runtime"])
		return window["c2runtime"];
	else
		return null;
}
window["cr_sizeCanvas"] = function(w, h)
{
	if (w === 0 || h === 0)
		return;
	var runtime = window["cr_getC2Runtime"]();
	if (runtime)
		runtime["setSize"](w, h);
}
window["cr_setSuspended"] = function(s)
{
	var runtime = window["cr_getC2Runtime"]();
	if (runtime)
		runtime["setSuspended"](s);
}
;
(function()
{
	function Layout(runtime, m)
	{
		this.runtime = runtime;
		this.event_sheet = null;
		this.scrollX = (this.runtime.original_width / 2);
		this.scrollY = (this.runtime.original_height / 2);
		this.scale = 1.0;
		this.angle = 0;
		this.first_visit = true;
		this.name = m[0];
		this.width = m[1];
		this.height = m[2];
		this.unbounded_scrolling = m[3];
		this.sheetname = m[4];
		this.sid = m[5];
		var lm = m[6];
		var i, len;
		this.layers = [];
		this.initial_types = [];
		for (i = 0, len = lm.length; i < len; i++)
		{
			var layer = new cr.layer(this, lm[i]);
			layer.number = i;
			cr.seal(layer);
			this.layers.push(layer);
		}
		var im = m[7];
		this.initial_nonworld = [];
		for (i = 0, len = im.length; i < len; i++)
		{
			var inst = im[i];
			var type = this.runtime.types_by_index[inst[1]];
;
			if (!type.default_instance)
				type.default_instance = inst;
			this.initial_nonworld.push(inst);
			if (this.initial_types.indexOf(type) === -1)
				this.initial_types.push(type);
		}
		this.effect_types = [];
		this.active_effect_types = [];
		this.effect_params = [];
		for (i = 0, len = m[8].length; i < len; i++)
		{
			this.effect_types.push({
				id: m[8][i][0],
				name: m[8][i][1],
				shaderindex: -1,
				active: true,
				index: i
			});
			this.effect_params.push(m[8][i][2].slice(0));
		}
		this.updateActiveEffects();
		this.rcTex = new cr.rect(0, 0, 1, 1);
		this.rcTex2 = new cr.rect(0, 0, 1, 1);
		this.persist_data = {};
	};
	Layout.prototype.saveObjectToPersist = function (inst)
	{
		var sidStr = inst.type.sid.toString();
		if (!this.persist_data.hasOwnProperty(sidStr))
			this.persist_data[sidStr] = [];
		var type_persist = this.persist_data[sidStr];
		type_persist.push(this.runtime.saveInstanceToJSON(inst));
	};
	Layout.prototype.hasOpaqueBottomLayer = function ()
	{
		var layer = this.layers[0];
		return !layer.transparent && layer.opacity === 1.0 && !layer.forceOwnTexture && layer.visible;
	};
	Layout.prototype.updateActiveEffects = function ()
	{
		this.active_effect_types.length = 0;
		var i, len, et;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			if (et.active)
				this.active_effect_types.push(et);
		}
	};
	Layout.prototype.getEffectByName = function (name_)
	{
		var i, len, et;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			if (et.name === name_)
				return et;
		}
		return null;
	};
	var created_instances = [];
	Layout.prototype.startRunning = function ()
	{
		if (this.sheetname)
		{
			this.event_sheet = this.runtime.eventsheets[this.sheetname];
;
		}
		this.runtime.running_layout = this;
		this.scrollX = (this.runtime.original_width / 2);
		this.scrollY = (this.runtime.original_height / 2);
		var i, k, len, lenk, type, type_instances, inst, iid, t, s, p, q, type_data, layer;
		for (i = 0, len = this.runtime.types_by_index.length; i < len; i++)
		{
			type = this.runtime.types_by_index[i];
			if (type.is_family)
				continue;		// instances are only transferred for their real type
			type_instances = type.instances;
			for (k = 0, lenk = type_instances.length; k < lenk; k++)
			{
				inst = type_instances[k];
				if (inst.layer)
				{
					var num = inst.layer.number;
					if (num >= this.layers.length)
						num = this.layers.length - 1;
					inst.layer = this.layers[num];
					inst.layer.instances.push(inst);
					inst.layer.zindices_stale = true;
				}
			}
		}
		var layer;
		created_instances.length = 0;
		this.boundScrolling();
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			layer = this.layers[i];
			layer.createInitialInstances();		// fills created_instances
			layer.disableAngle = true;
			var px = layer.canvasToLayer(0, 0, true);
			var py = layer.canvasToLayer(0, 0, false);
			layer.disableAngle = false;
			if (this.runtime.pixel_rounding)
			{
				px = (px + 0.5) | 0;
				py = (py + 0.5) | 0;
			}
			layer.rotateViewport(px, py, null);
		}
		var uids_changed = false;
		if (!this.first_visit)
		{
			for (p in this.persist_data)
			{
				if (this.persist_data.hasOwnProperty(p))
				{
					type = this.runtime.getObjectTypeBySid(parseInt(p, 10));
					if (!type || type.is_family || !this.runtime.typeHasPersistBehavior(type))
						continue;
					type_data = this.persist_data[p];
					for (i = 0, len = type_data.length; i < len; i++)
					{
						layer = null;
						if (type.plugin.is_world)
						{
							layer = this.getLayerBySid(type_data[i]["w"]["l"]);
							if (!layer)
								continue;
						}
						inst = this.runtime.createInstanceFromInit(type.default_instance, layer, false, 0, 0, true);
						this.runtime.loadInstanceFromJSON(inst, type_data[i]);
						uids_changed = true;
						created_instances.push(inst);
					}
					type_data.length = 0;
				}
			}
			for (i = 0, len = this.layers.length; i < len; i++)
			{
				this.layers[i].instances.sort(sortInstanceByZIndex);
				this.layers[i].zindices_stale = true;		// in case of duplicates/holes
			}
		}
		if (uids_changed)
		{
			this.runtime.ClearDeathRow();
			this.runtime.refreshUidMap();
		}
		for (i = 0; i < created_instances.length; i++)
		{
			inst = created_instances[i];
			if (!inst.type.is_contained)
				continue;
			iid = inst.get_iid();
			for (k = 0, lenk = inst.type.container.length; k < lenk; k++)
			{
				t = inst.type.container[k];
				if (inst.type === t)
					continue;
				if (t.instances.length > iid)
					inst.siblings.push(t.instances[iid]);
				else
				{
					if (!t.default_instance)
					{
					}
					else
					{
						s = this.runtime.createInstanceFromInit(t.default_instance, inst.layer, true, inst.x, inst.y, true);
						this.runtime.ClearDeathRow();
						t.updateIIDs();
						inst.siblings.push(s);
						created_instances.push(s);		// come back around and link up its own instances too
					}
				}
			}
		}
		for (i = 0, len = this.initial_nonworld.length; i < len; i++)
		{
			inst = this.runtime.createInstanceFromInit(this.initial_nonworld[i], null, true);
;
		}
		this.runtime.changelayout = null;
		this.runtime.ClearDeathRow();
		if (this.runtime.ctx && !this.runtime.isDomFree)
		{
			for (i = 0, len = this.runtime.types_by_index.length; i < len; i++)
			{
				t = this.runtime.types_by_index[i];
				if (t.is_family || !t.instances.length || !t.preloadCanvas2D)
					continue;
				t.preloadCanvas2D(this.runtime.ctx);
			}
		}
		/*
		if (this.runtime.glwrap)
		{
			console.log("Estimated VRAM at layout start: " + this.runtime.glwrap.textureCount() + " textures, approx. " + Math.round(this.runtime.glwrap.estimateVRAM() / 1024) + " kb");
		}
		*/
		for (i = 0, len = created_instances.length; i < len; i++)
		{
			inst = created_instances[i];
			this.runtime.trigger(Object.getPrototypeOf(inst.type.plugin).cnds.OnCreated, inst);
		}
		created_instances.length = 0;
		this.runtime.trigger(cr.system_object.prototype.cnds.OnLayoutStart, null);
		this.first_visit = false;
	};
	Layout.prototype.createGlobalNonWorlds = function ()
	{
		var i, k, len, initial_inst, inst, type;
		for (i = 0, k = 0, len = this.initial_nonworld.length; i < len; i++)
		{
			initial_inst = this.initial_nonworld[i];
			type = this.runtime.types_by_index[initial_inst[1]];
			if (type.global)
				inst = this.runtime.createInstanceFromInit(initial_inst, null, true);
			else
			{
				this.initial_nonworld[k] = initial_inst;
				k++;
			}
		}
		this.initial_nonworld.length = k;
	};
	Layout.prototype.stopRunning = function ()
	{
;
		/*
		if (this.runtime.glwrap)
		{
			console.log("Estimated VRAM at layout end: " + this.runtime.glwrap.textureCount() + " textures, approx. " + Math.round(this.runtime.glwrap.estimateVRAM() / 1024) + " kb");
		}
		*/
		this.runtime.trigger(cr.system_object.prototype.cnds.OnLayoutEnd, null);
		this.runtime.system.waits.length = 0;
		var i, leni, j, lenj;
		var layer_instances, inst, type;
		for (i = 0, leni = this.layers.length; i < leni; i++)
		{
			layer_instances = this.layers[i].instances;
			for (j = 0, lenj = layer_instances.length; j < lenj; j++)
			{
				inst = layer_instances[j];
				if (!inst.type.global)
				{
					if (this.runtime.typeHasPersistBehavior(inst.type))
						this.saveObjectToPersist(inst);
					this.runtime.DestroyInstance(inst);
				}
			}
			this.runtime.ClearDeathRow();
			layer_instances.length = 0;
			this.layers[i].zindices_stale = true;
		}
		for (i = 0, leni = this.runtime.types_by_index.length; i < leni; i++)
		{
			type = this.runtime.types_by_index[i];
			if (type.global || type.plugin.is_world || type.plugin.singleglobal || type.is_family)
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
				this.runtime.DestroyInstance(type.instances[j]);
			this.runtime.ClearDeathRow();
		}
	};
	Layout.prototype.draw = function (ctx)
	{
		ctx.globalAlpha = 1;
		ctx.globalCompositeOperation = "source-over";
		if (this.runtime.clearBackground && !this.hasOpaqueBottomLayer())
			ctx.clearRect(0, 0, this.runtime.width, this.runtime.height);
		var i, len, l;
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			l = this.layers[i];
			if (l.visible && l.opacity > 0 && l.blend_mode !== 11)
				l.draw(ctx);
		}
	};
	Layout.prototype.drawGL = function (glw)
	{
		var render_to_texture = (this.active_effect_types.length > 0 || this.runtime.uses_background_blending);
		if (render_to_texture)
		{
			if (!this.runtime.layout_tex)
			{
				this.runtime.layout_tex = glw.createEmptyTexture(this.runtime.width, this.runtime.height, this.runtime.linearSampling);
			}
			if (this.runtime.layout_tex.c2width !== this.runtime.width || this.runtime.layout_tex.c2height !== this.runtime.height)
			{
				glw.deleteTexture(this.runtime.layout_tex);
				this.runtime.layout_tex = glw.createEmptyTexture(this.runtime.width, this.runtime.height, this.runtime.linearSampling);
			}
			glw.setRenderingToTexture(this.runtime.layout_tex);
		}
		if (this.runtime.clearBackground && !this.hasOpaqueBottomLayer())
			glw.clear(0, 0, 0, 0);
		var i, len;
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			if (this.layers[i].visible && this.layers[i].opacity > 0)
				this.layers[i].drawGL(glw);
		}
		if (render_to_texture)
		{
			if (this.active_effect_types.length <= 1)
			{
				if (this.active_effect_types.length === 1)
				{
					var etindex = this.active_effect_types[0].index;
					glw.switchProgram(this.active_effect_types[0].shaderindex);
					glw.setProgramParameters(null,								// backTex
											 1.0 / this.runtime.width,			// pixelWidth
											 1.0 / this.runtime.height,			// pixelHeight
											 0.0, 0.0,							// destStart
											 1.0, 1.0,							// destEnd
											 this.scale,						// layerScale
											 this.effect_params[etindex]);		// fx parameters
					if (glw.programIsAnimated(this.active_effect_types[0].shaderindex))
						this.runtime.redraw = true;
				}
				else
					glw.switchProgram(0);
				glw.setRenderingToTexture(null);				// to backbuffer
				glw.setOpacity(1);
				glw.setTexture(this.runtime.layout_tex);
				glw.setAlphaBlend();
				glw.resetModelView();
				glw.updateModelView();
				var halfw = this.runtime.width / 2;
				var halfh = this.runtime.height / 2;
				glw.quad(-halfw, halfh, halfw, halfh, halfw, -halfh, -halfw, -halfh);
				glw.setTexture(null);
			}
			else
			{
				this.renderEffectChain(glw, null, null, null);
			}
		}
		glw.present();
	};
	Layout.prototype.getRenderTarget = function()
	{
		return (this.active_effect_types.length > 0 || this.runtime.uses_background_blending) ? this.runtime.layout_tex : null;
	};
	Layout.prototype.getMinLayerScale = function ()
	{
		var m = this.layers[0].getScale();
		var i, len, l;
		for (i = 1, len = this.layers.length; i < len; i++)
		{
			l = this.layers[i];
			if (l.parallaxX === 0 && l.parallaxY === 0)
				continue;
			if (l.getScale() < m)
				m = l.getScale();
		}
		return m;
	};
	Layout.prototype.scrollToX = function (x)
	{
		if (!this.unbounded_scrolling)
		{
			var widthBoundary = (this.runtime.width * (1 / this.getMinLayerScale()) / 2);
			if (x > this.width - widthBoundary)
				x = this.width - widthBoundary;
			if (x < widthBoundary)
				x = widthBoundary;
		}
		if (this.scrollX !== x)
		{
			this.scrollX = x;
			this.runtime.redraw = true;
		}
	};
	Layout.prototype.scrollToY = function (y)
	{
		if (!this.unbounded_scrolling)
		{
			var heightBoundary = (this.runtime.height * (1 / this.getMinLayerScale()) / 2);
			if (y > this.height - heightBoundary)
				y = this.height - heightBoundary;
			if (y < heightBoundary)
				y = heightBoundary;
		}
		if (this.scrollY !== y)
		{
			this.scrollY = y;
			this.runtime.redraw = true;
		}
	};
	Layout.prototype.boundScrolling = function ()
	{
		this.scrollToX(this.scrollX);
		this.scrollToY(this.scrollY);
	};
	Layout.prototype.renderEffectChain = function (glw, layer, inst, rendertarget)
	{
		var active_effect_types = inst ?
							inst.active_effect_types :
							layer ?
								layer.active_effect_types :
								this.active_effect_types;
		var layerScale = inst ? inst.layer.getScale() :
							layer ? layer.getScale() : 1;
		var fx_tex = this.runtime.fx_tex;
		var i, len, last, temp, fx_index = 0, other_fx_index = 1;
		var y, h;
		var windowWidth = this.runtime.width;
		var windowHeight = this.runtime.height;
		var halfw = windowWidth / 2;
		var halfh = windowHeight / 2;
		var rcTex = layer ? layer.rcTex : this.rcTex;
		var rcTex2 = layer ? layer.rcTex2 : this.rcTex2;
		var screenleft = 0, clearleft = 0;
		var screentop = 0, cleartop = 0;
		var screenright = windowWidth, clearright = windowWidth;
		var screenbottom = windowHeight, clearbottom = windowHeight;
		var boxExtendHorizontal = 0;
		var boxExtendVertical = 0;
		var inst_layer_angle = inst ? inst.layer.getAngle() : 0;
		if (inst)
		{
			for (i = 0, len = active_effect_types.length; i < len; i++)
			{
				boxExtendHorizontal += glw.getProgramBoxExtendHorizontal(active_effect_types[i].shaderindex);
				boxExtendVertical += glw.getProgramBoxExtendVertical(active_effect_types[i].shaderindex);
			}
			var bbox = inst.bbox;
			screenleft = layer.layerToCanvas(bbox.left, bbox.top, true);
			screentop = layer.layerToCanvas(bbox.left, bbox.top, false);
			screenright = layer.layerToCanvas(bbox.right, bbox.bottom, true);
			screenbottom = layer.layerToCanvas(bbox.right, bbox.bottom, false);
			if (inst_layer_angle !== 0)
			{
				var screentrx = layer.layerToCanvas(bbox.right, bbox.top, true);
				var screentry = layer.layerToCanvas(bbox.right, bbox.top, false);
				var screenblx = layer.layerToCanvas(bbox.left, bbox.bottom, true);
				var screenbly = layer.layerToCanvas(bbox.left, bbox.bottom, false);
				temp = Math.min(screenleft, screenright, screentrx, screenblx);
				screenright = Math.max(screenleft, screenright, screentrx, screenblx);
				screenleft = temp;
				temp = Math.min(screentop, screenbottom, screentry, screenbly);
				screenbottom = Math.max(screentop, screenbottom, screentry, screenbly);
				screentop = temp;
			}
			screenleft -= boxExtendHorizontal;
			screentop -= boxExtendVertical;
			screenright += boxExtendHorizontal;
			screenbottom += boxExtendVertical;
			rcTex2.left = screenleft / windowWidth;
			rcTex2.top = 1 - screentop / windowHeight;
			rcTex2.right = screenright / windowWidth;
			rcTex2.bottom = 1 - screenbottom / windowHeight;
			clearleft = screenleft = Math.floor(screenleft);
			cleartop = screentop = Math.floor(screentop);
			clearright = screenright = Math.ceil(screenright);
			clearbottom = screenbottom = Math.ceil(screenbottom);
			clearleft -= boxExtendHorizontal;
			cleartop -= boxExtendVertical;
			clearright += boxExtendHorizontal;
			clearbottom += boxExtendVertical;
			if (screenleft < 0)					screenleft = 0;
			if (screentop < 0)					screentop = 0;
			if (screenright > windowWidth)		screenright = windowWidth;
			if (screenbottom > windowHeight)	screenbottom = windowHeight;
			if (clearleft < 0)					clearleft = 0;
			if (cleartop < 0)					cleartop = 0;
			if (clearright > windowWidth)		clearright = windowWidth;
			if (clearbottom > windowHeight)		clearbottom = windowHeight;
			rcTex.left = screenleft / windowWidth;
			rcTex.top = 1 - screentop / windowHeight;
			rcTex.right = screenright / windowWidth;
			rcTex.bottom = 1 - screenbottom / windowHeight;
		}
		else
		{
			rcTex.left = rcTex2.left = 0;
			rcTex.top = rcTex2.top = 0;
			rcTex.right = rcTex2.right = 1;
			rcTex.bottom = rcTex2.bottom = 1;
		}
		var pre_draw = (inst && (((inst.angle || inst_layer_angle) && glw.programUsesDest(active_effect_types[0].shaderindex)) || boxExtendHorizontal !== 0 || boxExtendVertical !== 0 || inst.opacity !== 1 || inst.type.plugin.must_predraw)) || (layer && !inst && layer.opacity !== 1);
		glw.setAlphaBlend();
		if (pre_draw)
		{
			if (!fx_tex[fx_index])
			{
				fx_tex[fx_index] = glw.createEmptyTexture(windowWidth, windowHeight, this.runtime.linearSampling);
			}
			if (fx_tex[fx_index].c2width !== windowWidth || fx_tex[fx_index].c2height !== windowHeight)
			{
				glw.deleteTexture(fx_tex[fx_index]);
				fx_tex[fx_index] = glw.createEmptyTexture(windowWidth, windowHeight, this.runtime.linearSampling);
			}
			glw.switchProgram(0);
			glw.setRenderingToTexture(fx_tex[fx_index]);
			h = clearbottom - cleartop;
			y = (windowHeight - cleartop) - h;
			glw.clearRect(clearleft, y, clearright - clearleft, h);
			if (inst)
			{
				inst.drawGL(glw);
			}
			else
			{
				glw.setTexture(this.runtime.layer_tex);
				glw.setOpacity(layer.opacity);
				glw.resetModelView();
				glw.translate(-halfw, -halfh);
				glw.updateModelView();
				glw.quadTex(screenleft, screenbottom, screenright, screenbottom, screenright, screentop, screenleft, screentop, rcTex);
			}
			rcTex2.left = rcTex2.top = 0;
			rcTex2.right = rcTex2.bottom = 1;
			if (inst)
			{
				temp = rcTex.top;
				rcTex.top = rcTex.bottom;
				rcTex.bottom = temp;
			}
			fx_index = 1;
			other_fx_index = 0;
		}
		glw.setOpacity(1);
		var last = active_effect_types.length - 1;
		var post_draw = glw.programUsesCrossSampling(active_effect_types[last].shaderindex);
		var etindex = 0;
		for (i = 0, len = active_effect_types.length; i < len; i++)
		{
			if (!fx_tex[fx_index])
			{
				fx_tex[fx_index] = glw.createEmptyTexture(windowWidth, windowHeight, this.runtime.linearSampling);
			}
			if (fx_tex[fx_index].c2width !== windowWidth || fx_tex[fx_index].c2height !== windowHeight)
			{
				glw.deleteTexture(fx_tex[fx_index]);
				fx_tex[fx_index] = glw.createEmptyTexture(windowWidth, windowHeight, this.runtime.linearSampling);
			}
			glw.switchProgram(active_effect_types[i].shaderindex);
			etindex = active_effect_types[i].index;
			if (glw.programIsAnimated(active_effect_types[i].shaderindex))
				this.runtime.redraw = true;
			if (i == 0 && !pre_draw)
			{
				glw.setRenderingToTexture(fx_tex[fx_index]);
				h = clearbottom - cleartop;
				y = (windowHeight - cleartop) - h;
				glw.clearRect(clearleft, y, clearright - clearleft, h);
				if (inst)
				{
					glw.setProgramParameters(rendertarget,					// backTex
											 1.0 / inst.width,				// pixelWidth
											 1.0 / inst.height,				// pixelHeight
											 rcTex2.left, rcTex2.top,		// destStart
											 rcTex2.right, rcTex2.bottom,	// destEnd
											 layerScale,
											 inst.effect_params[etindex]);	// fx params
					inst.drawGL(glw);
				}
				else
				{
					glw.setProgramParameters(rendertarget,					// backTex
											 1.0 / windowWidth,				// pixelWidth
											 1.0 / windowHeight,			// pixelHeight
											 0.0, 0.0,						// destStart
											 1.0, 1.0,						// destEnd
											 layerScale,
											 layer ?						// fx params
												layer.effect_params[etindex] :
												this.effect_params[etindex]);
					glw.setTexture(layer ? this.runtime.layer_tex : this.runtime.layout_tex);
					glw.resetModelView();
					glw.translate(-halfw, -halfh);
					glw.updateModelView();
					glw.quadTex(screenleft, screenbottom, screenright, screenbottom, screenright, screentop, screenleft, screentop, rcTex);
				}
				rcTex2.left = rcTex2.top = 0;
				rcTex2.right = rcTex2.bottom = 1;
				if (inst && !post_draw)
				{
					temp = screenbottom;
					screenbottom = screentop;
					screentop = temp;
				}
			}
			else
			{
				glw.setProgramParameters(rendertarget,						// backTex
										 1.0 / windowWidth,					// pixelWidth
										 1.0 / windowHeight,				// pixelHeight
										 rcTex2.left, rcTex2.top,			// destStart
										 rcTex2.right, rcTex2.bottom,		// destEnd
										 layerScale,
										 inst ?								// fx params
											inst.effect_params[etindex] :
											layer ?
												layer.effect_params[etindex] :
												this.effect_params[etindex]);
				if (i === last && !post_draw)
				{
					if (inst)
						glw.setBlend(inst.srcBlend, inst.destBlend);
					else if (layer)
						glw.setBlend(layer.srcBlend, layer.destBlend);
					glw.setRenderingToTexture(rendertarget);
				}
				else
				{
					glw.setRenderingToTexture(fx_tex[fx_index]);
					h = clearbottom - cleartop;
					y = (windowHeight - cleartop) - h;
					glw.clearRect(clearleft, y, clearright - clearleft, h);
				}
				glw.setTexture(fx_tex[other_fx_index]);
				glw.resetModelView();
				glw.translate(-halfw, -halfh);
				glw.updateModelView();
				glw.quadTex(screenleft, screenbottom, screenright, screenbottom, screenright, screentop, screenleft, screentop, rcTex);
				if (i === last && !post_draw)
					glw.setTexture(null);
			}
			fx_index = (fx_index === 0 ? 1 : 0);
			other_fx_index = (fx_index === 0 ? 1 : 0);		// will be opposite to fx_index since it was just assigned
		}
		if (post_draw)
		{
			glw.switchProgram(0);
			if (inst)
				glw.setBlend(inst.srcBlend, inst.destBlend);
			else if (layer)
				glw.setBlend(layer.srcBlend, layer.destBlend);
			glw.setRenderingToTexture(rendertarget);
			glw.setTexture(fx_tex[other_fx_index]);
			glw.resetModelView();
			glw.translate(-halfw, -halfh);
			glw.updateModelView();
			if (inst && active_effect_types.length === 1 && !pre_draw)
				glw.quadTex(screenleft, screentop, screenright, screentop, screenright, screenbottom, screenleft, screenbottom, rcTex);
			else
				glw.quadTex(screenleft, screenbottom, screenright, screenbottom, screenright, screentop, screenleft, screentop, rcTex);
			glw.setTexture(null);
		}
	};
	Layout.prototype.getLayerBySid = function (sid_)
	{
		var i, len;
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			if (this.layers[i].sid === sid_)
				return this.layers[i];
		}
		return null;
	};
	Layout.prototype.saveToJSON = function ()
	{
		var i, len, layer, et;
		var o = {
			"sx": this.scrollX,
			"sy": this.scrollY,
			"s": this.scale,
			"a": this.angle,
			"w": this.width,
			"h": this.height,
			"fv": this.first_visit,			// added r127
			"persist": this.persist_data,
			"fx": [],
			"layers": {}
		};
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			o["fx"].push({"name": et.name, "active": et.active, "params": this.effect_params[et.index] });
		}
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			layer = this.layers[i];
			o["layers"][layer.sid.toString()] = layer.saveToJSON();
		}
		return o;
	};
	Layout.prototype.loadFromJSON = function (o)
	{
		var i, len, fx, p, layer;
		this.scrollX = o["sx"];
		this.scrollY = o["sy"];
		this.scale = o["s"];
		this.angle = o["a"];
		this.width = o["w"];
		this.height = o["h"];
		this.persist_data = o["persist"];
		if (typeof o["fv"] !== "undefined")
			this.first_visit = o["fv"];
		var ofx = o["fx"];
		for (i = 0, len = ofx.length; i < len; i++)
		{
			fx = this.getEffectByName(ofx[i]["name"]);
			if (!fx)
				continue;		// must've gone missing
			fx.active = ofx[i]["active"];
			this.effect_params[fx.index] = ofx[i]["params"];
		}
		this.updateActiveEffects();
		var olayers = o["layers"];
		for (p in olayers)
		{
			if (olayers.hasOwnProperty(p))
			{
				layer = this.getLayerBySid(parseInt(p, 10));
				if (!layer)
					continue;		// must've gone missing
				layer.loadFromJSON(olayers[p]);
			}
		}
	};
	cr.layout = Layout;
	function Layer(layout, m)
	{
		this.layout = layout;
		this.runtime = layout.runtime;
		this.instances = [];        // running instances
		this.scale = 1.0;
		this.angle = 0;
		this.disableAngle = false;
		this.tmprect = new cr.rect(0, 0, 0, 0);
		this.tmpquad = new cr.quad();
		this.viewLeft = 0;
		this.viewRight = 0;
		this.viewTop = 0;
		this.viewBottom = 0;
		this.zindices_stale = false;
		this.name = m[0];
		this.index = m[1];
		this.sid = m[2];
		this.visible = m[3];		// initially visible
		this.background_color = m[4];
		this.transparent = m[5];
		this.parallaxX = m[6];
		this.parallaxY = m[7];
		this.opacity = m[8];
		this.forceOwnTexture = m[9];
		this.zoomRate = m[10];
		this.blend_mode = m[11];
		this.effect_fallback = m[12];
		this.compositeOp = "source-over";
		this.srcBlend = 0;
		this.destBlend = 0;
		this.render_offscreen = false;
		var im = m[13];
		var i, len;
		this.initial_instances = [];
		for (i = 0, len = im.length; i < len; i++)
		{
			var inst = im[i];
			var type = this.runtime.types_by_index[inst[1]];
;
			if (!type.default_instance)
				type.default_instance = inst;
			this.initial_instances.push(inst);
			if (this.layout.initial_types.indexOf(type) === -1)
				this.layout.initial_types.push(type);
		}
		this.effect_types = [];
		this.active_effect_types = [];
		this.effect_params = [];
		for (i = 0, len = m[14].length; i < len; i++)
		{
			this.effect_types.push({
				id: m[14][i][0],
				name: m[14][i][1],
				shaderindex: -1,
				active: true,
				index: i
			});
			this.effect_params.push(m[14][i][2].slice(0));
		}
		this.updateActiveEffects();
		this.rcTex = new cr.rect(0, 0, 1, 1);
		this.rcTex2 = new cr.rect(0, 0, 1, 1);
	};
	Layer.prototype.updateActiveEffects = function ()
	{
		this.active_effect_types.length = 0;
		var i, len, et;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			if (et.active)
				this.active_effect_types.push(et);
		}
	};
	Layer.prototype.getEffectByName = function (name_)
	{
		var i, len, et;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			if (et.name === name_)
				return et;
		}
		return null;
	};
	Layer.prototype.createInitialInstances = function ()
	{
		var i, k, len, inst, initial_inst, type, keep, hasPersistBehavior;
		for (i = 0, k = 0, len = this.initial_instances.length; i < len; i++)
		{
			initial_inst = this.initial_instances[i];
			type = this.runtime.types_by_index[initial_inst[1]];
;
			hasPersistBehavior = this.runtime.typeHasPersistBehavior(type);
			keep = true;
			if (!hasPersistBehavior || this.layout.first_visit)
			{
				inst = this.runtime.createInstanceFromInit(initial_inst, this, true);
;
				created_instances.push(inst);
				if (inst.type.global)
					keep = false;
			}
			if (keep)
			{
				this.initial_instances[k] = this.initial_instances[i];
				k++;
			}
		}
		this.initial_instances.length = k;
		this.runtime.ClearDeathRow();		// flushes creation row so IIDs will be correct
		if (!this.runtime.glwrap && this.effect_types.length)	// no WebGL renderer and shaders used
			this.blend_mode = this.effect_fallback;				// use fallback blend mode
		this.compositeOp = cr.effectToCompositeOp(this.blend_mode);
		if (this.runtime.gl)
			cr.setGLBlend(this, this.blend_mode, this.runtime.gl);
	};
	Layer.prototype.updateZIndices = function ()
	{
		if (!this.zindices_stale)
			return;
		var i, len;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
;
;
			this.instances[i].zindex = i;
		}
		this.zindices_stale = false;
	};
	Layer.prototype.getScale = function ()
	{
		return this.getNormalScale() * this.runtime.aspect_scale;
	};
	Layer.prototype.getNormalScale = function ()
	{
		return ((this.scale * this.layout.scale) - 1) * this.zoomRate + 1;
	};
	Layer.prototype.getAngle = function ()
	{
		if (this.disableAngle)
			return 0;
		return cr.clamp_angle(this.layout.angle + this.angle);
	};
	Layer.prototype.draw = function (ctx)
	{
		this.render_offscreen = (this.forceOwnTexture || this.opacity !== 1.0 || this.blend_mode !== 0);
		var layer_canvas = this.runtime.canvas;
		var layer_ctx = ctx;
		ctx.globalAlpha = 1;
		ctx.globalCompositeOperation = "source-over";
		if (this.render_offscreen)
		{
			if (!this.runtime.layer_canvas)
			{
				this.runtime.layer_canvas = document.createElement("canvas");
;
				layer_canvas = this.runtime.layer_canvas;
				layer_canvas.width = this.runtime.width;
				layer_canvas.height = this.runtime.height;
				this.runtime.layer_ctx = layer_canvas.getContext("2d");
;
			}
			layer_canvas = this.runtime.layer_canvas;
			layer_ctx = this.runtime.layer_ctx;
			if (layer_canvas.width !== this.runtime.width)
				layer_canvas.width = this.runtime.width;
			if (layer_canvas.height !== this.runtime.height)
				layer_canvas.height = this.runtime.height;
			if (this.transparent)
				layer_ctx.clearRect(0, 0, this.runtime.width, this.runtime.height);
		}
		if (!this.transparent)
		{
			layer_ctx.fillStyle = "rgb(" + this.background_color[0] + "," + this.background_color[1] + "," + this.background_color[2] + ")";
			layer_ctx.fillRect(0, 0, this.runtime.width, this.runtime.height);
		}
		layer_ctx.save();
		this.disableAngle = true;
		var px = this.canvasToLayer(0, 0, true);
		var py = this.canvasToLayer(0, 0, false);
		this.disableAngle = false;
		if (this.runtime.pixel_rounding)
		{
			px = (px + 0.5) | 0;
			py = (py + 0.5) | 0;
		}
		this.rotateViewport(px, py, layer_ctx);
		var myscale = this.getScale();
		layer_ctx.scale(myscale, myscale);
		layer_ctx.translate(-px, -py);
		var i, len, inst, bbox;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
			inst = this.instances[i];
			if (!inst.visible || inst.width === 0 || inst.height === 0)
				continue;
			inst.update_bbox();
			bbox = inst.bbox;
			if (bbox.right < this.viewLeft || bbox.bottom < this.viewTop || bbox.left > this.viewRight || bbox.top > this.viewBottom)
				continue;
			layer_ctx.globalCompositeOperation = inst.compositeOp;
			inst.draw(layer_ctx);
		}
		layer_ctx.restore();
		if (this.render_offscreen)
		{
			ctx.globalCompositeOperation = this.compositeOp;
			ctx.globalAlpha = this.opacity;
			ctx.drawImage(layer_canvas, 0, 0);
		}
	};
	Layer.prototype.rotateViewport = function (px, py, ctx)
	{
		var myscale = this.getScale();
		this.viewLeft = px;
		this.viewTop = py;
		this.viewRight = px + (this.runtime.width * (1 / myscale));
		this.viewBottom = py + (this.runtime.height * (1 / myscale));
		var myAngle = this.getAngle();
		if (myAngle !== 0)
		{
			if (ctx)
			{
				ctx.translate(this.runtime.width / 2, this.runtime.height / 2);
				ctx.rotate(-myAngle);
				ctx.translate(this.runtime.width / -2, this.runtime.height / -2);
			}
			this.tmprect.set(this.viewLeft, this.viewTop, this.viewRight, this.viewBottom);
			this.tmprect.offset((this.viewLeft + this.viewRight) / -2, (this.viewTop + this.viewBottom) / -2);
			this.tmpquad.set_from_rotated_rect(this.tmprect, myAngle);
			this.tmpquad.bounding_box(this.tmprect);
			this.tmprect.offset((this.viewLeft + this.viewRight) / 2, (this.viewTop + this.viewBottom) / 2);
			this.viewLeft = this.tmprect.left;
			this.viewTop = this.tmprect.top;
			this.viewRight = this.tmprect.right;
			this.viewBottom = this.tmprect.bottom;
		}
	}
	Layer.prototype.drawGL = function (glw)
	{
		var windowWidth = this.runtime.width;
		var windowHeight = this.runtime.height;
		var shaderindex = 0;
		var etindex = 0;
		this.render_offscreen = (this.forceOwnTexture || this.opacity !== 1.0 || this.active_effect_types.length > 0 || this.blend_mode !== 0);
		if (this.render_offscreen)
		{
			if (!this.runtime.layer_tex)
			{
				this.runtime.layer_tex = glw.createEmptyTexture(this.runtime.width, this.runtime.height, this.runtime.linearSampling);
			}
			if (this.runtime.layer_tex.c2width !== this.runtime.width || this.runtime.layer_tex.c2height !== this.runtime.height)
			{
				glw.deleteTexture(this.runtime.layer_tex);
				this.runtime.layer_tex = glw.createEmptyTexture(this.runtime.width, this.runtime.height, this.runtime.linearSampling);
			}
			glw.setRenderingToTexture(this.runtime.layer_tex);
			if (this.transparent)
				glw.clear(0, 0, 0, 0);
		}
		if (!this.transparent)
		{
			glw.clear(this.background_color[0] / 255, this.background_color[1] / 255, this.background_color[2] / 255, 1);
		}
		this.disableAngle = true;
		var px = this.canvasToLayer(0, 0, true);
		var py = this.canvasToLayer(0, 0, false);
		this.disableAngle = false;
		if (this.runtime.pixel_rounding)
		{
			px = (px + 0.5) | 0;
			py = (py + 0.5) | 0;
		}
		this.rotateViewport(px, py, null);
		var myscale = this.getScale();
		glw.resetModelView();
		glw.scale(myscale, myscale);
		glw.rotateZ(-this.getAngle());
		glw.translate((this.viewLeft + this.viewRight) / -2, (this.viewTop + this.viewBottom) / -2);
		glw.updateModelView();
		var i, len, inst, bbox;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
			inst = this.instances[i];
			if (!inst.visible || inst.width === 0 || inst.height === 0)
				continue;
			inst.update_bbox();
			bbox = inst.bbox;
			if (bbox.right < this.viewLeft || bbox.bottom < this.viewTop || bbox.left > this.viewRight || bbox.top > this.viewBottom)
				continue;
			if (inst.uses_shaders)
			{
				shaderindex = inst.active_effect_types[0].shaderindex;
				etindex = inst.active_effect_types[0].index;
				if (inst.active_effect_types.length === 1 && !glw.programUsesCrossSampling(shaderindex) &&
					!glw.programExtendsBox(shaderindex) && ((!inst.angle && !inst.layer.getAngle()) || !glw.programUsesDest(shaderindex)) &&
					inst.opacity === 1 && !inst.type.plugin.must_predraw)
				{
					glw.switchProgram(shaderindex);
					glw.setBlend(inst.srcBlend, inst.destBlend);
					if (glw.programIsAnimated(shaderindex))
						this.runtime.redraw = true;
					var destStartX = 0, destStartY = 0, destEndX = 0, destEndY = 0;
					if (glw.programUsesDest(shaderindex))
					{
						var bbox = inst.bbox;
						var screenleft = this.layerToCanvas(bbox.left, bbox.top, true);
						var screentop = this.layerToCanvas(bbox.left, bbox.top, false);
						var screenright = this.layerToCanvas(bbox.right, bbox.bottom, true);
						var screenbottom = this.layerToCanvas(bbox.right, bbox.bottom, false);
						destStartX = screenleft / windowWidth;
						destStartY = 1 - screentop / windowHeight;
						destEndX = screenright / windowWidth;
						destEndY = 1 - screenbottom / windowHeight;
					}
					glw.setProgramParameters(this.render_offscreen ? this.runtime.layer_tex : this.layout.getRenderTarget(), // backTex
											 1.0 / inst.width,			// pixelWidth
											 1.0 / inst.height,			// pixelHeight
											 destStartX, destStartY,
											 destEndX, destEndY,
											 this.getScale(),
											 inst.effect_params[etindex]);
					inst.drawGL(glw);
				}
				else
				{
					this.layout.renderEffectChain(glw, this, inst, this.render_offscreen ? this.runtime.layer_tex : this.layout.getRenderTarget());
					glw.resetModelView();
					glw.scale(myscale, myscale);
					glw.rotateZ(-this.getAngle());
					glw.translate((this.viewLeft + this.viewRight) / -2, (this.viewTop + this.viewBottom) / -2);
					glw.updateModelView();
				}
			}
			else
			{
				glw.switchProgram(0);		// un-set any previously set shader
				glw.setBlend(inst.srcBlend, inst.destBlend);
				inst.drawGL(glw);
			}
		}
		if (this.render_offscreen)
		{
			shaderindex = this.active_effect_types.length ? this.active_effect_types[0].shaderindex : 0;
			etindex = this.active_effect_types.length ? this.active_effect_types[0].index : 0;
			if (this.active_effect_types.length === 0 || (this.active_effect_types.length === 1 &&
				!glw.programUsesCrossSampling(shaderindex) && this.opacity === 1))
			{
				if (this.active_effect_types.length === 1)
				{
					glw.switchProgram(shaderindex);
					glw.setProgramParameters(this.layout.getRenderTarget(),		// backTex
											 1.0 / this.runtime.width,			// pixelWidth
											 1.0 / this.runtime.height,			// pixelHeight
											 0.0, 0.0,							// destStart
											 1.0, 1.0,							// destEnd
											 this.getScale(),					// layerScale
											 this.effect_params[etindex]);		// fx parameters
					if (glw.programIsAnimated(shaderindex))
						this.runtime.redraw = true;
				}
				else
					glw.switchProgram(0);
				glw.setRenderingToTexture(this.layout.getRenderTarget());
				glw.setOpacity(this.opacity);
				glw.setTexture(this.runtime.layer_tex);
				glw.setBlend(this.srcBlend, this.destBlend);
				glw.resetModelView();
				glw.updateModelView();
				var halfw = this.runtime.width / 2;
				var halfh = this.runtime.height / 2;
				glw.quad(-halfw, halfh, halfw, halfh, halfw, -halfh, -halfw, -halfh);
				glw.setTexture(null);
			}
			else
			{
				this.layout.renderEffectChain(glw, this, null, this.layout.getRenderTarget());
			}
		}
	};
	Layer.prototype.canvasToLayer = function (ptx, pty, getx)
	{
		var multiplier = this.runtime.devicePixelRatio;
		if (this.runtime.isRetina && this.runtime.fullscreen_mode > 0)
		{
			ptx *= multiplier;
			pty *= multiplier;
		}
		var ox = (this.runtime.original_width / 2);
		var oy = (this.runtime.original_height / 2);
		var x = ((this.layout.scrollX - ox) * this.parallaxX) + ox;
		var y = ((this.layout.scrollY - oy) * this.parallaxY) + oy;
		var invScale = 1 / this.getScale();
		x -= (this.runtime.width * invScale) / 2;
		y -= (this.runtime.height * invScale) / 2;
		x += ptx * invScale;
		y += pty * invScale;
		var a = this.getAngle();
		if (a !== 0)
		{
			x -= this.layout.scrollX;
			y -= this.layout.scrollY;
			var cosa = Math.cos(a);
			var sina = Math.sin(a);
			var x_temp = (x * cosa) - (y * sina);
			y = (y * cosa) + (x * sina);
			x = x_temp;
			x += this.layout.scrollX;
			y += this.layout.scrollY;
		}
		return getx ? x : y;
	};
	Layer.prototype.layerToCanvas = function (ptx, pty, getx)
	{
		var a = this.getAngle();
		if (a !== 0)
		{
			ptx -= this.layout.scrollX;
			pty -= this.layout.scrollY;
			var cosa = Math.cos(-a);
			var sina = Math.sin(-a);
			var x_temp = (ptx * cosa) - (pty * sina);
			pty = (pty * cosa) + (ptx * sina);
			ptx = x_temp;
			ptx += this.layout.scrollX;
			pty += this.layout.scrollY;
		}
		var ox = (this.runtime.original_width / 2);
		var oy = (this.runtime.original_height / 2);
		var x = ((this.layout.scrollX - ox) * this.parallaxX) + ox;
		var y = ((this.layout.scrollY - oy) * this.parallaxY) + oy;
		var invScale = 1 / this.getScale();
		x -= (this.runtime.width * invScale) / 2;
		y -= (this.runtime.height * invScale) / 2;
		x = (ptx - x) / invScale;
		y = (pty - y) / invScale;
		var multiplier = this.runtime.devicePixelRatio;
		if (this.runtime.isRetina && this.runtime.fullscreen_mode > 0)
		{
			x /= multiplier;
			y /= multiplier;
		}
		return getx ? x : y;
	};
	Layer.prototype.rotatePt = function (x_, y_, getx)
	{
		if (this.getAngle() === 0)
			return getx ? x_ : y_;
		var nx = this.layerToCanvas(x_, y_, true);
		var ny = this.layerToCanvas(x_, y_, false);
		this.disableAngle = true;
		var px = this.canvasToLayer(nx, ny, true);
		var py = this.canvasToLayer(nx, ny, true);
		this.disableAngle = false;
		return getx ? px : py;
	};
	Layer.prototype.saveToJSON = function ()
	{
		var i, len, et;
		var o = {
			"s": this.scale,
			"a": this.angle,
			"vl": this.viewLeft,
			"vt": this.viewTop,
			"vr": this.viewRight,
			"vb": this.viewBottom,
			"v": this.visible,
			"bc": this.background_color,
			"t": this.transparent,
			"px": this.parallaxX,
			"py": this.parallaxY,
			"o": this.opacity,
			"zr": this.zoomRate,
			"fx": [],
			"instances": []
		};
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			o["fx"].push({"name": et.name, "active": et.active, "params": this.effect_params[et.index] });
		}
		return o;
	};
	function sortInstanceByZIndex(a, b)
	{
		return a.zindex - b.zindex;
	};
	Layer.prototype.loadFromJSON = function (o)
	{
		var i, len, p, inst, fx;
		this.scale = o["s"];
		this.angle = o["a"];
		this.viewLeft = o["vl"];
		this.viewTop = o["vt"];
		this.viewRight = o["vr"];
		this.viewBottom = o["vb"];
		this.visible = o["v"];
		this.background_color = o["bc"];
		this.transparent = o["t"];
		this.parallaxX = o["px"];
		this.parallaxY = o["py"];
		this.opacity = o["o"];
		this.zoomRate = o["zr"];
		var ofx = o["fx"];
		for (i = 0, len = ofx.length; i < len; i++)
		{
			fx = this.getEffectByName(ofx[i]["name"]);
			if (!fx)
				continue;		// must've gone missing
			fx.active = ofx[i]["active"];
			this.effect_params[fx.index] = ofx[i]["params"];
		}
		this.updateActiveEffects();
		this.instances.sort(sortInstanceByZIndex);
		this.zindices_stale = true;
	};
	cr.layer = Layer;
}());
;
(function()
{
	var allUniqueSolModifiers = [];
	function testSolsMatch(arr1, arr2)
	{
		var i, len = arr1.length;
		switch (len) {
		case 0:
			return true;
		case 1:
			return arr1[0] === arr2[0];
		case 2:
			return arr1[0] === arr2[0] && arr1[1] === arr2[1];
		default:
			for (i = 0; i < len; i++)
			{
				if (arr1[i] !== arr2[i])
					return false;
			}
			return true;
		}
	};
	function solArraySorter(t1, t2)
	{
		return t1.index - t2.index;
	};
	function findMatchingSolModifier(arr)
	{
		var i, len, u, temp, subarr;
		if (arr.length === 2)
		{
			if (arr[0].index > arr[1].index)
			{
				temp = arr[0];
				arr[0] = arr[1];
				arr[1] = temp;
			}
		}
		else if (arr.length > 2)
			arr.sort(solArraySorter);		// so testSolsMatch compares in same order
		if (arr.length >= allUniqueSolModifiers.length)
			allUniqueSolModifiers.length = arr.length + 1;
		if (!allUniqueSolModifiers[arr.length])
			allUniqueSolModifiers[arr.length] = [];
		subarr = allUniqueSolModifiers[arr.length];
		for (i = 0, len = subarr.length; i < len; i++)
		{
			u = subarr[i];
			if (testSolsMatch(arr, u))
				return u;
		}
		subarr.push(arr);
		return arr;
	};
	function EventSheet(runtime, m)
	{
		this.runtime = runtime;
		this.triggers = {};
		this.fasttriggers = {};
        this.hasRun = false;
        this.includes = new cr.ObjectSet(); // all event sheets included by this sheet, at first-level indirection only
		this.name = m[0];
		var em = m[1];		// events model
		this.events = [];       // triggers won't make it to this array
		var i, len;
		for (i = 0, len = em.length; i < len; i++)
			this.init_event(em[i], null, this.events);
	};
    EventSheet.prototype.toString = function ()
    {
        return this.name;
    };
	EventSheet.prototype.init_event = function (m, parent, nontriggers)
	{
		switch (m[0]) {
		case 0:	// event block
		{
			var block = new cr.eventblock(this, parent, m);
			cr.seal(block);
			if (block.orblock)
			{
				nontriggers.push(block);
				var i, len;
				for (i = 0, len = block.conditions.length; i < len; i++)
				{
					if (block.conditions[i].trigger)
						this.init_trigger(block, i);
				}
			}
			else
			{
				if (block.is_trigger())
					this.init_trigger(block, 0);
				else
					nontriggers.push(block);
			}
			break;
		}
		case 1: // variable
		{
			var v = new cr.eventvariable(this, parent, m);
			cr.seal(v);
			nontriggers.push(v);
			break;
		}
        case 2:	// include
        {
            var inc = new cr.eventinclude(this, parent, m);
			cr.seal(inc);
            nontriggers.push(inc);
			break;
        }
		default:
;
		}
	};
	EventSheet.prototype.postInit = function ()
	{
		var i, len;
		for (i = 0, len = this.events.length; i < len; i++)
		{
			this.events[i].postInit(i < len - 1 && this.events[i + 1].is_else_block);
		}
	};
	EventSheet.prototype.run = function ()
	{
        this.hasRun = true;
		this.runtime.isRunningEvents = true;
		var i, len;
		for (i = 0, len = this.events.length; i < len; i++)
		{
			var ev = this.events[i];
			ev.run();
			this.runtime.clearSol(ev.solModifiers);
			if (!this.runtime.deathRow.isEmpty() || this.runtime.createRow.length)
				this.runtime.ClearDeathRow();
		}
		this.runtime.isRunningEvents = false;
	};
	EventSheet.prototype.init_trigger = function (trig, index)
	{
		if (!trig.orblock)
			this.runtime.triggers_to_postinit.push(trig);	// needs to be postInit'd later
		var i, len;
		var cnd = trig.conditions[index];
		var type_name;
		if (cnd.type)
			type_name = cnd.type.name;
		else
			type_name = "system";
		var fasttrigger = cnd.fasttrigger;
		var triggers = (fasttrigger ? this.fasttriggers : this.triggers);
		if (!triggers[type_name])
			triggers[type_name] = [];
		var obj_entry = triggers[type_name];
		var method = cnd.func;
		if (fasttrigger)
		{
			if (!cnd.parameters.length)				// no parameters
				return;
			var firstparam = cnd.parameters[0];
			if (firstparam.type !== 1 ||			// not a string param
				firstparam.expression.type !== 2)	// not a string literal node
			{
				return;
			}
			var fastevs;
			var firstvalue = firstparam.expression.value.toLowerCase();
			var i, len;
			for (i = 0, len = obj_entry.length; i < len; i++)
			{
				if (obj_entry[i].method == method)
				{
					fastevs = obj_entry[i].evs;
					if (!fastevs[firstvalue])
						fastevs[firstvalue] = [[trig, index]];
					else
						fastevs[firstvalue].push([trig, index]);
					return;
				}
			}
			fastevs = {};
			fastevs[firstvalue] = [[trig, index]];
			obj_entry.push({ method: method, evs: fastevs });
		}
		else
		{
			for (i = 0, len = obj_entry.length; i < len; i++)
			{
				if (obj_entry[i].method == method)
				{
					obj_entry[i].evs.push([trig, index]);
					return;
				}
			}
			obj_entry.push({ method: method, evs: [[trig, index]]});
		}
	};
	cr.eventsheet = EventSheet;
	function Selection(type)
	{
		this.type = type;
		this.instances = [];        // subset of picked instances
		this.else_instances = [];	// subset of unpicked instances
		this.select_all = true;
	};
	Selection.prototype.hasObjects = function ()
	{
		if (this.select_all)
			return this.type.instances.length;
		else
			return this.instances.length;
	};
	Selection.prototype.getObjects = function ()
	{
		if (this.select_all)
			return this.type.instances;
		else
			return this.instances;
	};
	/*
	Selection.prototype.ensure_picked = function (inst, skip_siblings)
	{
		var i, len;
		var orblock = inst.runtime.getCurrentEventStack().current_event.orblock;
		if (this.select_all)
		{
			this.select_all = false;
			if (orblock)
			{
				cr.shallowAssignArray(this.else_instances, inst.type.instances);
				cr.arrayFindRemove(this.else_instances, inst);
			}
			this.instances.length = 1;
			this.instances[0] = inst;
		}
		else
		{
			if (orblock)
			{
				i = this.else_instances.indexOf(inst);
				if (i !== -1)
				{
					this.instances.push(this.else_instances[i]);
					this.else_instances.splice(i, 1);
				}
			}
			else
			{
				if (this.instances.indexOf(inst) === -1)
					this.instances.push(inst);
			}
		}
		if (!skip_siblings)
		{
		}
	};
	*/
	Selection.prototype.pick_one = function (inst)
	{
		if (!inst)
			return;
		if (inst.runtime.getCurrentEventStack().current_event.orblock)
		{
			if (this.select_all)
			{
				this.instances.length = 0;
				cr.shallowAssignArray(this.else_instances, inst.type.instances);
				this.select_all = false;
			}
			var i = this.else_instances.indexOf(inst);
			if (i !== -1)
			{
				this.instances.push(this.else_instances[i]);
				this.else_instances.splice(i, 1);
			}
		}
		else
		{
			this.select_all = false;
			this.instances.length = 1;
			this.instances[0] = inst;
		}
	};
	cr.selection = Selection;
	function EventBlock(sheet, parent, m)
	{
		this.sheet = sheet;
		this.parent = parent;
		this.runtime = sheet.runtime;
		this.solModifiers = [];
		this.solModifiersIncludingParents = [];
		this.solWriterAfterCnds = false;	// block does not change SOL after running its conditions
		this.group = false;					// is group of events
		this.initially_activated = false;	// if a group, is active on startup
		this.toplevelevent = false;			// is an event block parented only by a top-level group
		this.toplevelgroup = false;			// is parented only by other groups or is top-level (i.e. not in a subevent)
		this.has_else_block = false;		// is followed by else
;
		this.conditions = [];
		this.actions = [];
		this.subevents = [];
        if (m[1])
        {
			this.group_name = m[1][1].toLowerCase();
			this.group = true;
			this.initially_activated = !!m[1][0];
			this.runtime.allGroups.push(this);
            this.runtime.activeGroups[(/*this.sheet.name + "|" + */this.group_name).toLowerCase()] = this.initially_activated;
        }
		else
		{
			this.group_name = "";
			this.group = false;
			this.initially_activated = false;
		}
		this.orblock = m[2];
		this.sid = m[3];
		if (!this.group)
			this.runtime.blocksBySid[this.sid.toString()] = this;
		var i, len;
		var cm = m[4];
		for (i = 0, len = cm.length; i < len; i++)
		{
			var cnd = new cr.condition(this, cm[i]);
			cr.seal(cnd);
			this.conditions.push(cnd);
			/*
			if (cnd.is_logical())
				this.is_logical = true;
			if (cnd.type && !cnd.type.plugin.singleglobal && this.cndReferences.indexOf(cnd.type) === -1)
				this.cndReferences.push(cnd.type);
			*/
			this.addSolModifier(cnd.type);
		}
		var am = m[5];
		for (i = 0, len = am.length; i < len; i++)
		{
			var act = new cr.action(this, am[i]);
			cr.seal(act);
			this.actions.push(act);
		}
		if (m.length === 7)
		{
			var em = m[6];
			for (i = 0, len = em.length; i < len; i++)
				this.sheet.init_event(em[i], this, this.subevents);
		}
		this.is_else_block = false;
		if (this.conditions.length)
			this.is_else_block = (this.conditions[0].type == null && this.conditions[0].func == cr.system_object.prototype.cnds.Else);
	};
	EventBlock.prototype.postInit = function (hasElse/*, prevBlock_*/)
	{
		var i, len;
		var p = this.parent;
		if (this.group)
		{
			this.toplevelgroup = true;
			while (p)
			{
				if (!p.group)
				{
					this.toplevelgroup = false;
					break;
				}
				p = p.parent;
			}
		}
		this.toplevelevent = !this.is_trigger() && (!this.parent || (this.parent.group && this.parent.toplevelgroup));
		this.has_else_block = !!hasElse;
		this.solModifiersIncludingParents = this.solModifiers.slice(0);
		p = this.parent;
		while (p)
		{
			for (i = 0, len = p.solModifiers.length; i < len; i++)
				this.addParentSolModifier(p.solModifiers[i]);
			p = p.parent;
		}
		this.solModifiers = findMatchingSolModifier(this.solModifiers);
		this.solModifiersIncludingParents = findMatchingSolModifier(this.solModifiersIncludingParents);
		var i, len/*, s*/;
		for (i = 0, len = this.conditions.length; i < len; i++)
			this.conditions[i].postInit();
		for (i = 0, len = this.actions.length; i < len; i++)
			this.actions[i].postInit();
		for (i = 0, len = this.subevents.length; i < len; i++)
		{
			this.subevents[i].postInit(i < len - 1 && this.subevents[i + 1].is_else_block);
		}
		/*
		if (this.is_else_block && this.prev_block)
		{
			for (i = 0, len = this.prev_block.solModifiers.length; i < len; i++)
			{
				s = this.prev_block.solModifiers[i];
				if (this.solModifiers.indexOf(s) === -1)
					this.solModifiers.push(s);
			}
		}
		*/
	}
	function addSolModifierToList(type, arr)
	{
		var i, len, t;
		if (!type)
			return;
		if (arr.indexOf(type) === -1)
			arr.push(type);
		if (type.is_contained)
		{
			for (i = 0, len = type.container.length; i < len; i++)
			{
				t = type.container[i];
				if (type === t)
					continue;		// already handled
				if (arr.indexOf(t) === -1)
					arr.push(t);
			}
		}
	};
	EventBlock.prototype.addSolModifier = function (type)
	{
		addSolModifierToList(type, this.solModifiers);
	};
	EventBlock.prototype.addParentSolModifier = function (type)
	{
		addSolModifierToList(type, this.solModifiersIncludingParents);
	};
	EventBlock.prototype.setSolWriterAfterCnds = function ()
	{
		this.solWriterAfterCnds = true;
		if (this.parent)
			this.parent.setSolWriterAfterCnds();
	};
	EventBlock.prototype.is_trigger = function ()
	{
		if (!this.conditions.length)    // no conditions
			return false;
		else
			return this.conditions[0].trigger;
	};
	EventBlock.prototype.run = function ()
	{
		var i, len, any_true = false/*, bail = false*/;
		var evinfo = this.runtime.getCurrentEventStack();
		evinfo.current_event = this;
		if (!this.is_else_block)
			evinfo.else_branch_ran = false;
		if (this.orblock)
		{
			if (this.conditions.length === 0)
				any_true = true;		// be sure to run if empty block
			for (evinfo.cndindex = 0, len = this.conditions.length; evinfo.cndindex < len; evinfo.cndindex++)
			{
				if (this.conditions[evinfo.cndindex].trigger)		// skip triggers when running OR block
					continue;
				if (this.conditions[evinfo.cndindex].run())			// make sure all conditions run and run if any were true
					any_true = true;
			}
			evinfo.last_event_true = any_true;
			if (any_true)
				this.run_actions_and_subevents();
		}
		else
		{
			for (evinfo.cndindex = 0, len = this.conditions.length; evinfo.cndindex < len; evinfo.cndindex++)
			{
				if (!this.conditions[evinfo.cndindex].run())    // condition failed
				{
					evinfo.last_event_true = false;
					if (this.toplevelevent && (!this.runtime.deathRow.isEmpty() || this.runtime.createRow.length))
						this.runtime.ClearDeathRow();
					return;										// bail out now
				}
			}
			evinfo.last_event_true = true;
			this.run_actions_and_subevents();
		}
		if (evinfo.last_event_true && this.has_else_block)
			evinfo.else_branch_ran = true;
		if (this.toplevelevent && (!this.runtime.deathRow.isEmpty() || this.runtime.createRow.length))
			this.runtime.ClearDeathRow();
	};
	EventBlock.prototype.run_orblocktrigger = function (index)
	{
		var evinfo = this.runtime.getCurrentEventStack();
		evinfo.current_event = this;
		if (this.conditions[index].run())
		{
			this.run_actions_and_subevents();
		}
	};
	EventBlock.prototype.run_actions_and_subevents = function ()
	{
		var evinfo = this.runtime.getCurrentEventStack();
		var len;
		for (evinfo.actindex = 0, len = this.actions.length; evinfo.actindex < len; evinfo.actindex++)
		{
			if (this.actions[evinfo.actindex].run())
				return;
		}
		this.run_subevents();
	};
	EventBlock.prototype.resume_actions_and_subevents = function ()
	{
		var evinfo = this.runtime.getCurrentEventStack();
		var len;
		for (len = this.actions.length; evinfo.actindex < len; evinfo.actindex++)
		{
			if (this.actions[evinfo.actindex].run())
				return;
		}
		this.run_subevents();
	};
	EventBlock.prototype.run_subevents = function ()
	{
		if (!this.subevents.length)
			return;
		var i, len, subev, pushpop/*, skipped_pop = false, pop_modifiers = null*/;
		var last = this.subevents.length - 1;
		this.runtime.pushEventStack(this);
		if (this.solWriterAfterCnds)
		{
			for (i = 0, len = this.subevents.length; i < len; i++)
			{
				subev = this.subevents[i];
				pushpop = (!this.toplevelgroup || (!this.group && i < last));
				if (pushpop)
					this.runtime.pushCopySol(subev.solModifiers);
				subev.run();
				if (pushpop)
					this.runtime.popSol(subev.solModifiers);
				else
					this.runtime.clearSol(subev.solModifiers);
			}
		}
		else
		{
			for (i = 0, len = this.subevents.length; i < len; i++)
			{
				this.subevents[i].run();
			}
		}
		this.runtime.popEventStack();
	};
	EventBlock.prototype.run_pretrigger = function ()
	{
		var evinfo = this.runtime.getCurrentEventStack();
		evinfo.current_event = this;
		var any_true = false;
		var i, len;
		for (evinfo.cndindex = 0, len = this.conditions.length; evinfo.cndindex < len; evinfo.cndindex++)
		{
;
			if (this.conditions[evinfo.cndindex].run())
				any_true = true;
			else if (!this.orblock)			// condition failed (let OR blocks run all conditions anyway)
				return false;               // bail out
		}
		return this.orblock ? any_true : true;
	};
	EventBlock.prototype.retrigger = function ()
	{
		this.runtime.execcount++;
		var prevcndindex = this.runtime.getCurrentEventStack().cndindex;
		var len;
		var evinfo = this.runtime.pushEventStack(this);
		if (!this.orblock)
		{
			for (evinfo.cndindex = prevcndindex + 1, len = this.conditions.length; evinfo.cndindex < len; evinfo.cndindex++)
			{
				if (!this.conditions[evinfo.cndindex].run())    // condition failed
				{
					this.runtime.popEventStack();               // moving up level of recursion
					return false;                               // bail out
				}
			}
		}
		this.run_actions_and_subevents();
		this.runtime.popEventStack();
		return true;		// ran an iteration
	};
	cr.eventblock = EventBlock;
	function Condition(block, m)
	{
		this.block = block;
		this.sheet = block.sheet;
		this.runtime = block.runtime;
		this.parameters = [];
		this.results = [];
		this.extra = {};		// for plugins to stow away some custom info
		this.func = m[1];
;
		this.trigger = (m[3] > 0);
		this.fasttrigger = (m[3] === 2);
		this.looping = m[4];
		this.inverted = m[5];
		this.isstatic = m[6];
		this.sid = m[7];
		this.runtime.cndsBySid[this.sid.toString()] = this;
		if (m[0] === -1)		// system object
		{
			this.type = null;
			this.run = this.run_system;
			this.behaviortype = null;
			this.beh_index = -1;
		}
		else
		{
			this.type = this.runtime.types_by_index[m[0]];
;
			if (this.isstatic)
				this.run = this.run_static;
			else
				this.run = this.run_object;
			if (m[2])
			{
				this.behaviortype = this.type.getBehaviorByName(m[2]);
;
				this.beh_index = this.type.getBehaviorIndexByName(m[2]);
;
			}
			else
			{
				this.behaviortype = null;
				this.beh_index = -1;
			}
			if (this.block.parent)
				this.block.parent.setSolWriterAfterCnds();
		}
		if (this.fasttrigger)
			this.run = this.run_true;
		if (m.length === 9)
		{
			var i, len;
			var em = m[8];
			for (i = 0, len = em.length; i < len; i++)
			{
				var param = new cr.parameter(this, em[i]);
				cr.seal(param);
				this.parameters.push(param);
			}
			this.results.length = em.length;
		}
	};
	Condition.prototype.postInit = function ()
	{
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
			this.parameters[i].postInit();
	};
	/*
	Condition.prototype.is_logical = function ()
	{
		return !this.type || this.type.plugin.singleglobal;
	};
	*/
	Condition.prototype.run_true = function ()
	{
		return true;
	};
	Condition.prototype.run_system = function ()
	{
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
			this.results[i] = this.parameters[i].get();
		return cr.xor(this.func.apply(this.runtime.system, this.results), this.inverted);
	};
	Condition.prototype.run_static = function ()
	{
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
			this.results[i] = this.parameters[i].get(i);
		var ret = this.func.apply(this.behaviortype ? this.behaviortype : this.type, this.results);
		this.type.applySolToContainer();
		return ret;
	};
	Condition.prototype.run_object = function ()
	{
		var i, j, leni, lenj, ret, met, inst, s, sol2;
		var sol = this.type.getCurrentSol();
		var is_orblock = this.block.orblock && !this.trigger;		// triggers in OR blocks need to work normally
		var offset = 0;
		var is_contained = this.type.is_contained;
		if (sol.select_all) {
			sol.instances.length = 0;       // clear contents
			sol.else_instances.length = 0;
			for (i = 0, leni = this.type.instances.length; i < leni; i++)
			{
				inst = this.type.instances[i];
;
				for (j = 0, lenj = this.parameters.length; j < lenj; j++)
					this.results[j] = this.parameters[j].get(i);        // default SOL index is current object
				if (this.beh_index > -1)
				{
					if (this.type.is_family)
					{
						offset = inst.type.family_beh_map[this.type.family_index];
					}
					ret = this.func.apply(inst.behavior_insts[this.beh_index + offset], this.results);
				}
				else
					ret = this.func.apply(inst, this.results);
				met = cr.xor(ret, this.inverted);
				if (met)
					sol.instances.push(inst);
				else if (is_orblock)					// in OR blocks, keep the instances not meeting the condition for subsequent testing
					sol.else_instances.push(inst);
			}
			if (this.type.finish)
				this.type.finish(true);
			sol.select_all = false;
			this.type.applySolToContainer();
			return sol.hasObjects();
		}
		else {
			var k = 0;
			var arr = (is_orblock ? sol.else_instances : sol.instances);
			var any_true = false;
			for (i = 0, leni = arr.length; i < leni; i++)
			{
				inst = arr[i];
;
				for (j = 0, lenj = this.parameters.length; j < lenj; j++)
					this.results[j] = this.parameters[j].get(i);        // default SOL index is current object
				if (this.beh_index > -1)
				{
					if (this.type.is_family)
					{
						offset = inst.type.family_beh_map[this.type.family_index];
					}
					ret = this.func.apply(inst.behavior_insts[this.beh_index + offset], this.results);
				}
				else
					ret = this.func.apply(inst, this.results);
				if (cr.xor(ret, this.inverted))
				{
					any_true = true;
					if (is_orblock)
					{
						sol.instances.push(inst);
						if (is_contained)
						{
							for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
							{
								s = inst.siblings[j];
								s.type.getCurrentSol().instances.push(s);
							}
						}
					}
					else
					{
						arr[k] = inst;
						if (is_contained)
						{
							for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
							{
								s = inst.siblings[j];
								s.type.getCurrentSol().instances[k] = s;
							}
						}
						k++;
					}
				}
				else
				{
					if (is_orblock)
					{
						arr[k] = inst;
						if (is_contained)
						{
							for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
							{
								s = inst.siblings[j];
								s.type.getCurrentSol().else_instances[k] = s;
							}
						}
						k++;
					}
				}
			}
			arr.length = k;
			if (is_contained)
			{
				for (i = 0, leni = this.type.container.length; i < leni; i++)
				{
					sol2 = this.type.container[i].getCurrentSol();
					if (is_orblock)
						sol2.else_instances.length = k;
					else
						sol2.instances.length = k;
				}
			}
			var pick_in_finish = any_true;		// don't pick in finish() if we're only doing the logic test below
			if (is_orblock && !any_true)
			{
				for (i = 0, leni = sol.instances.length; i < leni; i++)
				{
					inst = sol.instances[i];
					for (j = 0, lenj = this.parameters.length; j < lenj; j++)
						this.results[j] = this.parameters[j].get(i);
					if (this.beh_index > -1)
						ret = this.func.apply(inst.behavior_insts[this.beh_index], this.results);
					else
						ret = this.func.apply(inst, this.results);
					if (cr.xor(ret, this.inverted))
					{
						any_true = true;
						break;		// got our flag, don't need to test any more
					}
				}
			}
			if (this.type.finish)
				this.type.finish(pick_in_finish || is_orblock);
			return is_orblock ? any_true : sol.hasObjects();
		}
	};
	cr.condition = Condition;
	function Action(block, m)
	{
		this.block = block;
		this.sheet = block.sheet;
		this.runtime = block.runtime;
		this.parameters = [];
		this.results = [];
		this.extra = {};		// for plugins to stow away some custom info
		this.func = m[1];
;
		if (m[0] === -1)	// system
		{
			this.type = null;
			this.run = this.run_system;
			this.behaviortype = null;
			this.beh_index = -1;
		}
		else
		{
			this.type = this.runtime.types_by_index[m[0]];
;
			this.run = this.run_object;
			if (m[2])
			{
				this.behaviortype = this.type.getBehaviorByName(m[2]);
;
				this.beh_index = this.type.getBehaviorIndexByName(m[2]);
;
			}
			else
			{
				this.behaviortype = null;
				this.beh_index = -1;
			}
		}
		this.sid = m[3];
		this.runtime.actsBySid[this.sid.toString()] = this;
		if (m.length === 5)
		{
			var i, len;
			var em = m[4];
			for (i = 0, len = em.length; i < len; i++)
			{
				var param = new cr.parameter(this, em[i]);
				cr.seal(param);
				this.parameters.push(param);
			}
			this.results.length = em.length;
		}
	};
	Action.prototype.postInit = function ()
	{
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
			this.parameters[i].postInit();
	};
	Action.prototype.run_system = function ()
	{
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
			this.results[i] = this.parameters[i].get();
		return this.func.apply(this.runtime.system, this.results);
	};
	Action.prototype.run_object = function ()
	{
		var instances = this.type.getCurrentSol().getObjects();
		var i, j, leni, lenj, inst;
		for (i = 0, leni = instances.length; i < leni; i++)
		{
			inst = instances[i];
			for (j = 0, lenj = this.parameters.length; j < lenj; j++)
				this.results[j] = this.parameters[j].get(i);    // pass i to use as default SOL index
			if (this.beh_index > -1)
			{
				var offset = 0;
				if (this.type.is_family)
				{
					offset = inst.type.family_beh_map[this.type.family_index];
				}
				this.func.apply(inst.behavior_insts[this.beh_index + offset], this.results);
			}
			else
				this.func.apply(inst, this.results);
		}
		return false;
	};
	cr.action = Action;
	var tempValues = [];
	var tempValuesPtr = -1;
	function Parameter(owner, m)
	{
		this.owner = owner;
		this.block = owner.block;
		this.sheet = owner.sheet;
		this.runtime = owner.runtime;
		this.type = m[0];
		this.expression = null;
		this.solindex = 0;
		this.combosel = 0;
		this.layout = null;
		this.key = 0;
		this.object = null;
		this.index = 0;
		this.varname = null;
		this.eventvar = null;
		this.fileinfo = null;
		this.subparams = null;
		this.variadicret = null;
		var i, len, param;
		switch (m[0])
		{
			case 0:		// number
			case 7:		// any
				this.expression = new cr.expNode(this, m[1]);
				this.solindex = 0;
				this.get = this.get_exp;
				break;
			case 1:		// string
				this.expression = new cr.expNode(this, m[1]);
				this.solindex = 0;
				this.get = this.get_exp_str;
				break;
			case 5:		// layer
				this.expression = new cr.expNode(this, m[1]);
				this.solindex = 0;
				this.get = this.get_layer;
				break;
			case 3:		// combo
			case 8:		// cmp
				this.combosel = m[1];
				this.get = this.get_combosel;
				break;
			case 6:		// layout
				this.layout = this.runtime.layouts[m[1]];
;
				this.get = this.get_layout;
				break;
			case 9:		// keyb
				this.key = m[1];
				this.get = this.get_key;
				break;
			case 4:		// object
				this.object = this.runtime.types_by_index[m[1]];
;
				this.get = this.get_object;
				this.block.addSolModifier(this.object);
				if (this.owner instanceof cr.action)
					this.block.setSolWriterAfterCnds();
				else if (this.block.parent)
					this.block.parent.setSolWriterAfterCnds();
				break;
			case 10:	// instvar
				this.index = m[1];
				if (owner.type.is_family)
					this.get = this.get_familyvar;
				else
					this.get = this.get_instvar;
				break;
			case 11:	// eventvar
				this.varname = m[1];
				this.eventvar = null;
				this.get = this.get_eventvar;
				break;
			case 2:		// audiofile	["name", ismusic]
			case 12:	// fileinfo		"name"
				this.fileinfo = m[1];
				this.get = this.get_audiofile;
				break;
			case 13:	// variadic
				this.get = this.get_variadic;
				this.subparams = [];
				this.variadicret = [];
				for (i = 1, len = m.length; i < len; i++)
				{
					param = new cr.parameter(this.owner, m[i]);
					cr.seal(param);
					this.subparams.push(param);
					this.variadicret.push(0);
				}
				break;
			default:
;
		}
	};
	Parameter.prototype.postInit = function ()
	{
		var i, len;
		if (this.type === 11)		// eventvar
		{
			this.eventvar = this.runtime.getEventVariableByName(this.varname, this.block.parent);
;
		}
		else if (this.type === 13)	// variadic, postInit all sub-params
		{
			for (i = 0, len = this.subparams.length; i < len; i++)
				this.subparams[i].postInit();
		}
		if (this.expression)
			this.expression.postInit();
	};
	Parameter.prototype.pushTempValue = function ()
	{
		tempValuesPtr++;
		if (tempValues.length === tempValuesPtr)
			tempValues.push(new cr.expvalue());
		return tempValues[tempValuesPtr];
	};
	Parameter.prototype.popTempValue = function ()
	{
		tempValuesPtr--;
	};
	Parameter.prototype.get_exp = function (solindex)
	{
		this.solindex = solindex || 0;   // default SOL index to use
		var temp = this.pushTempValue();
		this.expression.get(temp);
		this.popTempValue();
		return temp.data;      			// return actual JS value, not expvalue
	};
	Parameter.prototype.get_exp_str = function (solindex)
	{
		this.solindex = solindex || 0;   // default SOL index to use
		var temp = this.pushTempValue();
		this.expression.get(temp);
		this.popTempValue();
		if (cr.is_string(temp.data))
			return temp.data;
		else
			return "";
	};
	Parameter.prototype.get_object = function ()
	{
		return this.object;
	};
	Parameter.prototype.get_combosel = function ()
	{
		return this.combosel;
	};
	Parameter.prototype.get_layer = function (solindex)
	{
		this.solindex = solindex || 0;   // default SOL index to use
		var temp = this.pushTempValue();
		this.expression.get(temp);
		this.popTempValue();
		if (temp.is_number())
			return this.runtime.getLayerByNumber(temp.data);
		else
			return this.runtime.getLayerByName(temp.data);
	}
	Parameter.prototype.get_layout = function ()
	{
		return this.layout;
	};
	Parameter.prototype.get_key = function ()
	{
		return this.key;
	};
	Parameter.prototype.get_instvar = function ()
	{
		return this.index;
	};
	Parameter.prototype.get_familyvar = function (solindex)
	{
		var familytype = this.owner.type;
		var realtype = null;
		var sol = familytype.getCurrentSol();
		var objs = sol.getObjects();
		if (objs.length)
			realtype = objs[solindex % objs.length].type;
		else
		{
;
			realtype = sol.else_instances[solindex % sol.else_instances.length].type;
		}
		return this.index + realtype.family_var_map[familytype.family_index];
	};
	Parameter.prototype.get_eventvar = function ()
	{
		return this.eventvar;
	};
	Parameter.prototype.get_audiofile = function ()
	{
		return this.fileinfo;
	};
	Parameter.prototype.get_variadic = function ()
	{
		var i, len;
		for (i = 0, len = this.subparams.length; i < len; i++)
		{
			this.variadicret[i] = this.subparams[i].get();
		}
		return this.variadicret;
	};
	cr.parameter = Parameter;
	function EventVariable(sheet, parent, m)
	{
		this.sheet = sheet;
		this.parent = parent;
		this.runtime = sheet.runtime;
		this.solModifiers = [];
		this.name = m[1];
		this.vartype = m[2];
		this.initial = m[3];
		this.is_static = !!m[4];
		this.is_constant = !!m[5];
		this.sid = m[6];
		this.runtime.varsBySid[this.sid.toString()] = this;
		this.data = this.initial;	// note: also stored in event stack frame for local nonstatic nonconst vars
		if (this.parent)			// local var
		{
			if (this.is_static || this.is_constant)
				this.localIndex = -1;
			else
				this.localIndex = this.runtime.stackLocalCount++;
		}
		else						// global var
		{
			this.localIndex = -1;
			this.runtime.all_global_vars.push(this);
		}
	};
	EventVariable.prototype.postInit = function ()
	{
		this.solModifiers = findMatchingSolModifier(this.solModifiers);
	};
	EventVariable.prototype.setValue = function (x)
	{
;
		var lvs = this.runtime.getCurrentLocalVarStack();
		if (!this.parent || this.is_static || !lvs)
			this.data = x;
		else	// local nonstatic variable: use event stack to keep value at this level of recursion
		{
			if (this.localIndex >= lvs.length)
				lvs.length = this.localIndex + 1;
			lvs[this.localIndex] = x;
		}
	};
	EventVariable.prototype.getValue = function ()
	{
		var lvs = this.runtime.getCurrentLocalVarStack();
		if (!this.parent || this.is_static || !lvs || this.is_constant)
			return this.data;
		else	// local nonstatic variable
		{
			if (this.localIndex >= lvs.length)
			{
;
				return this.initial;
			}
			if (typeof lvs[this.localIndex] === "undefined")
			{
;
				return this.initial;
			}
			return lvs[this.localIndex];
		}
	};
	EventVariable.prototype.run = function ()
	{
		if (this.parent && !this.is_static && !this.is_constant)
			this.setValue(this.initial);
	};
	cr.eventvariable = EventVariable;
	function EventInclude(sheet, parent, m)
	{
		this.sheet = sheet;
		this.parent = parent;
		this.runtime = sheet.runtime;
		this.solModifiers = [];
		this.include_sheet = null;		// determined in postInit
		this.include_sheet_name = m[1];
	};
	EventInclude.prototype.toString = function ()
	{
		return "include:" + this.include_sheet.toString();
	};
	EventInclude.prototype.postInit = function ()
	{
        this.include_sheet = this.runtime.eventsheets[this.include_sheet_name];
;
;
        this.sheet.includes.add(this);
		this.solModifiers = findMatchingSolModifier(this.solModifiers);
	};
	EventInclude.prototype.run = function ()
	{
		if (this.parent)
			this.runtime.pushCleanSol(this.runtime.types_by_index);
        if (!this.include_sheet.hasRun)
            this.include_sheet.run();
        if (this.parent)
            this.runtime.popSol(this.runtime.types_by_index);
	};
	EventInclude.prototype.isActive = function ()
	{
		var p = this.parent;
		while (p)
		{
			if (p.group)
			{
				if (!this.runtime.activeGroups[p.group_name.toLowerCase()])
					return false;
			}
			p = p.parent;
		}
		return true;
	};
	cr.eventinclude = EventInclude;
	function EventStackFrame()
	{
		this.temp_parents_arr = [];
		this.reset(null);
		cr.seal(this);
	};
	EventStackFrame.prototype.reset = function (cur_event)
	{
		this.current_event = cur_event;
		this.cndindex = 0;
		this.actindex = 0;
		this.temp_parents_arr.length = 0;
		this.last_event_true = false;
		this.else_branch_ran = false;
	};
	EventStackFrame.prototype.isModifierAfterCnds = function ()
	{
		if (this.current_event.solWriterAfterCnds)
			return true;
		if (this.cndindex < this.current_event.conditions.length - 1)
			return !!this.current_event.solModifiers.length;
		return false;
	};
	cr.eventStackFrame = EventStackFrame;
}());
(function()
{
	function ExpNode(owner_, m)
	{
		this.owner = owner_;
		this.runtime = owner_.runtime;
		this.type = m[0];
;
		this.get = [this.eval_int,
					this.eval_float,
					this.eval_string,
					this.eval_unaryminus,
					this.eval_add,
					this.eval_subtract,
					this.eval_multiply,
					this.eval_divide,
					this.eval_mod,
					this.eval_power,
					this.eval_and,
					this.eval_or,
					this.eval_equal,
					this.eval_notequal,
					this.eval_less,
					this.eval_lessequal,
					this.eval_greater,
					this.eval_greaterequal,
					this.eval_conditional,
					this.eval_system_exp,
					this.eval_object_behavior_exp,
					this.eval_instvar_exp,
					this.eval_object_behavior_exp,
					this.eval_eventvar_exp][this.type];
		var paramsModel = null;
		this.value = null;
		this.first = null;
		this.second = null;
		this.third = null;
		this.func = null;
		this.results = null;
		this.parameters = null;
		this.object_type = null;
		this.beh_index = -1;
		this.instance_expr = null;
		this.varindex = -1;
		this.behavior_type = null;
		this.varname = null;
		this.eventvar = null;
		this.return_string = false;
		switch (this.type) {
		case 0:		// int
		case 1:		// float
		case 2:		// string
			this.value = m[1];
			break;
		case 3:		// unaryminus
			this.first = new cr.expNode(owner_, m[1]);
			break;
		case 18:	// conditional
			this.first = new cr.expNode(owner_, m[1]);
			this.second = new cr.expNode(owner_, m[2]);
			this.third = new cr.expNode(owner_, m[3]);
			break;
		case 19:	// system_exp
			this.func = m[1];
;
			this.results = [];
			this.parameters = [];
			if (m.length === 3)
			{
				paramsModel = m[2];
				this.results.length = paramsModel.length + 1;	// must also fit 'ret'
			}
			else
				this.results.length = 1;      // to fit 'ret'
			break;
		case 20:	// object_exp
			this.object_type = this.runtime.types_by_index[m[1]];
;
			this.beh_index = -1;
			this.func = m[2];
			this.return_string = m[3];
			if (m[4])
				this.instance_expr = new cr.expNode(owner_, m[4]);
			else
				this.instance_expr = null;
			this.results = [];
			this.parameters = [];
			if (m.length === 6)
			{
				paramsModel = m[5];
				this.results.length = paramsModel.length + 1;
			}
			else
				this.results.length = 1;	// to fit 'ret'
			break;
		case 21:		// instvar_exp
			this.object_type = this.runtime.types_by_index[m[1]];
;
			this.return_string = m[2];
			if (m[3])
				this.instance_expr = new cr.expNode(owner_, m[3]);
			else
				this.instance_expr = null;
			this.varindex = m[4];
			break;
		case 22:		// behavior_exp
			this.object_type = this.runtime.types_by_index[m[1]];
;
			this.behavior_type = this.object_type.getBehaviorByName(m[2]);
;
			this.beh_index = this.object_type.getBehaviorIndexByName(m[2]);
			this.func = m[3];
			this.return_string = m[4];
			if (m[5])
				this.instance_expr = new cr.expNode(owner_, m[5]);
			else
				this.instance_expr = null;
			this.results = [];
			this.parameters = [];
			if (m.length === 7)
			{
				paramsModel = m[6];
				this.results.length = paramsModel.length + 1;
			}
			else
				this.results.length = 1;	// to fit 'ret'
			break;
		case 23:		// eventvar_exp
			this.varname = m[1];
			this.eventvar = null;	// assigned in postInit
			break;
		}
		if (this.type >= 4 && this.type <= 17)
		{
			this.first = new cr.expNode(owner_, m[1]);
			this.second = new cr.expNode(owner_, m[2]);
		}
		if (paramsModel)
		{
			var i, len;
			for (i = 0, len = paramsModel.length; i < len; i++)
				this.parameters.push(new cr.expNode(owner_, paramsModel[i]));
		}
		cr.seal(this);
	};
	ExpNode.prototype.postInit = function ()
	{
		if (this.type === 23)	// eventvar_exp
		{
			this.eventvar = this.owner.runtime.getEventVariableByName(this.varname, this.owner.block.parent);
;
		}
		if (this.first)
			this.first.postInit();
		if (this.second)
			this.second.postInit();
		if (this.third)
			this.third.postInit();
		if (this.instance_expr)
			this.instance_expr.postInit();
		if (this.parameters)
		{
			var i, len;
			for (i = 0, len = this.parameters.length; i < len; i++)
				this.parameters[i].postInit();
		}
	};
	ExpNode.prototype.eval_system_exp = function (ret)
	{
		this.results[0] = ret;
		var temp = this.owner.pushTempValue();
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
		{
			this.parameters[i].get(temp);
			this.results[i + 1] = temp.data;   // passing actual javascript value as argument instead of expvalue
		}
		this.owner.popTempValue();
		this.func.apply(this.runtime.system, this.results);
	};
	ExpNode.prototype.eval_object_behavior_exp = function (ret)
	{
		var sol = this.object_type.getCurrentSol();
		var instances = sol.getObjects();
		if (!instances.length)
		{
			if (sol.else_instances.length)
				instances = sol.else_instances;
			else
			{
				if (this.return_string)
					ret.set_string("");
				else
					ret.set_int(0);
				return;
			}
		}
		this.results[0] = ret;
		ret.object_class = this.object_type;		// so expression can access family type if need be
		var temp = this.owner.pushTempValue();
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++) {
			this.parameters[i].get(temp);
			this.results[i + 1] = temp.data;   // passing actual javascript value as argument instead of expvalue
		}
		var index = this.owner.solindex;
		if (this.instance_expr) {
			this.instance_expr.get(temp);
			if (temp.is_number()) {
				index = temp.data;
				instances = this.object_type.instances;    // pick from all instances, not SOL
			}
		}
		this.owner.popTempValue();
		index %= instances.length;      // wraparound
		if (index < 0)
			index += instances.length;
		var returned_val;
		var inst = instances[index];
		if (this.beh_index > -1)
		{
			var offset = 0;
			if (this.object_type.is_family)
			{
				offset = inst.type.family_beh_map[this.object_type.family_index];
			}
			returned_val = this.func.apply(inst.behavior_insts[this.beh_index + offset], this.results);
		}
		else
			returned_val = this.func.apply(inst, this.results);
;
	};
	ExpNode.prototype.eval_instvar_exp = function (ret)
	{
		var sol = this.object_type.getCurrentSol();
		var instances = sol.getObjects();
		if (!instances.length)
		{
			if (sol.else_instances.length)
				instances = sol.else_instances;
			else
			{
				if (this.return_string)
					ret.set_string("");
				else
					ret.set_int(0);
				return;
			}
		}
		var index = this.owner.solindex;
		if (this.instance_expr)
		{
			var temp = this.owner.pushTempValue();
			this.instance_expr.get(temp);
			if (temp.is_number())
			{
				index = temp.data;
				var type_instances = this.object_type.instances;
				index %= type_instances.length;     // wraparound
				if (index < 0)                      // offset
					index += type_instances.length;
				var to_ret = type_instances[index].instance_vars[this.varindex];
				if (cr.is_string(to_ret))
					ret.set_string(to_ret);
				else
					ret.set_float(to_ret);
				this.owner.popTempValue();
				return;         // done
			}
			this.owner.popTempValue();
		}
		index %= instances.length;      // wraparound
		if (index < 0)
			index += instances.length;
		var inst = instances[index];
		var offset = 0;
		if (this.object_type.is_family)
		{
			offset = inst.type.family_var_map[this.object_type.family_index];
		}
		var to_ret = inst.instance_vars[this.varindex + offset];
		if (cr.is_string(to_ret))
			ret.set_string(to_ret);
		else
			ret.set_float(to_ret);
	};
	ExpNode.prototype.eval_int = function (ret)
	{
		ret.type = cr.exptype.Integer;
		ret.data = this.value;
	};
	ExpNode.prototype.eval_float = function (ret)
	{
		ret.type = cr.exptype.Float;
		ret.data = this.value;
	};
	ExpNode.prototype.eval_string = function (ret)
	{
		ret.type = cr.exptype.String;
		ret.data = this.value;
	};
	ExpNode.prototype.eval_unaryminus = function (ret)
	{
		this.first.get(ret);                // retrieve operand
		if (ret.is_number())
			ret.data = -ret.data;
	};
	ExpNode.prototype.eval_add = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data += temp.data;          // both operands numbers: add
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_subtract = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data -= temp.data;          // both operands numbers: subtract
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_multiply = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data *= temp.data;          // both operands numbers: multiply
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_divide = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data /= temp.data;          // both operands numbers: divide
			ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_mod = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data %= temp.data;          // both operands numbers: modulo
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_power = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data = Math.pow(ret.data, temp.data);   // both operands numbers: raise to power
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_and = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number())
		{
			if (temp.is_string())
			{
				ret.set_string(ret.data.toString() + temp.data);
			}
			else
			{
				if (ret.data && temp.data)
					ret.set_int(1);
				else
					ret.set_int(0);
			}
		}
		else if (ret.is_string())
		{
			if (temp.is_string())
				ret.data += temp.data;
			else
			{
				ret.data += (Math.round(temp.data * 1e10) / 1e10).toString();
			}
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_or = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			if (ret.data || temp.data)
				ret.set_int(1);
			else
				ret.set_int(0);
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_conditional = function (ret)
	{
		this.first.get(ret);                // condition operand
		if (ret.data)                       // is true
			this.second.get(ret);           // evaluate second operand to ret
		else
			this.third.get(ret);            // evaluate third operand to ret
	};
	ExpNode.prototype.eval_equal = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data === temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_notequal = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data !== temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_less = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data < temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_lessequal = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data <= temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_greater = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data > temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_greaterequal = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data >= temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_eventvar_exp = function (ret)
	{
		var val = this.eventvar.getValue();
		if (cr.is_number(val))
			ret.set_float(val);
		else
			ret.set_string(val);
	};
	cr.expNode = ExpNode;
	function ExpValue(type, data)
	{
		this.type = type || cr.exptype.Integer;
		this.data = data || 0;
		this.object_class = null;
;
;
;
		if (this.type == cr.exptype.Integer)
			this.data = Math.floor(this.data);
		cr.seal(this);
	};
	ExpValue.prototype.is_int = function ()
	{
		return this.type === cr.exptype.Integer;
	};
	ExpValue.prototype.is_float = function ()
	{
		return this.type === cr.exptype.Float;
	};
	ExpValue.prototype.is_number = function ()
	{
		return this.type === cr.exptype.Integer || this.type === cr.exptype.Float;
	};
	ExpValue.prototype.is_string = function ()
	{
		return this.type === cr.exptype.String;
	};
	ExpValue.prototype.make_int = function ()
	{
		if (!this.is_int())
		{
			if (this.is_float())
				this.data = Math.floor(this.data);      // truncate float
			else if (this.is_string())
				this.data = parseInt(this.data, 10);
			this.type = cr.exptype.Integer;
		}
	};
	ExpValue.prototype.make_float = function ()
	{
		if (!this.is_float())
		{
			if (this.is_string())
				this.data = parseFloat(this.data);
			this.type = cr.exptype.Float;
		}
	};
	ExpValue.prototype.make_string = function ()
	{
		if (!this.is_string())
		{
			this.data = this.data.toString();
			this.type = cr.exptype.String;
		}
	};
	ExpValue.prototype.set_int = function (val)
	{
;
		this.type = cr.exptype.Integer;
		this.data = Math.floor(val);
	};
	ExpValue.prototype.set_float = function (val)
	{
;
		this.type = cr.exptype.Float;
		this.data = val;
	};
	ExpValue.prototype.set_string = function (val)
	{
;
		this.type = cr.exptype.String;
		this.data = val;
	};
	ExpValue.prototype.set_any = function (val)
	{
		if (cr.is_number(val))
		{
			this.type = cr.exptype.Float;
			this.data = val;
		}
		else if (cr.is_string(val))
		{
			this.type = cr.exptype.String;
			this.data = val.toString();
		}
		else
		{
			this.type = cr.exptype.Integer;
			this.data = 0;
		}
	};
	cr.expvalue = ExpValue;
	cr.exptype = {
		Integer: 0,     // emulated; no native integer support in javascript
		Float: 1,
		String: 2
	};
}());
;
cr.system_object = function (runtime)
{
    this.runtime = runtime;
	this.waits = [];
};
cr.system_object.prototype.saveToJSON = function ()
{
	var o = {};
	var i, len, j, lenj, p, w, t, sobj;
	o["waits"] = [];
	var owaits = o["waits"];
	var waitobj;
	for (i = 0, len = this.waits.length; i < len; i++)
	{
		w = this.waits[i];
		waitobj = {
			"t": w.time,
			"ev": w.ev.sid,
			"sm": [],
			"sols": {}
		};
		if (w.ev.actions[w.actindex])
			waitobj["act"] = w.ev.actions[w.actindex].sid;
		for (j = 0, lenj = w.solModifiers.length; j < lenj; j++)
			waitobj["sm"].push(w.solModifiers[j].sid);
		for (p in w.sols)
		{
			if (w.sols.hasOwnProperty(p))
			{
				t = this.runtime.types_by_index[parseInt(p, 10)];
;
				sobj = {
					"sa": w.sols[p].sa,
					"insts": []
				};
				for (j = 0, lenj = w.sols[p].insts.length; j < lenj; j++)
					sobj["insts"].push(w.sols[p].insts[j].uid);
				waitobj["sols"][t.sid.toString()] = sobj;
			}
		}
		owaits.push(waitobj);
	}
	return o;
};
cr.system_object.prototype.loadFromJSON = function (o)
{
	var owaits = o["waits"];
	var i, len, j, lenj, p, w, addWait, e, aindex, t, savedsol, nusol, inst;
	this.waits.length = 0;
	for (i = 0, len = owaits.length; i < len; i++)
	{
		w = owaits[i];
		e = this.runtime.blocksBySid[w["ev"].toString()];
		if (!e)
			continue;	// event must've gone missing
		aindex = -1;
		for (j = 0, lenj = e.actions.length; j < lenj; j++)
		{
			if (e.actions[j].sid === w["act"])
			{
				aindex = j;
				break;
			}
		}
		if (aindex === -1)
			continue;	// action must've gone missing
		addWait = {};
		addWait.sols = {};
		addWait.solModifiers = [];
		addWait.deleteme = false;
		addWait.time = w["t"];
		addWait.ev = e;
		addWait.actindex = aindex;
		for (j = 0, lenj = w["sm"].length; j < lenj; j++)
		{
			t = this.runtime.getObjectTypeBySid(w["sm"][j]);
			if (t)
				addWait.solModifiers.push(t);
		}
		for (p in w["sols"])
		{
			if (w["sols"].hasOwnProperty(p))
			{
				t = this.runtime.getObjectTypeBySid(parseInt(p, 10));
				if (!t)
					continue;		// type must've been deleted
				savedsol = w["sols"][p];
				nusol = {
					sa: savedsol["sa"],
					insts: []
				};
				for (j = 0, lenj = savedsol["insts"].length; j < lenj; j++)
				{
					inst = this.runtime.getObjectByUID(savedsol["insts"][j]);
					if (inst)
						nusol.insts.push(inst);
				}
				addWait.sols[t.index.toString()] = nusol;
			}
		}
		this.waits.push(addWait);
	}
};
(function ()
{
	var sysProto = cr.system_object.prototype;
	function SysCnds() {};
    SysCnds.prototype.EveryTick = function()
    {
        return true;
    };
    SysCnds.prototype.OnLayoutStart = function()
    {
        return true;
    };
    SysCnds.prototype.OnLayoutEnd = function()
    {
        return true;
    };
    SysCnds.prototype.Compare = function(x, cmp, y)
    {
        return cr.do_cmp(x, cmp, y);
    };
    SysCnds.prototype.CompareTime = function (cmp, t)
    {
        var elapsed = this.runtime.kahanTime.sum;
        if (cmp === 0)
        {
            var cnd = this.runtime.getCurrentCondition();
            if (!cnd.extra.CompareTime_executed)
            {
                if (elapsed >= t)
                {
                    cnd.extra.CompareTime_executed = true;
                    return true;
                }
            }
            return false;
        }
        return cr.do_cmp(elapsed, cmp, t);
    };
    SysCnds.prototype.LayerVisible = function (layer)
    {
        if (!layer)
            return false;
        else
            return layer.visible;
    };
	SysCnds.prototype.LayerCmpOpacity = function (layer, cmp, opacity_)
	{
		if (!layer)
			return false;
		return cr.do_cmp(layer.opacity * 100, cmp, opacity_);
	};
    SysCnds.prototype.Repeat = function (count)
    {
		var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack();
        var i;
		if (solModifierAfterCnds)
		{
			for (i = 0; i < count && !current_loop.stopped; i++)
			{
				this.runtime.pushCopySol(current_event.solModifiers);
				current_loop.index = i;
				current_event.retrigger();
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		else
		{
			for (i = 0; i < count && !current_loop.stopped; i++)
			{
				current_loop.index = i;
				current_event.retrigger();
			}
		}
        this.runtime.popLoopStack();
		return false;
    };
	SysCnds.prototype.While = function (count)
    {
		var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack();
        var i;
		if (solModifierAfterCnds)
		{
			for (i = 0; !current_loop.stopped; i++)
			{
				this.runtime.pushCopySol(current_event.solModifiers);
				current_loop.index = i;
				if (!current_event.retrigger())		// one of the other conditions returned false
					current_loop.stopped = true;	// break
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		else
		{
			for (i = 0; !current_loop.stopped; i++)
			{
				current_loop.index = i;
				if (!current_event.retrigger())
					current_loop.stopped = true;
			}
		}
        this.runtime.popLoopStack();
		return false;
    };
    SysCnds.prototype.For = function (name, start, end)
    {
        var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack(name);
        var i;
		if (end < start)
		{
			if (solModifierAfterCnds)
			{
				for (i = start; i >= end && !current_loop.stopped; --i)  // inclusive to end
				{
					this.runtime.pushCopySol(current_event.solModifiers);
					current_loop.index = i;
					current_event.retrigger();
					this.runtime.popSol(current_event.solModifiers);
				}
			}
			else
			{
				for (i = start; i >= end && !current_loop.stopped; --i)  // inclusive to end
				{
					current_loop.index = i;
					current_event.retrigger();
				}
			}
		}
		else
		{
			if (solModifierAfterCnds)
			{
				for (i = start; i <= end && !current_loop.stopped; ++i)  // inclusive to end
				{
					this.runtime.pushCopySol(current_event.solModifiers);
					current_loop.index = i;
					current_event.retrigger();
					this.runtime.popSol(current_event.solModifiers);
				}
			}
			else
			{
				for (i = start; i <= end && !current_loop.stopped; ++i)  // inclusive to end
				{
					current_loop.index = i;
					current_event.retrigger();
				}
			}
		}
        this.runtime.popLoopStack();
		return false;
    };
	var foreach_instancestack = [];
	var foreach_instanceptr = -1;
    SysCnds.prototype.ForEach = function (obj)
    {
        var sol = obj.getCurrentSol();
		foreach_instanceptr++;
		if (foreach_instancestack.length === foreach_instanceptr)
			foreach_instancestack.push([]);
		var instances = foreach_instancestack[foreach_instanceptr];
		cr.shallowAssignArray(instances, sol.getObjects());
        var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack();
        var i, len, j, lenj, inst, s, sol2;
		var is_contained = obj.is_contained;
		if (solModifierAfterCnds)
		{
			for (i = 0, len = instances.length; i < len && !current_loop.stopped; i++)
			{
				this.runtime.pushCopySol(current_event.solModifiers);
				inst = instances[i];
				sol = obj.getCurrentSol();
				sol.select_all = false;
				sol.instances.length = 1;
				sol.instances[0] = inst;
				if (is_contained)
				{
					for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
					{
						s = inst.siblings[j];
						sol2 = s.type.getCurrentSol();
						sol2.select_all = false;
						sol2.instances.length = 1;
						sol2.instances[0] = s;
					}
				}
				current_loop.index = i;
				current_event.retrigger();
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		else
		{
			sol.select_all = false;
			sol.instances.length = 1;
			for (i = 0, len = instances.length; i < len && !current_loop.stopped; i++)
			{
				inst = instances[i];
				sol.instances[0] = inst;
				if (is_contained)
				{
					for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
					{
						s = inst.siblings[j];
						sol2 = s.type.getCurrentSol();
						sol2.select_all = false;
						sol2.instances.length = 1;
						sol2.instances[0] = s;
					}
				}
				current_loop.index = i;
				current_event.retrigger();
			}
		}
		instances.length = 0;
        this.runtime.popLoopStack();
		foreach_instanceptr--;
		return false;
    };
	function foreach_sortinstances(a, b)
	{
		var va = a.extra.c2_foreachordered_val;
		var vb = b.extra.c2_foreachordered_val;
		if (cr.is_number(va) && cr.is_number(vb))
			return va - vb;
		else
		{
			va = "" + va;
			vb = "" + vb;
			if (va < vb)
				return -1;
			else if (va > vb)
				return 1;
			else
				return 0;
		}
	};
	SysCnds.prototype.ForEachOrdered = function (obj, exp, order)
    {
        var sol = obj.getCurrentSol();
		foreach_instanceptr++;
		if (foreach_instancestack.length === foreach_instanceptr)
			foreach_instancestack.push([]);
		var instances = foreach_instancestack[foreach_instanceptr];
		cr.shallowAssignArray(instances, sol.getObjects());
        var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var current_condition = this.runtime.getCurrentCondition();
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack();
		var i, len, j, lenj, inst, s, sol2;
		for (i = 0, len = instances.length; i < len; i++)
		{
			instances[i].extra.c2_foreachordered_val = current_condition.parameters[1].get(i);
		}
		instances.sort(foreach_sortinstances);
		if (order === 1)
			instances.reverse();
		var is_contained = obj.is_contained;
		if (solModifierAfterCnds)
		{
			for (i = 0, len = instances.length; i < len && !current_loop.stopped; i++)
			{
				this.runtime.pushCopySol(current_event.solModifiers);
				inst = instances[i];
				sol = obj.getCurrentSol();
				sol.select_all = false;
				sol.instances.length = 1;
				sol.instances[0] = inst;
				if (is_contained)
				{
					for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
					{
						s = inst.siblings[j];
						sol2 = s.type.getCurrentSol();
						sol2.select_all = false;
						sol2.instances.length = 1;
						sol2.instances[0] = s;
					}
				}
				current_loop.index = i;
				current_event.retrigger();
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		else
		{
			sol.select_all = false;
			sol.instances.length = 1;
			for (i = 0, len = instances.length; i < len && !current_loop.stopped; i++)
			{
				inst = instances[i];
				sol.instances[0] = inst;
				if (is_contained)
				{
					for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
					{
						s = inst.siblings[j];
						sol2 = s.type.getCurrentSol();
						sol2.select_all = false;
						sol2.instances.length = 1;
						sol2.instances[0] = s;
					}
				}
				current_loop.index = i;
				current_event.retrigger();
			}
		}
		instances.length = 0;
        this.runtime.popLoopStack();
		foreach_instanceptr--;
		return false;
    };
	SysCnds.prototype.PickByComparison = function (obj_, exp_, cmp_, val_)
	{
		var i, len, k, inst;
		if (!obj_)
			return;
		foreach_instanceptr++;
		if (foreach_instancestack.length === foreach_instanceptr)
			foreach_instancestack.push([]);
		var tmp_instances = foreach_instancestack[foreach_instanceptr];
		var sol = obj_.getCurrentSol();
		cr.shallowAssignArray(tmp_instances, sol.getObjects());
		if (sol.select_all)
			sol.else_instances.length = 0;
		var current_condition = this.runtime.getCurrentCondition();
		for (i = 0, k = 0, len = tmp_instances.length; i < len; i++)
		{
			inst = tmp_instances[i];
			tmp_instances[k] = inst;
			exp_ = current_condition.parameters[1].get(i);
			val_ = current_condition.parameters[3].get(i);
			if (cr.do_cmp(exp_, cmp_, val_))
			{
				k++;
			}
			else
			{
				sol.else_instances.push(inst);
			}
		}
		tmp_instances.length = k;
		sol.select_all = false;
		cr.shallowAssignArray(sol.instances, tmp_instances);
		tmp_instances.length = 0;
		foreach_instanceptr--;
		return !!sol.instances.length;
	};
	SysCnds.prototype.PickByEvaluate = function (obj_, exp_)
	{
		var i, len, k, inst;
		if (!obj_)
			return;
		foreach_instanceptr++;
		if (foreach_instancestack.length === foreach_instanceptr)
			foreach_instancestack.push([]);
		var tmp_instances = foreach_instancestack[foreach_instanceptr];
		var sol = obj_.getCurrentSol();
		cr.shallowAssignArray(tmp_instances, sol.getObjects());
		if (sol.select_all)
			sol.else_instances.length = 0;
		var current_condition = this.runtime.getCurrentCondition();
		for (i = 0, k = 0, len = tmp_instances.length; i < len; i++)
		{
			inst = tmp_instances[i];
			tmp_instances[k] = inst;
			exp_ = current_condition.parameters[1].get(i);
			if (exp_)
			{
				k++;
			}
			else
			{
				sol.else_instances.push(inst);
			}
		}
		tmp_instances.length = k;
		sol.select_all = false;
		cr.shallowAssignArray(sol.instances, tmp_instances);
		tmp_instances.length = 0;
		foreach_instanceptr--;
		return !!sol.instances.length;
	};
    SysCnds.prototype.TriggerOnce = function ()
    {
        var cndextra = this.runtime.getCurrentCondition().extra;
		if (typeof cndextra.TriggerOnce_lastTick === "undefined")
			cndextra.TriggerOnce_lastTick = -1;
        var last_tick = cndextra.TriggerOnce_lastTick;
        var cur_tick = this.runtime.tickcount;
        cndextra.TriggerOnce_lastTick = cur_tick;
        return this.runtime.layout_first_tick || last_tick !== cur_tick - 1;
    };
    SysCnds.prototype.Every = function (seconds)
    {
        var cnd = this.runtime.getCurrentCondition();
        var last_time = cnd.extra.Every_lastTime || 0;
        var cur_time = this.runtime.kahanTime.sum;
		if (typeof cnd.extra.Every_seconds === "undefined")
			cnd.extra.Every_seconds = seconds;
		var this_seconds = cnd.extra.Every_seconds;
        if (cur_time >= last_time + this_seconds)
        {
            cnd.extra.Every_lastTime = last_time + this_seconds;
			if (cur_time >= cnd.extra.Every_lastTime + this_seconds)
				cnd.extra.Every_lastTime = cur_time;
			cnd.extra.Every_seconds = seconds;
            return true;
        }
        else
            return false;
    };
    SysCnds.prototype.PickNth = function (obj, index)
    {
        if (!obj)
            return false;
        var sol = obj.getCurrentSol();
        var instances = sol.getObjects();
		index = cr.floor(index);
        if (index < 0 || index >= instances.length)
            return false;
		var inst = instances[index];
        sol.pick_one(inst);
		obj.applySolToContainer();
        return true;
    };
	SysCnds.prototype.PickRandom = function (obj)
    {
        if (!obj)
            return false;
        var sol = obj.getCurrentSol();
        var instances = sol.getObjects();
		var index = cr.floor(Math.random() * instances.length);
        if (index >= instances.length)
            return false;
		var inst = instances[index];
        sol.pick_one(inst);
		obj.applySolToContainer();
        return true;
    };
	SysCnds.prototype.CompareVar = function (v, cmp, val)
    {
        return cr.do_cmp(v.getValue(), cmp, val);
    };
    SysCnds.prototype.IsGroupActive = function (group)
    {
        return this.runtime.activeGroups[(/*this.runtime.getCurrentCondition().sheet.name + "|" + */group).toLowerCase()];
    };
	SysCnds.prototype.IsPreview = function ()
	{
		return typeof cr_is_preview !== "undefined";
	};
	SysCnds.prototype.PickAll = function (obj)
    {
        if (!obj)
            return false;
		if (!obj.instances.length)
			return false;
        var sol = obj.getCurrentSol();
        sol.select_all = true;
		obj.applySolToContainer();
        return true;
    };
	SysCnds.prototype.IsMobile = function ()
	{
		return this.runtime.isMobile;
	};
	SysCnds.prototype.CompareBetween = function (x, a, b)
	{
		return x >= a && x <= b;
	};
	SysCnds.prototype.Else = function ()
	{
		var current_frame = this.runtime.getCurrentEventStack();
		if (current_frame.else_branch_ran)
			return false;		// another event in this else-if chain has run
		else
			return !current_frame.last_event_true;
		/*
		var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var prev_event = current_event.prev_block;
		if (!prev_event)
			return false;
		if (prev_event.is_logical)
			return !this.runtime.last_event_true;
		var i, len, j, lenj, s, sol, temp, inst, any_picked = false;
		for (i = 0, len = prev_event.cndReferences.length; i < len; i++)
		{
			s = prev_event.cndReferences[i];
			sol = s.getCurrentSol();
			if (sol.select_all || sol.instances.length === s.instances.length)
			{
				sol.select_all = false;
				sol.instances.length = 0;
			}
			else
			{
				if (sol.instances.length === 1 && sol.else_instances.length === 0 && s.instances.length >= 2)
				{
					inst = sol.instances[0];
					sol.instances.length = 0;
					for (j = 0, lenj = s.instances.length; j < lenj; j++)
					{
						if (s.instances[j] != inst)
							sol.instances.push(s.instances[j]);
					}
					any_picked = true;
				}
				else
				{
					temp = sol.instances;
					sol.instances = sol.else_instances;
					sol.else_instances = temp;
					any_picked = true;
				}
			}
		}
		return any_picked;
		*/
	};
	SysCnds.prototype.OnLoadFinished = function ()
	{
		return true;
	};
	SysCnds.prototype.OnCanvasSnapshot = function ()
	{
		return true;
	};
	SysCnds.prototype.EffectsSupported = function ()
	{
		return !!this.runtime.glwrap;
	};
	SysCnds.prototype.OnSaveComplete = function ()
	{
		return true;
	};
	SysCnds.prototype.OnLoadComplete = function ()
	{
		return true;
	};
	SysCnds.prototype.OnLoadFailed = function ()
	{
		return true;
	};
	SysCnds.prototype.ObjectUIDExists = function (u)
	{
		return !!this.runtime.getObjectByUID(u);
	};
	SysCnds.prototype.IsOnPlatform = function (p)
	{
		var rt = this.runtime;
		switch (p) {
		case 0:		// HTML5 website
			return !rt.isDomFree && !rt.isNodeWebkit && !rt.isPhoneGap && !rt.isWindows8App && !rt.isWindowsPhone8 && !rt.isBlackberry10;
		case 1:		// iOS
			return rt.isiOS;
		case 2:		// Android
			return rt.isAndroid;
		case 3:		// Windows 8
			return rt.isWindows8App;
		case 4:		// Windows Phone 8
			return rt.isWindowsPhone8;
		case 5:		// Blackberry 10
			return rt.isBlackberry10;
		case 6:		// Tizen
			return rt.isTizen;
		case 7:		// node-webkit
			return rt.isNodeWebkit;
		case 8:		// CocoonJS
			return rt.isCocoonJs;
		case 9:		// PhoneGap
			return rt.isPhoneGap;
		case 10:	// Scirra Arcade
			return rt.isArcade;
		case 11:	// node-webkit
			return rt.isNodeWebkit;
		default:	// should not be possible
			return false;
		}
	};
	var cacheRegex = null;
	var lastRegex = "";
	var lastFlags = "";
	function getRegex(regex_, flags_)
	{
		if (!cacheRegex || regex_ !== lastRegex || flags_ !== lastFlags)
		{
			cacheRegex = new RegExp(regex_, flags_);
			lastRegex = regex_;
			lastFlags = flags_;
		}
		cacheRegex.lastIndex = 0;		// reset
		return cacheRegex;
	};
	SysCnds.prototype.RegexTest = function (str_, regex_, flags_)
	{
		var regex = getRegex(regex_, flags_);
		return regex.test(str_);
	};
	var tmp_arr = [];
	SysCnds.prototype.PickOverlappingPoint = function (obj_, x_, y_)
	{
		if (!obj_)
            return false;
        var sol = obj_.getCurrentSol();
        var instances = sol.getObjects();
		cr.shallowAssignArray(tmp_arr, instances);
		var cnd = this.runtime.getCurrentCondition();
		var i, len, inst, pick;
		if (sol.select_all)
			sol.else_instances.length = 0;
		sol.select_all = false;
		sol.instances.length = 0;
		for (i = 0, len = tmp_arr.length; i < len; ++i)
		{
			inst = tmp_arr[i];
			pick = cr.xor(inst.contains_pt(x_, y_), cnd.inverted);
			if (pick)
				sol.instances.push(inst);
			else
				sol.else_instances.push(inst);
		}
		obj_.applySolToContainer();
		return cr.xor(!!sol.instances.length, cnd.inverted);
	};
	sysProto.cnds = new SysCnds();
    function SysActs() {};
    SysActs.prototype.GoToLayout = function(to)
    {
		if (this.runtime.isloading)
			return;		// cannot change layout while loading on loader layout
		if (this.runtime.changelayout)
			return;		// already changing to a different layout
;
        this.runtime.changelayout = to;
    };
    SysActs.prototype.CreateObject = function (obj, layer, x, y)
    {
        if (!layer || !obj)
            return;
        var inst = this.runtime.createInstance(obj, layer, x, y);
		if (!inst)
			return;
		this.runtime.isInOnDestroy++;
		var i, len, s;
		this.runtime.trigger(Object.getPrototypeOf(obj.plugin).cnds.OnCreated, inst);
		if (inst.is_contained)
		{
			for (i = 0, len = inst.siblings.length; i < len; i++)
			{
				s = inst.siblings[i];
				this.runtime.trigger(Object.getPrototypeOf(s.type.plugin).cnds.OnCreated, s);
			}
		}
		this.runtime.isInOnDestroy--;
        var sol = obj.getCurrentSol();
        sol.select_all = false;
		sol.instances.length = 1;
		sol.instances[0] = inst;
		if (inst.is_contained)
		{
			for (i = 0, len = inst.siblings.length; i < len; i++)
			{
				s = inst.siblings[i];
				sol = s.type.getCurrentSol();
				sol.select_all = false;
				sol.instances.length = 1;
				sol.instances[0] = s;
			}
		}
    };
    SysActs.prototype.SetLayerVisible = function (layer, visible_)
    {
        if (!layer)
            return;
		if (layer.visible !== visible_)
		{
			layer.visible = visible_;
			this.runtime.redraw = true;
		}
    };
	SysActs.prototype.SetLayerOpacity = function (layer, opacity_)
	{
		if (!layer)
			return;
		opacity_ = cr.clamp(opacity_ / 100, 0, 1);
		if (layer.opacity !== opacity_)
		{
			layer.opacity = opacity_;
			this.runtime.redraw = true;
		}
	};
	SysActs.prototype.SetLayerScaleRate = function (layer, sr)
	{
		if (!layer)
			return;
		if (layer.zoomRate !== sr)
		{
			layer.zoomRate = sr;
			this.runtime.redraw = true;
		}
	};
	SysActs.prototype.SetLayoutScale = function (s)
	{
		if (!this.runtime.running_layout)
			return;
		if (this.runtime.running_layout.scale !== s)
		{
			this.runtime.running_layout.scale = s;
			this.runtime.running_layout.boundScrolling();
			this.runtime.redraw = true;
		}
	};
    SysActs.prototype.ScrollX = function(x)
    {
        this.runtime.running_layout.scrollToX(x);
    };
    SysActs.prototype.ScrollY = function(y)
    {
        this.runtime.running_layout.scrollToY(y);
    };
    SysActs.prototype.Scroll = function(x, y)
    {
        this.runtime.running_layout.scrollToX(x);
        this.runtime.running_layout.scrollToY(y);
    };
    SysActs.prototype.ScrollToObject = function(obj)
    {
        var inst = obj.getFirstPicked();
        if (inst)
        {
            this.runtime.running_layout.scrollToX(inst.x);
            this.runtime.running_layout.scrollToY(inst.y);
        }
    };
	SysActs.prototype.SetVar = function(v, x)
	{
;
		if (v.vartype === 0)
		{
			if (cr.is_number(x))
				v.setValue(x);
			else
				v.setValue(parseFloat(x));
		}
		else if (v.vartype === 1)
			v.setValue(x.toString());
	};
	SysActs.prototype.AddVar = function(v, x)
	{
;
		if (v.vartype === 0)
		{
			if (cr.is_number(x))
				v.setValue(v.getValue() + x);
			else
				v.setValue(v.getValue() + parseFloat(x));
		}
		else if (v.vartype === 1)
			v.setValue(v.getValue() + x.toString());
	};
	SysActs.prototype.SubVar = function(v, x)
	{
;
		if (v.vartype === 0)
		{
			if (cr.is_number(x))
				v.setValue(v.getValue() - x);
			else
				v.setValue(v.getValue() - parseFloat(x));
		}
	};
    SysActs.prototype.SetGroupActive = function (group, active)
    {
		var activeGroups = this.runtime.activeGroups;
		var groupkey = (/*this.runtime.getCurrentAction().sheet.name + "|" + */group).toLowerCase();
		switch (active) {
		case 0:
			activeGroups[groupkey] = false;
			break;
		case 1:
			activeGroups[groupkey] = true;
			break;
		case 2:
			activeGroups[groupkey] = !activeGroups[groupkey];
			break;
		}
    };
    SysActs.prototype.SetTimescale = function (ts_)
    {
        var ts = ts_;
        if (ts < 0)
            ts = 0;
        this.runtime.timescale = ts;
    };
    SysActs.prototype.SetObjectTimescale = function (obj, ts_)
    {
        var ts = ts_;
        if (ts < 0)
            ts = 0;
        if (!obj)
            return;
        var sol = obj.getCurrentSol();
        var instances = sol.getObjects();
        var i, len;
        for (i = 0, len = instances.length; i < len; i++)
        {
            instances[i].my_timescale = ts;
        }
    };
    SysActs.prototype.RestoreObjectTimescale = function (obj)
    {
        if (!obj)
            return false;
        var sol = obj.getCurrentSol();
        var instances = sol.getObjects();
        var i, len;
        for (i = 0, len = instances.length; i < len; i++)
        {
            instances[i].my_timescale = -1.0;
        }
    };
	var waitobjrecycle = [];
	function allocWaitObject()
	{
		var w;
		if (waitobjrecycle.length)
			w = waitobjrecycle.pop();
		else
		{
			w = {};
			w.sols = {};
			w.solModifiers = [];
		}
		w.deleteme = false;
		return w;
	};
	function freeWaitObject(w)
	{
		cr.wipe(w.sols);
		w.solModifiers.length = 0;
		waitobjrecycle.push(w);
	};
	var solstateobjects = [];
	function allocSolStateObject()
	{
		var s;
		if (solstateobjects.length)
			s = solstateobjects.pop();
		else
		{
			s = {};
			s.insts = [];
		}
		s.sa = false;
		return s;
	};
	function freeSolStateObject(s)
	{
		s.insts.length = 0;
		solstateobjects.push(s);
	};
	SysActs.prototype.Wait = function (seconds)
	{
		if (seconds < 0)
			return;
		var i, len, s, t, ss;
		var evinfo = this.runtime.getCurrentEventStack();
		var waitobj = allocWaitObject();
		waitobj.time = this.runtime.kahanTime.sum + seconds;
		waitobj.ev = evinfo.current_event;
		waitobj.actindex = evinfo.actindex + 1;	// pointing at next action
		for (i = 0, len = this.runtime.types_by_index.length; i < len; i++)
		{
			t = this.runtime.types_by_index[i];
			s = t.getCurrentSol();
			if (s.select_all && evinfo.current_event.solModifiers.indexOf(t) === -1)
				continue;
			waitobj.solModifiers.push(t);
			ss = allocSolStateObject();
			ss.sa = s.select_all;
			cr.shallowAssignArray(ss.insts, s.instances);
			waitobj.sols[i.toString()] = ss;
		}
		this.waits.push(waitobj);
		return true;
	};
	SysActs.prototype.SetLayerScale = function (layer, scale)
    {
        if (!layer)
            return;
		if (layer.scale === scale)
			return;
        layer.scale = scale;
        this.runtime.redraw = true;
    };
	SysActs.prototype.ResetGlobals = function ()
	{
		var i, len, g;
		for (i = 0, len = this.runtime.all_global_vars.length; i < len; i++)
		{
			g = this.runtime.all_global_vars[i];
			g.data = g.initial;
		}
	};
	SysActs.prototype.SetLayoutAngle = function (a)
	{
		a = cr.to_radians(a);
		a = cr.clamp_angle(a);
		if (this.runtime.running_layout)
		{
			if (this.runtime.running_layout.angle !== a)
			{
				this.runtime.running_layout.angle = a;
				this.runtime.redraw = true;
			}
		}
	};
	SysActs.prototype.SetLayerAngle = function (layer, a)
    {
        if (!layer)
            return;
		a = cr.to_radians(a);
		a = cr.clamp_angle(a);
		if (layer.angle === a)
			return;
        layer.angle = a;
        this.runtime.redraw = true;
    };
	SysActs.prototype.SetLayerParallax = function (layer, px, py)
    {
        if (!layer)
            return;
		if (layer.parallaxX === px / 100 && layer.parallaxY === py / 100)
			return;
        layer.parallaxX = px / 100;
		layer.parallaxY = py / 100;
        this.runtime.redraw = true;
    };
	SysActs.prototype.SetLayerBackground = function (layer, c)
    {
        if (!layer)
            return;
		var r = cr.GetRValue(c);
		var g = cr.GetGValue(c);
		var b = cr.GetBValue(c);
		if (layer.background_color[0] === r && layer.background_color[1] === g && layer.background_color[2] === b)
			return;
        layer.background_color[0] = r;
		layer.background_color[1] = g;
		layer.background_color[2] = b;
        this.runtime.redraw = true;
    };
	SysActs.prototype.SetLayerTransparent = function (layer, t)
    {
        if (!layer)
            return;
		if (!!t === !!layer.transparent)
			return;
		layer.transparent = !!t;
        this.runtime.redraw = true;
    };
	SysActs.prototype.StopLoop = function ()
	{
		if (this.runtime.loop_stack_index < 0)
			return;		// no loop currently running
		this.runtime.getCurrentLoop().stopped = true;
	};
	SysActs.prototype.GoToLayoutByName = function (layoutname)
	{
		if (this.runtime.isloading)
			return;		// cannot change layout while loading on loader layout
		if (this.runtime.changelayout)
			return;		// already changing to different layout
;
		var l;
		for (l in this.runtime.layouts)
		{
			if (this.runtime.layouts.hasOwnProperty(l) && l.toLowerCase() === layoutname.toLowerCase())
			{
				this.runtime.changelayout = this.runtime.layouts[l];
				return;
			}
		}
	};
	SysActs.prototype.RestartLayout = function (layoutname)
	{
		if (this.runtime.isloading)
			return;		// cannot restart loader layouts
		if (this.runtime.changelayout)
			return;		// already changing to a different layout
;
		if (!this.runtime.running_layout)
			return;
		this.runtime.changelayout = this.runtime.running_layout;
		var i, len, g;
		for (i = 0, len = this.runtime.allGroups.length; i < len; i++)
		{
			g = this.runtime.allGroups[i];
			this.runtime.activeGroups[g.group_name.toLowerCase()] = g.initially_activated;
		}
	};
	SysActs.prototype.SnapshotCanvas = function (format_, quality_)
	{
		this.runtime.snapshotCanvas = [format_ === 0 ? "image/png" : "image/jpeg", quality_ / 100];
		this.runtime.redraw = true;		// force redraw so snapshot is always taken
	};
	SysActs.prototype.SetCanvasSize = function (w, h)
	{
		if (w <= 0 || h <= 0)
			return;
		this.runtime["setSize"](w, h);
	};
	SysActs.prototype.SetLayoutEffectEnabled = function (enable_, effectname_)
	{
		if (!this.runtime.running_layout || !this.runtime.glwrap)
			return;
		var et = this.runtime.running_layout.getEffectByName(effectname_);
		if (!et)
			return;		// effect name not found
		var enable = (enable_ === 1);
		if (et.active == enable)
			return;		// no change
		et.active = enable;
		this.runtime.running_layout.updateActiveEffects();
		this.runtime.redraw = true;
	};
	SysActs.prototype.SetLayerEffectEnabled = function (layer, enable_, effectname_)
	{
		if (!layer || !this.runtime.glwrap)
			return;
		var et = layer.getEffectByName(effectname_);
		if (!et)
			return;		// effect name not found
		var enable = (enable_ === 1);
		if (et.active == enable)
			return;		// no change
		et.active = enable;
		layer.updateActiveEffects();
		this.runtime.redraw = true;
	};
	SysActs.prototype.SetLayoutEffectParam = function (effectname_, index_, value_)
	{
		if (!this.runtime.running_layout || !this.runtime.glwrap)
			return;
		var et = this.runtime.running_layout.getEffectByName(effectname_);
		if (!et)
			return;		// effect name not found
		var params = this.runtime.running_layout.effect_params[et.index];
		index_ = Math.floor(index_);
		if (index_ < 0 || index_ >= params.length)
			return;		// effect index out of bounds
		if (this.runtime.glwrap.getProgramParameterType(et.shaderindex, index_) === 1)
			value_ /= 100.0;
		if (params[index_] === value_)
			return;		// no change
		params[index_] = value_;
		if (et.active)
			this.runtime.redraw = true;
	};
	SysActs.prototype.SetLayerEffectParam = function (layer, effectname_, index_, value_)
	{
		if (!layer || !this.runtime.glwrap)
			return;
		var et = layer.getEffectByName(effectname_);
		if (!et)
			return;		// effect name not found
		var params = layer.effect_params[et.index];
		index_ = Math.floor(index_);
		if (index_ < 0 || index_ >= params.length)
			return;		// effect index out of bounds
		if (this.runtime.glwrap.getProgramParameterType(et.shaderindex, index_) === 1)
			value_ /= 100.0;
		if (params[index_] === value_)
			return;		// no change
		params[index_] = value_;
		if (et.active)
			this.runtime.redraw = true;
	};
	SysActs.prototype.SaveState = function (slot_)
	{
		this.runtime.saveToSlot = slot_;
	};
	SysActs.prototype.LoadState = function (slot_)
	{
		this.runtime.loadFromSlot = slot_;
	};
	SysActs.prototype.LoadStateJSON = function (jsonstr_)
	{
		this.runtime.loadFromJson = jsonstr_;
	};
	sysProto.acts = new SysActs();
    function SysExps() {};
    SysExps.prototype["int"] = function(ret, x)
    {
        if (cr.is_string(x))
        {
            ret.set_int(parseInt(x, 10));
            if (isNaN(ret.data))
                ret.data = 0;
        }
        else
            ret.set_int(x);
    };
    SysExps.prototype["float"] = function(ret, x)
    {
        if (cr.is_string(x))
        {
            ret.set_float(parseFloat(x));
            if (isNaN(ret.data))
                ret.data = 0;
        }
        else
            ret.set_float(x);
    };
    SysExps.prototype.str = function(ret, x)
    {
        if (cr.is_string(x))
            ret.set_string(x);
        else
            ret.set_string(x.toString());
    };
    SysExps.prototype.len = function(ret, x)
    {
        ret.set_int(x.length || 0);
    };
    SysExps.prototype.random = function (ret, a, b)
    {
        if (b === undefined)
        {
            ret.set_float(Math.random() * a);
        }
        else
        {
            ret.set_float(Math.random() * (b - a) + a);
        }
    };
    SysExps.prototype.sqrt = function(ret, x)
    {
        ret.set_float(Math.sqrt(x));
    };
    SysExps.prototype.abs = function(ret, x)
    {
        ret.set_float(Math.abs(x));
    };
    SysExps.prototype.round = function(ret, x)
    {
        ret.set_int(Math.round(x));
    };
    SysExps.prototype.floor = function(ret, x)
    {
        ret.set_int(Math.floor(x));
    };
    SysExps.prototype.ceil = function(ret, x)
    {
        ret.set_int(Math.ceil(x));
    };
    SysExps.prototype.sin = function(ret, x)
    {
        ret.set_float(Math.sin(cr.to_radians(x)));
    };
    SysExps.prototype.cos = function(ret, x)
    {
        ret.set_float(Math.cos(cr.to_radians(x)));
    };
    SysExps.prototype.tan = function(ret, x)
    {
        ret.set_float(Math.tan(cr.to_radians(x)));
    };
    SysExps.prototype.asin = function(ret, x)
    {
        ret.set_float(cr.to_degrees(Math.asin(x)));
    };
    SysExps.prototype.acos = function(ret, x)
    {
        ret.set_float(cr.to_degrees(Math.acos(x)));
    };
    SysExps.prototype.atan = function(ret, x)
    {
        ret.set_float(cr.to_degrees(Math.atan(x)));
    };
    SysExps.prototype.exp = function(ret, x)
    {
        ret.set_float(Math.exp(x));
    };
    SysExps.prototype.ln = function(ret, x)
    {
        ret.set_float(Math.log(x));
    };
    SysExps.prototype.log10 = function(ret, x)
    {
        ret.set_float(Math.log(x) / Math.LN10);
    };
    SysExps.prototype.max = function(ret)
    {
		var max_ = arguments[1];
		var i, len;
		for (i = 2, len = arguments.length; i < len; i++)
		{
			if (max_ < arguments[i])
				max_ = arguments[i];
		}
		ret.set_float(max_);
    };
    SysExps.prototype.min = function(ret)
    {
        var min_ = arguments[1];
		var i, len;
		for (i = 2, len = arguments.length; i < len; i++)
		{
			if (min_ > arguments[i])
				min_ = arguments[i];
		}
		ret.set_float(min_);
    };
    SysExps.prototype.dt = function(ret)
    {
        ret.set_float(this.runtime.dt);
    };
    SysExps.prototype.timescale = function(ret)
    {
        ret.set_float(this.runtime.timescale);
    };
    SysExps.prototype.wallclocktime = function(ret)
    {
        ret.set_float((Date.now() - this.runtime.start_time) / 1000.0);
    };
    SysExps.prototype.time = function(ret)
    {
        ret.set_float(this.runtime.kahanTime.sum);
    };
    SysExps.prototype.tickcount = function(ret)
    {
        ret.set_int(this.runtime.tickcount);
    };
    SysExps.prototype.objectcount = function(ret)
    {
        ret.set_int(this.runtime.objectcount);
    };
    SysExps.prototype.fps = function(ret)
    {
        ret.set_int(this.runtime.fps);
    };
    SysExps.prototype.loopindex = function(ret, name_)
    {
		var loop, i, len;
        if (!this.runtime.loop_stack.length)
        {
            ret.set_int(0);
            return;
        }
        if (name_)
        {
            for (i = 0, len = this.runtime.loop_stack.length; i < len; i++)
            {
                loop = this.runtime.loop_stack[i];
                if (loop.name === name_)
                {
                    ret.set_int(loop.index);
                    return;
                }
            }
            ret.set_int(0);
        }
        else
        {
			loop = this.runtime.getCurrentLoop();
			ret.set_int(loop ? loop.index : -1);
        }
    };
    SysExps.prototype.distance = function(ret, x1, y1, x2, y2)
    {
        ret.set_float(cr.distanceTo(x1, y1, x2, y2));
    };
    SysExps.prototype.angle = function(ret, x1, y1, x2, y2)
    {
        ret.set_float(cr.to_degrees(cr.angleTo(x1, y1, x2, y2)));
    };
    SysExps.prototype.scrollx = function(ret)
    {
        ret.set_float(this.runtime.running_layout.scrollX);
    };
    SysExps.prototype.scrolly = function(ret)
    {
        ret.set_float(this.runtime.running_layout.scrollY);
    };
    SysExps.prototype.newline = function(ret)
    {
        ret.set_string("\n");
    };
    SysExps.prototype.lerp = function(ret, a, b, x)
    {
        ret.set_float(cr.lerp(a, b, x));
    };
    SysExps.prototype.windowwidth = function(ret)
    {
        ret.set_int(this.runtime.width);
    };
    SysExps.prototype.windowheight = function(ret)
    {
        ret.set_int(this.runtime.height);
    };
	SysExps.prototype.uppercase = function(ret, str)
	{
		ret.set_string(cr.is_string(str) ? str.toUpperCase() : "");
	};
	SysExps.prototype.lowercase = function(ret, str)
	{
		ret.set_string(cr.is_string(str) ? str.toLowerCase() : "");
	};
	SysExps.prototype.clamp = function(ret, x, l, u)
	{
		if (x < l)
			ret.set_float(l);
		else if (x > u)
			ret.set_float(u);
		else
			ret.set_float(x);
	};
	SysExps.prototype.layerscale = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.scale);
	};
	SysExps.prototype.layeropacity = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.opacity * 100);
	};
	SysExps.prototype.layerscalerate = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.zoomRate);
	};
	SysExps.prototype.layoutscale = function (ret)
	{
		if (this.runtime.running_layout)
			ret.set_float(this.runtime.running_layout.scale);
		else
			ret.set_float(0);
	};
	SysExps.prototype.layoutangle = function (ret)
	{
		ret.set_float(cr.to_degrees(this.runtime.running_layout.angle));
	};
	SysExps.prototype.layerangle = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(cr.to_degrees(layer.angle));
	};
	SysExps.prototype.layoutwidth = function (ret)
	{
		ret.set_int(this.runtime.running_layout.width);
	};
	SysExps.prototype.layoutheight = function (ret)
	{
		ret.set_int(this.runtime.running_layout.height);
	};
	SysExps.prototype.find = function (ret, text, searchstr)
	{
		if (cr.is_string(text) && cr.is_string(searchstr))
			ret.set_int(text.search(new RegExp(cr.regexp_escape(searchstr), "i")));
		else
			ret.set_int(-1);
	};
	SysExps.prototype.left = function (ret, text, n)
	{
		ret.set_string(cr.is_string(text) ? text.substr(0, n) : "");
	};
	SysExps.prototype.right = function (ret, text, n)
	{
		ret.set_string(cr.is_string(text) ? text.substr(text.length - n) : "");
	};
	SysExps.prototype.mid = function (ret, text, index_, length_)
	{
		ret.set_string(cr.is_string(text) ? text.substr(index_, length_) : "");
	};
	SysExps.prototype.tokenat = function (ret, text, index_, sep)
	{
		if (cr.is_string(text) && cr.is_string(sep))
		{
			var arr = text.split(sep);
			var i = cr.floor(index_);
			if (i < 0 || i >= arr.length)
				ret.set_string("");
			else
				ret.set_string(arr[i]);
		}
		else
			ret.set_string("");
	};
	SysExps.prototype.tokencount = function (ret, text, sep)
	{
		if (cr.is_string(text) && text.length)
			ret.set_int(text.split(sep).length);
		else
			ret.set_int(0);
	};
	SysExps.prototype.replace = function (ret, text, find_, replace_)
	{
		if (cr.is_string(text) && cr.is_string(find_) && cr.is_string(replace_))
			ret.set_string(text.replace(new RegExp(cr.regexp_escape(find_), "gi"), replace_));
		else
			ret.set_string(cr.is_string(text) ? text : "");
	};
	SysExps.prototype.trim = function (ret, text)
	{
		ret.set_string(cr.is_string(text) ? text.trim() : "");
	};
	SysExps.prototype.pi = function (ret)
	{
		ret.set_float(cr.PI);
	};
	SysExps.prototype.layoutname = function (ret)
	{
		if (this.runtime.running_layout)
			ret.set_string(this.runtime.running_layout.name);
		else
			ret.set_string("");
	};
	SysExps.prototype.renderer = function (ret)
	{
		ret.set_string(this.runtime.gl ? "webgl" : "canvas2d");
	};
	SysExps.prototype.anglediff = function (ret, a, b)
	{
		ret.set_float(cr.to_degrees(cr.angleDiff(cr.to_radians(a), cr.to_radians(b))));
	};
	SysExps.prototype.choose = function (ret)
	{
		var index = cr.floor(Math.random() * (arguments.length - 1));
		ret.set_any(arguments[index + 1]);
	};
	SysExps.prototype.rgb = function (ret, r, g, b)
	{
		ret.set_int(cr.RGB(r, g, b));
	};
	SysExps.prototype.projectversion = function (ret)
	{
		ret.set_string(this.runtime.versionstr);
	};
	SysExps.prototype.anglelerp = function (ret, a, b, x)
	{
		a = cr.to_radians(a);
		b = cr.to_radians(b);
		var diff = cr.angleDiff(a, b);
		if (cr.angleClockwise(b, a))
		{
			ret.set_float(cr.to_clamped_degrees(a + diff * x));
		}
		else
		{
			ret.set_float(cr.to_clamped_degrees(a - diff * x));
		}
	};
	SysExps.prototype.anglerotate = function (ret, a, b, c)
	{
		a = cr.to_radians(a);
		b = cr.to_radians(b);
		c = cr.to_radians(c);
		ret.set_float(cr.to_clamped_degrees(cr.angleRotate(a, b, c)));
	};
	SysExps.prototype.zeropad = function (ret, n, d)
	{
		var s = (n < 0 ? "-" : "");
		if (n < 0) n = -n;
		var zeroes = d - n.toString().length;
		for (var i = 0; i < zeroes; i++)
			s += "0";
		ret.set_string(s + n.toString());
	};
	SysExps.prototype.cpuutilisation = function (ret)
	{
		ret.set_float(this.runtime.cpuutilisation / 1000);
	};
	SysExps.prototype.viewportleft = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.viewLeft : 0);
	};
	SysExps.prototype.viewporttop = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.viewTop : 0);
	};
	SysExps.prototype.viewportright = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.viewRight : 0);
	};
	SysExps.prototype.viewportbottom = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.viewBottom : 0);
	};
	SysExps.prototype.loadingprogress = function (ret)
	{
		ret.set_float(this.runtime.loadingprogress);
	};
	SysExps.prototype.unlerp = function(ret, a, b, y)
    {
        ret.set_float((y - a) / (b - a));
    };
	SysExps.prototype.canvassnapshot = function (ret)
	{
		ret.set_string(this.runtime.snapshotData);
	};
	SysExps.prototype.urlencode = function (ret, s)
	{
		ret.set_string(encodeURIComponent(s));
	};
	SysExps.prototype.urldecode = function (ret, s)
	{
		ret.set_string(decodeURIComponent(s));
	};
	SysExps.prototype.canvastolayerx = function (ret, layerparam, x, y)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.canvasToLayer(x, y, true) : 0);
	};
	SysExps.prototype.canvastolayery = function (ret, layerparam, x, y)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.canvasToLayer(x, y, false) : 0);
	};
	SysExps.prototype.layertocanvasx = function (ret, layerparam, x, y)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.layerToCanvas(x, y, true) : 0);
	};
	SysExps.prototype.layertocanvasy = function (ret, layerparam, x, y)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.layerToCanvas(x, y, false) : 0);
	};
	SysExps.prototype.savestatejson = function (ret)
	{
		ret.set_string(this.runtime.lastSaveJson);
	};
	SysExps.prototype.imagememoryusage = function (ret)
	{
		if (this.runtime.glwrap)
			ret.set_float(Math.round(100 * this.runtime.glwrap.estimateVRAM() / (1024 * 1024)) / 100);
		else
			ret.set_float(0);
	};
	SysExps.prototype.regexsearch = function (ret, str_, regex_, flags_)
	{
		var regex = getRegex(regex_, flags_);
		ret.set_int(str_ ? str_.search(regex) : -1);
	};
	SysExps.prototype.regexreplace = function (ret, str_, regex_, flags_, replace_)
	{
		var regex = getRegex(regex_, flags_);
		ret.set_string(str_ ? str_.replace(regex, replace_) : "");
	};
	var regexMatches = [];
	var lastMatchesStr = "";
	var lastMatchesRegex = "";
	var lastMatchesFlags = "";
	function updateRegexMatches(str_, regex_, flags_)
	{
		if (str_ === lastMatchesStr && regex_ === lastMatchesRegex && flags_ === lastMatchesFlags)
			return;
		var regex = getRegex(regex_, flags_);
		regexMatches = str_.match(regex);
		lastMatchesStr = str_;
		lastMatchesRegex = regex_;
		lastMatchesFlags = flags_;
	};
	SysExps.prototype.regexmatchcount = function (ret, str_, regex_, flags_)
	{
		var regex = getRegex(regex_, flags_);
		updateRegexMatches(str_, regex_, flags_);
		ret.set_int(regexMatches ? regexMatches.length : 0);
	};
	SysExps.prototype.regexmatchat = function (ret, str_, regex_, flags_, index_)
	{
		index_ = Math.floor(index_);
		var regex = getRegex(regex_, flags_);
		updateRegexMatches(str_, regex_, flags_);
		if (!regexMatches || index_ < 0 || index_ >= regexMatches.length)
			ret.set_string("");
		else
			ret.set_string(regexMatches[index_]);
	};
	SysExps.prototype.infinity = function (ret)
	{
		ret.set_float(Infinity);
	};
	sysProto.exps = new SysExps();
	sysProto.runWaits = function ()
	{
		var i, j, len, w, k, s, ss;
		var evinfo = this.runtime.getCurrentEventStack();
		for (i = 0, len = this.waits.length; i < len; i++)
		{
			w = this.waits[i];
			if (w.time > this.runtime.kahanTime.sum)
				continue;
			evinfo.current_event = w.ev;
			evinfo.actindex = w.actindex;
			evinfo.cndindex = 0;
			for (k in w.sols)
			{
				if (w.sols.hasOwnProperty(k))
				{
					s = this.runtime.types_by_index[parseInt(k, 10)].getCurrentSol();
					ss = w.sols[k];
					s.select_all = ss.sa;
					cr.shallowAssignArray(s.instances, ss.insts);
					freeSolStateObject(ss);
				}
			}
			w.ev.resume_actions_and_subevents();
			this.runtime.clearSol(w.solModifiers);
			w.deleteme = true;
		}
		for (i = 0, j = 0, len = this.waits.length; i < len; i++)
		{
			w = this.waits[i];
			this.waits[j] = w;
			if (w.deleteme)
				freeWaitObject(w);
			else
				j++;
		}
		this.waits.length = j;
	};
}());
;
cr.add_common_aces = function (m)
{
	var pluginProto = m[0].prototype;
	var singleglobal_ = m[1];
	var position_aces = m[3];
	var size_aces = m[4];
	var angle_aces = m[5];
	var appearance_aces = m[6];
	var zorder_aces = m[7];
	var effects_aces = m[8];
    if (!pluginProto.cnds)
        pluginProto.cnds = {};
    if (!pluginProto.acts)
        pluginProto.acts = {};
    if (!pluginProto.exps)
        pluginProto.exps = {};
    var cnds = pluginProto.cnds;
    var acts = pluginProto.acts;
    var exps = pluginProto.exps;
    if (position_aces)
    {
        cnds.CompareX = function (cmp, x)
        {
            return cr.do_cmp(this.x, cmp, x);
        };
        cnds.CompareY = function (cmp, y)
        {
            return cr.do_cmp(this.y, cmp, y);
        };
        cnds.IsOnScreen = function ()
        {
			var layer = this.layer;
            this.update_bbox();
            var bbox = this.bbox;
            return !(bbox.right < layer.viewLeft || bbox.bottom < layer.viewTop || bbox.left > layer.viewRight || bbox.top > layer.viewBottom);
        };
        cnds.IsOutsideLayout = function ()
        {
            this.update_bbox();
            var bbox = this.bbox;
            var layout = this.runtime.running_layout;
            return (bbox.right < 0 || bbox.bottom < 0 || bbox.left > layout.width || bbox.top > layout.height);
        };
		cnds.PickDistance = function (which, x, y)
		{
			var sol = this.getCurrentSol();
			var instances = sol.getObjects();
			if (!instances.length)
				return false;
			var inst = instances[0];
			var pickme = inst;
			var dist = cr.distanceTo(inst.x, inst.y, x, y);
			var i, len, d;
			for (i = 1, len = instances.length; i < len; i++)
			{
				inst = instances[i];
				d = cr.distanceTo(inst.x, inst.y, x, y);
				if ((which === 0 && d < dist) || (which === 1 && d > dist))
				{
					dist = d;
					pickme = inst;
				}
			}
			sol.pick_one(pickme);
			return true;
		};
        acts.SetX = function (x)
        {
            if (this.x !== x)
            {
                this.x = x;
                this.set_bbox_changed();
            }
        };
        acts.SetY = function (y)
        {
            if (this.y !== y)
            {
                this.y = y;
                this.set_bbox_changed();
            }
        };
        acts.SetPos = function (x, y)
        {
            if (this.x !== x || this.y !== y)
            {
                this.x = x;
                this.y = y;
                this.set_bbox_changed();
            }
        };
        acts.SetPosToObject = function (obj, imgpt)
        {
            var inst = obj.getPairedInstance(this);
            if (!inst)
				return;
			var newx, newy;
			if (inst.getImagePoint)
			{
				newx = inst.getImagePoint(imgpt, true);
				newy = inst.getImagePoint(imgpt, false);
			}
			else
			{
				newx = inst.x;
				newy = inst.y;
			}
			if (this.x !== newx || this.y !== newy)
            {
				this.x = newx;
				this.y = newy;
				this.set_bbox_changed();
            }
        };
        acts.MoveForward = function (dist)
        {
            if (dist !== 0)
            {
                this.x += Math.cos(this.angle) * dist;
                this.y += Math.sin(this.angle) * dist;
                this.set_bbox_changed();
            }
        };
        acts.MoveAtAngle = function (a, dist)
        {
            if (dist !== 0)
            {
                this.x += Math.cos(cr.to_radians(a)) * dist;
                this.y += Math.sin(cr.to_radians(a)) * dist;
                this.set_bbox_changed();
            }
        };
        exps.X = function (ret)
        {
            ret.set_float(this.x);
        };
        exps.Y = function (ret)
        {
            ret.set_float(this.y);
        };
        exps.dt = function (ret)
        {
            ret.set_float(this.runtime.getDt(this));
        };
    }
    if (size_aces)
    {
        cnds.CompareWidth = function (cmp, w)
        {
            return cr.do_cmp(this.width, cmp, w);
        };
        cnds.CompareHeight = function (cmp, h)
        {
            return cr.do_cmp(this.height, cmp, h);
        };
        acts.SetWidth = function (w)
        {
            if (this.width !== w)
            {
                this.width = w;
                this.set_bbox_changed();
            }
        };
        acts.SetHeight = function (h)
        {
            if (this.height !== h)
            {
                this.height = h;
                this.set_bbox_changed();
            }
        };
        acts.SetSize = function (w, h)
        {
            if (this.width !== w || this.height !== h)
            {
                this.width = w;
                this.height = h;
                this.set_bbox_changed();
            }
        };
        exps.Width = function (ret)
        {
            ret.set_float(this.width);
        };
        exps.Height = function (ret)
        {
            ret.set_float(this.height);
        };
		exps.BBoxLeft = function (ret)
        {
			this.update_bbox();
            ret.set_float(this.bbox.left);
        };
		exps.BBoxTop = function (ret)
        {
			this.update_bbox();
            ret.set_float(this.bbox.top);
        };
		exps.BBoxRight = function (ret)
        {
			this.update_bbox();
            ret.set_float(this.bbox.right);
        };
		exps.BBoxBottom = function (ret)
        {
			this.update_bbox();
            ret.set_float(this.bbox.bottom);
        };
    }
    if (angle_aces)
    {
        cnds.AngleWithin = function (within, a)
        {
            return cr.angleDiff(this.angle, cr.to_radians(a)) <= cr.to_radians(within);
        };
        cnds.IsClockwiseFrom = function (a)
        {
            return cr.angleClockwise(this.angle, cr.to_radians(a));
        };
		cnds.IsBetweenAngles = function (a, b)
		{
			var lower = cr.to_clamped_radians(a);
			var upper = cr.to_clamped_radians(b);
			var angle = cr.clamp_angle(this.angle);
			var obtuse = (!cr.angleClockwise(upper, lower));
			if (obtuse)
				return !(!cr.angleClockwise(angle, lower) && cr.angleClockwise(angle, upper));
			else
				return cr.angleClockwise(angle, lower) && !cr.angleClockwise(angle, upper);
		};
        acts.SetAngle = function (a)
        {
            var newangle = cr.to_radians(cr.clamp_angle_degrees(a));
            if (isNaN(newangle))
                return;
            if (this.angle !== newangle)
            {
                this.angle = newangle;
                this.set_bbox_changed();
            }
        };
        acts.RotateClockwise = function (a)
        {
            if (a !== 0 && !isNaN(a))
            {
                this.angle += cr.to_radians(a);
                this.angle = cr.clamp_angle(this.angle);
                this.set_bbox_changed();
            }
        };
        acts.RotateCounterclockwise = function (a)
        {
            if (a !== 0 && !isNaN(a))
            {
                this.angle -= cr.to_radians(a);
                this.angle = cr.clamp_angle(this.angle);
                this.set_bbox_changed();
            }
        };
        acts.RotateTowardAngle = function (amt, target)
        {
            var newangle = cr.angleRotate(this.angle, cr.to_radians(target), cr.to_radians(amt));
            if (isNaN(newangle))
                return;
            if (this.angle !== newangle)
            {
                this.angle = newangle;
                this.set_bbox_changed();
            }
        };
        acts.RotateTowardPosition = function (amt, x, y)
        {
            var dx = x - this.x;
            var dy = y - this.y;
            var target = Math.atan2(dy, dx);
            var newangle = cr.angleRotate(this.angle, target, cr.to_radians(amt));
            if (isNaN(newangle))
                return;
            if (this.angle !== newangle)
            {
                this.angle = newangle;
                this.set_bbox_changed();
            }
        };
        acts.SetTowardPosition = function (x, y)
        {
            var dx = x - this.x;
            var dy = y - this.y;
            var newangle = Math.atan2(dy, dx);
            if (isNaN(newangle))
                return;
            if (this.angle !== newangle)
            {
                this.angle = newangle;
                this.set_bbox_changed();
            }
        };
        exps.Angle = function (ret)
        {
            ret.set_float(cr.to_clamped_degrees(this.angle));
        };
    }
    if (!singleglobal_)
    {
        cnds.CompareInstanceVar = function (iv, cmp, val)
        {
            return cr.do_cmp(this.instance_vars[iv], cmp, val);
        };
        cnds.IsBoolInstanceVarSet = function (iv)
        {
            return this.instance_vars[iv];
        };
		cnds.PickInstVarHiLow = function (which, iv)
		{
			var sol = this.getCurrentSol();
			var instances = sol.getObjects();
			if (!instances.length)
				return false;
			var inst = instances[0];
			var pickme = inst;
			var val = inst.instance_vars[iv];
			var i, len, v;
			for (i = 1, len = instances.length; i < len; i++)
			{
				inst = instances[i];
				v = inst.instance_vars[iv];
				if ((which === 0 && v < val) || (which === 1 && v > val))
				{
					val = v;
					pickme = inst;
				}
			}
			sol.pick_one(pickme);
			return true;
		};
		cnds.PickByUID = function (u)
		{
			var i, len, j, inst, families, instances, sol;
			var cnd = this.runtime.getCurrentCondition();
			if (cnd.inverted)
			{
				sol = this.getCurrentSol();
				if (sol.select_all)
				{
					sol.select_all = false;
					sol.instances.length = 0;
					sol.else_instances.length = 0;
					instances = this.instances;
					for (i = 0, len = instances.length; i < len; i++)
					{
						inst = instances[i];
						if (inst.uid === u)
							sol.else_instances.push(inst);
						else
							sol.instances.push(inst);
					}
					return !!sol.instances.length;
				}
				else
				{
					for (i = 0, j = 0, len = sol.instances.length; i < len; i++)
					{
						inst = sol.instances[i];
						sol.instances[j] = inst;
						if (inst.uid === u)
						{
							sol.else_instances.push(inst);
						}
						else
							j++;
					}
					sol.instances.length = j;
					return !!sol.instances.length;
				}
			}
			else
			{
				inst = this.runtime.getObjectByUID(u);
				if (!inst)
					return false;
				sol = this.getCurrentSol();
				if (!sol.select_all && sol.instances.indexOf(inst) === -1)
					return false;		// not picked
				if (this.is_family)
				{
					families = inst.type.families;
					for (i = 0, len = families.length; i < len; i++)
					{
						if (families[i] === this)
						{
							sol.pick_one(inst);
							return true;
						}
					}
				}
				else if (inst.type === this)
				{
					sol.pick_one(inst);
					return true;
				}
				return false;
			}
		};
		cnds.OnCreated = function ()
		{
			return true;
		};
		cnds.OnDestroyed = function ()
		{
			return true;
		};
        acts.SetInstanceVar = function (iv, val)
        {
			var myinstvars = this.instance_vars;
            if (cr.is_number(myinstvars[iv]))
            {
                if (cr.is_number(val))
                    myinstvars[iv] = val;
                else
                    myinstvars[iv] = parseFloat(val);
            }
            else if (cr.is_string(myinstvars[iv]))
            {
                if (cr.is_string(val))
                    myinstvars[iv] = val;
                else
                    myinstvars[iv] = val.toString();
            }
            else
;
        };
        acts.AddInstanceVar = function (iv, val)
        {
			var myinstvars = this.instance_vars;
            if (cr.is_number(myinstvars[iv]))
            {
                if (cr.is_number(val))
                    myinstvars[iv] += val;
                else
                    myinstvars[iv] += parseFloat(val);
            }
            else if (cr.is_string(myinstvars[iv]))
            {
                if (cr.is_string(val))
                    myinstvars[iv] += val;
                else
                    myinstvars[iv] += val.toString();
            }
            else
;
        };
        acts.SubInstanceVar = function (iv, val)
        {
			var myinstvars = this.instance_vars;
            if (cr.is_number(myinstvars[iv]))
            {
                if (cr.is_number(val))
                    myinstvars[iv] -= val;
                else
                    myinstvars[iv] -= parseFloat(val);
            }
            else
;
        };
        acts.SetBoolInstanceVar = function (iv, val)
        {
            this.instance_vars[iv] = val ? 1 : 0;
        };
        acts.ToggleBoolInstanceVar = function (iv)
        {
            this.instance_vars[iv] = 1 - this.instance_vars[iv];
        };
        acts.Destroy = function ()
        {
            this.runtime.DestroyInstance(this);
        };
        exps.Count = function (ret)
        {
			var count = ret.object_class.instances.length;
			var i, len, inst;
			for (i = 0, len = this.runtime.createRow.length; i < len; i++)
			{
				inst = this.runtime.createRow[i];
				if (ret.object_class.is_family)
				{
					if (inst.type.families.indexOf(ret.object_class) >= 0)
						count++;
				}
				else
				{
					if (inst.type === ret.object_class)
						count++;
				}
			}
            ret.set_int(count);
        };
		exps.PickedCount = function (ret)
        {
            ret.set_int(ret.object_class.getCurrentSol().getObjects().length);
        };
		exps.UID = function (ret)
		{
			ret.set_int(this.uid);
		};
		exps.IID = function (ret)
		{
			ret.set_int(this.get_iid());
		};
    }
    if (appearance_aces)
    {
        cnds.IsVisible = function ()
        {
            return this.visible;
        };
        acts.SetVisible = function (v)
        {
			if (!v !== !this.visible)
			{
				this.visible = v;
				this.runtime.redraw = true;
			}
        };
        cnds.CompareOpacity = function (cmp, x)
        {
            return cr.do_cmp(cr.round6dp(this.opacity * 100), cmp, x);
        };
        acts.SetOpacity = function (x)
        {
            var new_opacity = x / 100.0;
            if (new_opacity < 0)
                new_opacity = 0;
            else if (new_opacity > 1)
                new_opacity = 1;
            if (new_opacity !== this.opacity)
            {
                this.opacity = new_opacity;
                this.runtime.redraw = true;
            }
        };
        exps.Opacity = function (ret)
        {
            ret.set_float(cr.round6dp(this.opacity * 100.0));
        };
    }
	if (zorder_aces)
	{
		cnds.IsOnLayer = function (layer_)
		{
			if (!layer_)
				return false;
			return this.layer === layer_;
		};
		cnds.PickTopBottom = function (which_)
		{
			var sol = this.getCurrentSol();
			var instances = sol.getObjects();
			if (!instances.length)
				return false;
			var inst = instances[0];
			var pickme = inst;
			var i, len;
			for (i = 1, len = instances.length; i < len; i++)
			{
				inst = instances[i];
				if (which_ === 0)
				{
					if (inst.layer.index > pickme.layer.index || (inst.layer.index === pickme.layer.index && inst.get_zindex() > pickme.get_zindex()))
					{
						pickme = inst;
					}
				}
				else
				{
					if (inst.layer.index < pickme.layer.index || (inst.layer.index === pickme.layer.index && inst.get_zindex() < pickme.get_zindex()))
					{
						pickme = inst;
					}
				}
			}
			sol.pick_one(pickme);
			return true;
		};
		acts.MoveToTop = function ()
		{
			var zindex = this.get_zindex();
			if (zindex === this.layer.instances.length - 1)
				return;
			cr.arrayRemove(this.layer.instances, zindex);
			this.layer.instances.push(this);
			this.runtime.redraw = true;
			this.layer.zindices_stale = true;
		};
		acts.MoveToBottom = function ()
		{
			var zindex = this.get_zindex();
			if (zindex === 0)
				return;
			cr.arrayRemove(this.layer.instances, zindex);
			this.layer.instances.unshift(this);
			this.runtime.redraw = true;
			this.layer.zindices_stale = true;
		};
		acts.MoveToLayer = function (layerMove)
		{
			if (!layerMove || layerMove == this.layer)
				return;
			cr.arrayRemove(this.layer.instances, this.get_zindex());
			this.layer.zindices_stale = true;
			this.layer = layerMove;
			this.zindex = layerMove.instances.length;
			layerMove.instances.push(this);
			this.runtime.redraw = true;
		};
		acts.ZMoveToObject = function (where_, obj_)
		{
			var isafter = (where_ === 0);
			if (!obj_)
				return;
			var other = obj_.getFirstPicked(this);
			if (!other || other.uid === this.uid)
				return;
			if (this.layer.index !== other.layer.index)
			{
				cr.arrayRemove(this.layer.instances, this.get_zindex());
				this.layer.zindices_stale = true;
				this.layer = other.layer;
				this.zindex = other.layer.instances.length;
				other.layer.instances.push(this);
			}
			var myZ = this.get_zindex();
			var insertZ = other.get_zindex();
			cr.arrayRemove(this.layer.instances, myZ);
			if (myZ < insertZ)
				insertZ--;
			if (isafter)
				insertZ++;
			if (insertZ === this.layer.instances.length)
				this.layer.instances.push(this);
			else
				this.layer.instances.splice(insertZ, 0, this);
			this.layer.zindices_stale = true;
			this.runtime.redraw = true;
		};
		exps.LayerNumber = function (ret)
		{
			ret.set_int(this.layer.number);
		};
		exps.LayerName = function (ret)
		{
			ret.set_string(this.layer.name);
		};
		exps.ZIndex = function (ret)
		{
			ret.set_int(this.get_zindex());
		};
	}
	if (effects_aces)
	{
		acts.SetEffectEnabled = function (enable_, effectname_)
		{
			if (!this.runtime.glwrap)
				return;
			var i = this.type.getEffectIndexByName(effectname_);
			if (i < 0)
				return;		// effect name not found
			var enable = (enable_ === 1);
			if (this.active_effect_flags[i] === enable)
				return;		// no change
			this.active_effect_flags[i] = enable;
			this.updateActiveEffects();
			this.runtime.redraw = true;
		};
		acts.SetEffectParam = function (effectname_, index_, value_)
		{
			if (!this.runtime.glwrap)
				return;
			var i = this.type.getEffectIndexByName(effectname_);
			if (i < 0)
				return;		// effect name not found
			var et = this.type.effect_types[i];
			var params = this.effect_params[i];
			index_ = Math.floor(index_);
			if (index_ < 0 || index_ >= params.length)
				return;		// effect index out of bounds
			if (this.runtime.glwrap.getProgramParameterType(et.shaderindex, index_) === 1)
				value_ /= 100.0;
			if (params[index_] === value_)
				return;		// no change
			params[index_] = value_;
			if (et.active)
				this.runtime.redraw = true;
		};
	}
};
cr.set_bbox_changed = function ()
{
    this.bbox_changed = true;       // will recreate next time box requested
    this.runtime.redraw = true;     // assume runtime needs to redraw
	var i, len;
	for (i = 0, len = this.bbox_changed_callbacks.length; i < len; i++)
	{
		this.bbox_changed_callbacks[i](this);
	}
};
cr.add_bbox_changed_callback = function (f)
{
	if (f)
		this.bbox_changed_callbacks.push(f);
};
cr.update_bbox = function ()
{
    if (!this.bbox_changed)
        return;                 // bounding box not changed
    this.bbox.set(this.x, this.y, this.x + this.width, this.y + this.height);
    this.bbox.offset(-this.hotspotX * this.width, -this.hotspotY * this.height);
    if (!this.angle)
    {
        this.bquad.set_from_rect(this.bbox);    // make bounding quad from box
    }
    else
    {
        this.bbox.offset(-this.x, -this.y);       					// translate to origin
        this.bquad.set_from_rotated_rect(this.bbox, this.angle);	// rotate around origin
        this.bquad.offset(this.x, this.y);      					// translate back to original position
        this.bquad.bounding_box(this.bbox);
    }
	var temp = 0;
	if (this.bbox.left > this.bbox.right)
	{
		temp = this.bbox.left;
		this.bbox.left = this.bbox.right;
		this.bbox.right = temp;
	}
	if (this.bbox.top > this.bbox.bottom)
	{
		temp = this.bbox.top;
		this.bbox.top = this.bbox.bottom;
		this.bbox.bottom = temp;
	}
    this.bbox_changed = false;  // bounding box up to date
};
cr.inst_contains_pt = function (x, y)
{
	if (!this.bbox.contains_pt(x, y))
		return false;
	if (!this.bquad.contains_pt(x, y))
		return false;
	if (this.collision_poly && !this.collision_poly.is_empty())
	{
		this.collision_poly.cache_poly(this.width, this.height, this.angle);
		return this.collision_poly.contains_pt(x - this.x, y - this.y);
	}
	else
		return true;
};
cr.inst_get_iid = function ()
{
	this.type.updateIIDs();
	return this.iid;
};
cr.inst_get_zindex = function ()
{
	this.layer.updateZIndices();
	return this.zindex;
};
cr.inst_updateActiveEffects = function ()
{
	this.active_effect_types.length = 0;
	var i, len, et, inst;
	for (i = 0, len = this.active_effect_flags.length; i < len; i++)
	{
		if (this.active_effect_flags[i])
			this.active_effect_types.push(this.type.effect_types[i]);
	}
	this.uses_shaders = !!this.active_effect_types.length;
};
cr.inst_toString = function ()
{
	return "Inst" + this.puid;
};
cr.type_getFirstPicked = function (frominst)
{
	if (frominst && frominst.is_contained && frominst.type != this)
	{
		var i, len, s;
		for (i = 0, len = frominst.siblings.length; i < len; i++)
		{
			s = frominst.siblings[i];
			if (s.type == this)
				return s;
		}
	}
    var instances = this.getCurrentSol().getObjects();
    if (instances.length)
        return instances[0];
    else
        return null;
};
cr.type_getPairedInstance = function (inst)
{
	var instances = this.getCurrentSol().getObjects();
	if (instances.length)
		return instances[inst.get_iid() % instances.length];
	else
		return null;
};
cr.type_updateIIDs = function ()
{
	if (!this.stale_iids || this.is_family)
		return;		// up to date or is family - don't want family to overwrite IIDs
	var i, len;
	for (i = 0, len = this.instances.length; i < len; i++)
		this.instances[i].iid = i;
	this.stale_iids = false;
};
cr.type_getCurrentSol = function ()
{
    return this.solstack[this.cur_sol];
};
cr.type_pushCleanSol = function ()
{
    this.cur_sol++;
    if (this.cur_sol === this.solstack.length)
        this.solstack.push(new cr.selection(this));
    else
        this.solstack[this.cur_sol].select_all = true;  // else clear next SOL
};
cr.type_pushCopySol = function ()
{
    this.cur_sol++;
    if (this.cur_sol === this.solstack.length)
        this.solstack.push(new cr.selection(this));
    var clonesol = this.solstack[this.cur_sol];
    var prevsol = this.solstack[this.cur_sol - 1];
    if (prevsol.select_all)
        clonesol.select_all = true;
    else
    {
        clonesol.select_all = false;
		cr.shallowAssignArray(clonesol.instances, prevsol.instances);
    }
};
cr.type_popSol = function ()
{
;
    this.cur_sol--;
};
cr.type_getBehaviorByName = function (behname)
{
    var i, len, j, lenj, f, index = 0;
	if (!this.is_family)
	{
		for (i = 0, len = this.families.length; i < len; i++)
		{
			f = this.families[i];
			for (j = 0, lenj = f.behaviors.length; j < lenj; j++)
			{
				if (behname === f.behaviors[j].name)
				{
					this.extra.lastBehIndex = index;
					return f.behaviors[j];
				}
				index++;
			}
		}
	}
    for (i = 0, len = this.behaviors.length; i < len; i++) {
        if (behname === this.behaviors[i].name)
		{
			this.extra.lastBehIndex = index;
            return this.behaviors[i];
		}
		index++;
    }
	return null;
};
cr.type_getBehaviorIndexByName = function (behname)
{
    var b = this.getBehaviorByName(behname);
	if (b)
		return this.extra.lastBehIndex;
	else
		return -1;
};
cr.type_getEffectIndexByName = function (name_)
{
	var i, len;
	for (i = 0, len = this.effect_types.length; i < len; i++)
	{
		if (this.effect_types[i].name === name_)
			return i;
	}
	return -1;
};
cr.type_applySolToContainer = function ()
{
	if (!this.is_contained || this.is_family)
		return;
	var i, len, j, lenj, t, sol, sol2;
	this.updateIIDs();
	sol = this.getCurrentSol();
	var select_all = sol.select_all;
	var es = this.runtime.getCurrentEventStack();
	var orblock = es && es.current_event && es.current_event.orblock;
	for (i = 0, len = this.container.length; i < len; i++)
	{
		t = this.container[i];
		if (t === this)
			continue;
		t.updateIIDs();
		sol2 = t.getCurrentSol();
		sol2.select_all = select_all;
		if (!select_all)
		{
			sol2.instances.length = sol.instances.length;
			for (j = 0, lenj = sol.instances.length; j < lenj; j++)
				sol2.instances[j] = t.instances[sol.instances[j].iid];
			if (orblock)
			{
				sol2.else_instances.length = sol.else_instances.length;
				for (j = 0, lenj = sol.else_instances.length; j < lenj; j++)
					sol2.else_instances[j] = t.instances[sol.else_instances[j].iid];
			}
		}
	}
};
cr.type_toString = function ()
{
	return "Type" + this.sid;
};
cr.do_cmp = function (x, cmp, y)
{
	if (typeof x === "undefined" || typeof y === "undefined")
		return false;
    switch (cmp)
    {
        case 0:     // equal
            return x === y;
        case 1:     // not equal
            return x !== y;
        case 2:     // less
            return x < y;
        case 3:     // less/equal
            return x <= y;
        case 4:     // greater
            return x > y;
        case 5:     // greater/equal
            return x >= y;
        default:
;
            return false;
    }
};
cr.shaders = {};
;
;
cr.plugins_.Browser = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Browser.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		var self = this;
		window.addEventListener("resize", function () {
			self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnResize, self);
		});
		if (typeof navigator.onLine !== "undefined")
		{
			window.addEventListener("online", function() {
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnOnline, self);
			});
			window.addEventListener("offline", function() {
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnOffline, self);
			});
		}
		if (typeof window.applicationCache !== "undefined")
		{
			window.applicationCache.addEventListener('updateready', function() {
				self.runtime.loadingprogress = 1;
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnUpdateReady, self);
			});
			window.applicationCache.addEventListener('progress', function(e) {
				self.runtime.loadingprogress = e["loaded"] / e["total"];
			});
		}
		if (!this.runtime.isDirectCanvas)
		{
			document.addEventListener("appMobi.device.update.available", function() {
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnUpdateReady, self);
			});
			document.addEventListener("menubutton", function() {
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnMenuButton, self);
			});
			document.addEventListener("searchbutton", function() {
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnSearchButton, self);
			});
		}
		this.runtime.addSuspendCallback(function(s) {
			if (s)
			{
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnPageHidden, self);
			}
			else
			{
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnPageVisible, self);
			}
		});
		this.is_arcade = (typeof window["is_scirra_arcade"] !== "undefined");
		this.fullscreenOldMarginCss = "";
	};
	function Cnds() {};
	Cnds.prototype.CookiesEnabled = function()
	{
		return navigator ? navigator.cookieEnabled : false;
	};
	Cnds.prototype.IsOnline = function()
	{
		return navigator ? navigator.onLine : false;
	};
	Cnds.prototype.HasJava = function()
	{
		return navigator ? navigator.javaEnabled() : false;
	};
	Cnds.prototype.OnOnline = function()
	{
		return true;
	};
	Cnds.prototype.OnOffline = function()
	{
		return true;
	};
	Cnds.prototype.IsDownloadingUpdate = function ()
	{
		if (typeof window["applicationCache"] === "undefined")
			return false;
		else
			return window["applicationCache"]["status"] === window["applicationCache"]["DOWNLOADING"];
	};
	Cnds.prototype.OnUpdateReady = function ()
	{
		return true;
	};
	Cnds.prototype.PageVisible = function ()
	{
		return !this.runtime.isSuspended;
	};
	Cnds.prototype.OnPageVisible = function ()
	{
		return true;
	};
	Cnds.prototype.OnPageHidden = function ()
	{
		return true;
	};
	Cnds.prototype.OnResize = function ()
	{
		return true;
	};
	Cnds.prototype.IsFullscreen = function ()
	{
		return !!(document["mozFullScreen"] || document["webkitIsFullScreen"] || document["fullScreen"] || this.runtime.isNodeFullscreen);
	};
	Cnds.prototype.OnMenuButton = function ()
	{
		return true;
	};
	Cnds.prototype.OnSearchButton = function ()
	{
		return true;
	};
	Cnds.prototype.IsMetered = function ()
	{
		var connection = navigator["connection"] || navigator["mozConnection"] || navigator["webkitConnection"];
		if (!connection)
			return false;
		return connection["metered"];
	};
	Cnds.prototype.IsCharging = function ()
	{
		var battery = navigator["battery"] || navigator["mozBattery"] || navigator["webkitBattery"];
		if (!battery)
			return true;
		return battery["charging"];
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Alert = function (msg)
	{
		if (!this.runtime.isDomFree)
			alert(msg.toString());
	};
	Acts.prototype.Close = function ()
	{
		if (this.runtime.isCocoonJs)
			CocoonJS["App"]["forceToFinish"]();
		else if (this.runtime.isNodeWebkit)
			window["nwgui"]["App"]["quit"]();
		else if (!this.is_arcade && !this.runtime.isDomFree)
			window.close();
	};
	Acts.prototype.Focus = function ()
	{
		if (this.runtime.isNodeWebkit)
		{
			var win = window["nwgui"]["Window"]["get"]();
			win["focus"]();
		}
		else if (!this.is_arcade && !this.runtime.isDomFree)
			window.focus();
	};
	Acts.prototype.Blur = function ()
	{
		if (this.runtime.isNodeWebkit)
		{
			var win = window["nwgui"]["Window"]["get"]();
			win["blur"]();
		}
		else if (!this.is_arcade && !this.runtime.isDomFree)
			window.blur();
	};
	Acts.prototype.GoBack = function ()
	{
		if (!this.is_arcade && !this.runtime.isDomFree && window.back)
			window.back();
	};
	Acts.prototype.GoForward = function ()
	{
		if (!this.is_arcade && !this.runtime.isDomFree && window.forward)
			window.forward();
	};
	Acts.prototype.GoHome = function ()
	{
		if (!this.is_arcade && !this.runtime.isDomFree && window.home)
			window.home();
	};
	Acts.prototype.GoToURL = function (url)
	{
		if (this.runtime.isCocoonJs)
			CocoonJS["App"]["openURL"](url);
		else if (!this.is_arcade && !this.runtime.isDomFree)
			window.location = url;
	};
	Acts.prototype.GoToURLWindow = function (url, tag)
	{
		if (this.runtime.isCocoonJs)
			CocoonJS["App"]["openURL"](url);
		else if (!this.is_arcade && !this.runtime.isDomFree)
			window.open(url, tag);
	};
	Acts.prototype.Reload = function ()
	{
		if (!this.is_arcade && !this.runtime.isDomFree)
			window.location.reload();
	};
	var firstRequestFullscreen = true;
	var crruntime = null;
	function onFullscreenError()
	{
		if (typeof jQuery !== "undefined")
		{
			crruntime["setSize"](jQuery(window).width(), jQuery(window).height());
		}
	};
	Acts.prototype.RequestFullScreen = function (stretchmode)
	{
		if (this.runtime.isDomFree)
		{
			cr.logexport("[Construct 2] Requesting fullscreen is not supported on this platform - the request has been ignored");
			return;
		}
		if (stretchmode >= 2)
			stretchmode += 1;
		if (stretchmode === 6)
			stretchmode = 2;
		if (this.runtime.isNodeWebkit)
		{
			if (!this.runtime.isNodeFullscreen)
			{
				window["nwgui"]["Window"]["get"]()["enterFullscreen"]();
				this.runtime.isNodeFullscreen = true;
			}
		}
		else
		{
			if (document["mozFullScreen"] || document["webkitIsFullScreen"] || document["fullScreen"])
				return;
			this.fullscreenOldMarginCss = jQuery(this.runtime.canvasdiv).css("margin");
			jQuery(this.runtime.canvasdiv).css("margin", "0");
			window["c2resizestretchmode"] = (stretchmode > 0 ? 1 : 0);
			this.runtime.fullscreen_scaling = (stretchmode >= 2 ? stretchmode : 0);
			var elem = this.runtime.canvasdiv || this.runtime.canvas;
			if (firstRequestFullscreen)
			{
				firstRequestFullscreen = false;
				crruntime = this.runtime;
				elem.addEventListener("mozfullscreenerror", onFullscreenError);
				elem.addEventListener("webkitfullscreenerror", onFullscreenError);
				elem.addEventListener("msfullscreenerror", onFullscreenError);
				elem.addEventListener("fullscreenerror", onFullscreenError);
			}
			if (!cr.is_undefined(elem["webkitRequestFullScreen"]))
			{
				if (typeof Element !== "undefined" && typeof Element["ALLOW_KEYBOARD_INPUT"] !== "undefined")
					elem["webkitRequestFullScreen"](Element["ALLOW_KEYBOARD_INPUT"]);
				else
					elem["webkitRequestFullScreen"]();
			}
			else if (!cr.is_undefined(elem["mozRequestFullScreen"]))
				elem["mozRequestFullScreen"]();
			else if (!cr.is_undefined(elem["requestFullscreen"]))
				elem["requestFullscreen"]();
		}
	};
	Acts.prototype.CancelFullScreen = function ()
	{
		if (this.runtime.isDomFree)
		{
			cr.logexport("[Construct 2] Exiting fullscreen is not supported on this platform - the request has been ignored");
			return;
		}
		if (this.runtime.isNodeWebkit)
		{
			if (this.runtime.isNodeFullscreen)
			{
				window["nwgui"]["Window"]["get"]()["leaveFullscreen"]();
				this.runtime.isNodeFullscreen = false;
			}
		}
		else
		{
			if (!cr.is_undefined(document["webkitCancelFullScreen"]))
				document["webkitCancelFullScreen"]();
			if (!cr.is_undefined(document["mozCancelFullScreen"]))
				document["mozCancelFullScreen"]();
			if (!cr.is_undefined(document["exitFullscreen"]))
				document["exitFullscreen"]();
			jQuery(this.runtime.canvasdiv).css("margin", this.fullscreenOldMarginCss);
		}
	};
	Acts.prototype.Vibrate = function (pattern_)
	{
		try {
			var arr = pattern_.split(",");
			var i, len;
			for (i = 0, len = arr.length; i < len; i++)
			{
				arr[i] = parseInt(arr[i], 10);
			}
			if (navigator["vibrate"])
				navigator["vibrate"](arr);
			else if (navigator["mozVibrate"])
				navigator["mozVibrate"](arr);
			else if (navigator["webkitVibrate"])
				navigator["webkitVibrate"](arr);
		}
		catch (e) {}
	};
	Acts.prototype.InvokeDownload = function (url_, filename_)
	{
		var a = document.createElement("a");
		if (typeof a.download === "undefined")
		{
			window.open(url_);
		}
		else
		{
			var body = document.getElementsByTagName("body")[0];
			a.textContent = filename_;
			a.href = url_;
			a.download = filename_;
			body.appendChild(a);
			var clickEvent = document.createEvent("MouseEvent");
			clickEvent.initMouseEvent("click", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
			a.dispatchEvent(clickEvent);
			body.removeChild(a);
		}
	};
	Acts.prototype.ConsoleLog = function (type_, msg_)
	{
		if (!console)
			return;
		if (type_ === 0 && console.log)
			console.log(msg_);
		if (type_ === 1 && console.warn)
			console.warn(msg_);
		if (type_ === 2 && console.error)
			console.error(msg_);
	};
	Acts.prototype.ConsoleGroup = function (name_)
	{
		if (console && console.group)
			console.group(name_);
	};
	Acts.prototype.ConsoleGroupEnd = function ()
	{
		if (console && console.groupEnd)
			console.groupEnd();
	};
	Acts.prototype.ExecJs = function (js_)
	{
		if (eval)
			eval(js_);
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.URL = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : window.location.toString());
	};
	Exps.prototype.Protocol = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : window.location.protocol);
	};
	Exps.prototype.Domain = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : window.location.hostname);
	};
	Exps.prototype.PathName = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : window.location.pathname);
	};
	Exps.prototype.Hash = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : window.location.hash);
	};
	Exps.prototype.Referrer = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : document.referrer);
	};
	Exps.prototype.Title = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : document.title);
	};
	Exps.prototype.Name = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : navigator.appName);
	};
	Exps.prototype.Version = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : navigator.appVersion);
	};
	Exps.prototype.Language = function (ret)
	{
		if (navigator && navigator.language)
			ret.set_string(navigator.language);
		else
			ret.set_string("");
	};
	Exps.prototype.Platform = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : navigator.platform);
	};
	Exps.prototype.Product = function (ret)
	{
		if (navigator && navigator.product)
			ret.set_string(navigator.product);
		else
			ret.set_string("");
	};
	Exps.prototype.Vendor = function (ret)
	{
		if (navigator && navigator.vendor)
			ret.set_string(navigator.vendor);
		else
			ret.set_string("");
	};
	Exps.prototype.UserAgent = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : navigator.userAgent);
	};
	Exps.prototype.QueryString = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : window.location.search);
	};
	Exps.prototype.QueryParam = function (ret, paramname)
	{
		if (this.runtime.isDomFree)
		{
			ret.set_string("");
			return;
		}
		var match = RegExp('[?&]' + paramname + '=([^&]*)').exec(window.location.search);
		if (match)
			ret.set_string(decodeURIComponent(match[1].replace(/\+/g, ' ')));
		else
			ret.set_string("");
	};
	Exps.prototype.Bandwidth = function (ret)
	{
		var connection = navigator["connection"] || navigator["mozConnection"] || navigator["webkitConnection"];
		if (!connection)
			ret.set_float(Number.POSITIVE_INFINITY);
		else
			ret.set_float(connection["bandwidth"]);
	};
	Exps.prototype.BatteryLevel = function (ret)
	{
		var battery = navigator["battery"] || navigator["mozBattery"] || navigator["webkitBattery"];
		if (!battery)
			ret.set_float(1);
		else
			ret.set_float(battery["level"]);
	};
	Exps.prototype.BatteryTimeLeft = function (ret)
	{
		var battery = navigator["battery"] || navigator["mozBattery"] || navigator["webkitBattery"];
		if (!battery)
			ret.set_float(Number.POSITIVE_INFINITY);
		else
			ret.set_float(battery["dischargingTime"]);
	};
	Exps.prototype.ExecJS = function (ret, js_)
	{
		if (!eval)
		{
			ret.set_any(0);
			return;
		}
		var result = eval(js_);
		if (typeof result === "number")
			ret.set_any(result);
		else if (typeof result === "string")
			ret.set_any(result);
		else if (typeof result === "boolean")
			ret.set_any(result ? 1 : 0);
		else
			ret.set_any(0);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Button = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Button.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		if (this.runtime.isDomFree)
		{
			cr.logexport("[Construct 2] Button plugin not supported on this platform - the object will not be created");
			return;
		}
		this.isCheckbox = (this.properties[0] === 1);
		this.inputElem = document.createElement("input");
		if (this.isCheckbox)
			this.elem = document.createElement("label");
		else
			this.elem = this.inputElem;
		this.labelText = null;
		this.inputElem.type = (this.isCheckbox ? "checkbox" : "button");
		this.inputElem.id = this.properties[6];
		jQuery(this.elem).appendTo(this.runtime.canvasdiv ? this.runtime.canvasdiv : "body");
		if (this.isCheckbox)
		{
			jQuery(this.inputElem).appendTo(this.elem);
			this.labelText = document.createTextNode(this.properties[1]);
			jQuery(this.elem).append(this.labelText);
			this.inputElem.checked = (this.properties[7] !== 0);
			jQuery(this.elem).css("font-family", "sans-serif");
			jQuery(this.elem).css("display", "inline-block");
			jQuery(this.elem).css("color", "black");
		}
		else
			this.inputElem.value = this.properties[1];
		this.elem.title = this.properties[2];
		this.inputElem.disabled = (this.properties[4] === 0);
		this.autoFontSize = (this.properties[5] !== 0);
		if (this.properties[3] === 0)
		{
			jQuery(this.elem).hide();
			this.visible = false;
		}
		this.inputElem.onclick = (function (self) {
			return function(e) {
				e.stopPropagation();
				self.runtime.trigger(cr.plugins_.Button.prototype.cnds.OnClicked, self);
			};
		})(this);
		this.elem.addEventListener("touchstart", function (e) {
			e.stopPropagation();
		}, false);
		this.elem.addEventListener("touchmove", function (e) {
			e.stopPropagation();
		}, false);
		this.elem.addEventListener("touchend", function (e) {
			e.stopPropagation();
		}, false);
		jQuery(this.elem).mousedown(function (e) {
			e.stopPropagation();
		});
		jQuery(this.elem).mouseup(function (e) {
			e.stopPropagation();
		});
		jQuery(this.elem).keydown(function (e) {
			e.stopPropagation();
		});
		jQuery(this.elem).keyup(function (e) {
			e.stopPropagation();
		});
		this.updatePosition();
		this.runtime.tickMe(this);
	};
	instanceProto.saveToJSON = function ()
	{
		var o = {
			"tooltip": this.elem.title,
			"disabled": !!this.inputElem.disabled
		};
		if (this.isCheckbox)
		{
			o["checked"] = !!this.inputElem.checked;
			o["text"] = this.labelText.nodeValue;
		}
		else
		{
			o["text"] = this.elem.value;
		}
		return o;
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.elem.title = o["tooltip"];
		this.inputElem.disabled = o["disabled"];
		if (this.isCheckbox)
		{
			this.inputElem.checked = o["checked"];
			this.labelText.nodeValue = o["text"];
		}
		else
		{
			this.elem.value = o["text"];
		}
	};
	instanceProto.onDestroy = function ()
	{
		if (this.runtime.isDomFree)
			return;
		jQuery(this.elem).remove();
		this.elem = null;
	};
	instanceProto.tick = function ()
	{
		this.updatePosition();
	};
	instanceProto.updatePosition = function ()
	{
		if (this.runtime.isDomFree)
			return;
		var left = this.layer.layerToCanvas(this.x, this.y, true);
		var top = this.layer.layerToCanvas(this.x, this.y, false);
		var right = this.layer.layerToCanvas(this.x + this.width, this.y + this.height, true);
		var bottom = this.layer.layerToCanvas(this.x + this.width, this.y + this.height, false);
		if (!this.visible || !this.layer.visible || right <= 0 || bottom <= 0 || left >= this.runtime.width || top >= this.runtime.height)
		{
			jQuery(this.elem).hide();
			return;
		}
		if (left < 1)
			left = 1;
		if (top < 1)
			top = 1;
		if (right >= this.runtime.width)
			right = this.runtime.width - 1;
		if (bottom >= this.runtime.height)
			bottom = this.runtime.height - 1;
		jQuery(this.elem).show();
		var offx = Math.round(left) + jQuery(this.runtime.canvas).offset().left;
		var offy = Math.round(top) + jQuery(this.runtime.canvas).offset().top;
		jQuery(this.elem).offset({left: offx, top: offy});
		jQuery(this.elem).width(Math.round(right - left));
		jQuery(this.elem).height(Math.round(bottom - top));
		if (this.autoFontSize)
			jQuery(this.elem).css("font-size", ((this.layer.getScale() / this.runtime.devicePixelRatio) - 0.2) + "em");
	};
	instanceProto.draw = function(ctx)
	{
	};
	instanceProto.drawGL = function(glw)
	{
	};
	function Cnds() {};
	Cnds.prototype.OnClicked = function ()
	{
		return true;
	};
	Cnds.prototype.IsChecked = function ()
	{
		return this.isCheckbox && this.inputElem.checked;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetText = function (text)
	{
		if (this.runtime.isDomFree)
			return;
		if (this.isCheckbox)
			this.labelText.nodeValue = text;
		else
			this.elem.value = text;
	};
	Acts.prototype.SetTooltip = function (text)
	{
		if (this.runtime.isDomFree)
			return;
		this.elem.title = text;
	};
	Acts.prototype.SetVisible = function (vis)
	{
		if (this.runtime.isDomFree)
			return;
		this.visible = (vis !== 0);
	};
	Acts.prototype.SetEnabled = function (en)
	{
		if (this.runtime.isDomFree)
			return;
		this.inputElem.disabled = (en === 0);
	};
	Acts.prototype.SetFocus = function ()
	{
		if (this.runtime.isDomFree)
			return;
		this.inputElem.focus();
	};
	Acts.prototype.SetBlur = function ()
	{
		if (this.runtime.isDomFree)
			return;
		this.inputElem.blur();
	};
	Acts.prototype.SetCSSStyle = function (p, v)
	{
		if (this.runtime.isDomFree)
			return;
		jQuery(this.elem).css(p, v);
	};
	Acts.prototype.SetChecked = function (c)
	{
		if (this.runtime.isDomFree || !this.isCheckbox)
			return;
		this.inputElem.checked = (c === 1);
	};
	Acts.prototype.ToggleChecked = function ()
	{
		if (this.runtime.isDomFree || !this.isCheckbox)
			return;
		this.inputElem.checked = !this.inputElem.checked;
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Dictionary = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Dictionary.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		this.dictionary = {};
		this.cur_key = "";		// current key in for-each loop
		this.key_count = 0;
	};
	instanceProto.saveToJSON = function ()
	{
		return this.dictionary;
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.dictionary = o;
		this.key_count = 0;
		for (var p in this.dictionary)
		{
			if (this.dictionary.hasOwnProperty(p))
				this.key_count++;
		}
	};
	function Cnds() {};
	Cnds.prototype.CompareValue = function (key_, cmp_, value_)
	{
		return cr.do_cmp(this.dictionary[key_], cmp_, value_);
	};
	Cnds.prototype.ForEachKey = function ()
	{
		var current_event = this.runtime.getCurrentEventStack().current_event;
		for (var p in this.dictionary)
		{
			if (this.dictionary.hasOwnProperty(p))
			{
				this.cur_key = p;
				this.runtime.pushCopySol(current_event.solModifiers);
				current_event.retrigger();
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		this.cur_key = "";
		return false;
	};
	Cnds.prototype.CompareCurrentValue = function (cmp_, value_)
	{
		return cr.do_cmp(this.dictionary[this.cur_key], cmp_, value_);
	};
	Cnds.prototype.HasKey = function (key_)
	{
		return this.dictionary.hasOwnProperty(key_);
	};
	Cnds.prototype.IsEmpty = function ()
	{
		return this.key_count === 0;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.AddKey = function (key_, value_)
	{
		if (!this.dictionary.hasOwnProperty(key_))
			this.key_count++;
		this.dictionary[key_] = value_;
	};
	Acts.prototype.SetKey = function (key_, value_)
	{
		if (this.dictionary.hasOwnProperty(key_))
			this.dictionary[key_] = value_;
	};
	Acts.prototype.DeleteKey = function (key_)
	{
		if (this.dictionary.hasOwnProperty(key_))
		{
			delete this.dictionary[key_];
			this.key_count--;
		}
	};
	Acts.prototype.Clear = function ()
	{
		cr.wipe(this.dictionary);		// avoid garbaging
		this.key_count = 0;
	};
	Acts.prototype.JSONLoad = function (json_)
	{
		var o;
		try {
			o = JSON.parse(json_);
		}
		catch(e) { return; }
		if (!o["c2dictionary"])		// presumably not a c2dictionary object
			return;
		this.dictionary = o["data"];
		this.key_count = 0;
		for (var p in this.dictionary)
		{
			if (this.dictionary.hasOwnProperty(p))
				this.key_count++;
		}
	};
	Acts.prototype.JSONDownload = function (filename)
	{
		var a = document.createElement("a");
		if (typeof a.download === "undefined")
		{
			var str = 'data:text/html,' + encodeURIComponent("<p><a download='data.json' href=\"data:application/json,"
				+ encodeURIComponent(JSON.stringify({
						"c2dictionary": true,
						"data": this.dictionary
					}))
				+ "\">Download link</a></p>");
			window.open(str);
		}
		else
		{
			var body = document.getElementsByTagName("body")[0];
			a.textContent = filename;
			a.href = "data:application/json," + encodeURIComponent(JSON.stringify({
						"c2dictionary": true,
						"data": this.dictionary
					}));
			a.download = filename;
			body.appendChild(a);
			var clickEvent = document.createEvent("MouseEvent");
			clickEvent.initMouseEvent("click", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
			a.dispatchEvent(clickEvent);
			body.removeChild(a);
		}
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.Get = function (ret, key_)
	{
		if (this.dictionary.hasOwnProperty(key_))
			ret.set_any(this.dictionary[key_]);
		else
			ret.set_int(0);
	};
	Exps.prototype.KeyCount = function (ret)
	{
		ret.set_int(this.key_count);
	};
	Exps.prototype.CurrentKey = function (ret)
	{
		ret.set_string(this.cur_key);
	};
	Exps.prototype.CurrentValue = function (ret)
	{
		if (this.dictionary.hasOwnProperty(this.cur_key))
			ret.set_any(this.dictionary[this.cur_key]);
		else
			ret.set_int(0);
	};
	Exps.prototype.AsJSON = function (ret)
	{
		ret.set_string(JSON.stringify({
			"c2dictionary": true,
			"data": this.dictionary
		}));
	};
	pluginProto.exps = new Exps();
}());
/*! @source http://purl.eligrey.com/github/BlobBuilder.js/blob/master/BlobBuilder.js */
var BlobBuilder=BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||(function(j){"use strict";var c=function(v){return Object.prototype.toString.call(v).match(/^\[object\s(.*)\]$/)[1]},u=function(){this.data=[]},t=function(x,v,w){this.data=x;this.size=x.length;this.type=v;this.encoding=w},k=u.prototype,s=t.prototype,n=j.FileReaderSync,a=function(v){this.code=this[this.name=v]},l=("NOT_FOUND_ERR SECURITY_ERR ABORT_ERR NOT_READABLE_ERR ENCODING_ERR NO_MODIFICATION_ALLOWED_ERR INVALID_STATE_ERR SYNTAX_ERR").split(" "),r=l.length,o=j.URL||j.webkitURL||j,p=o.createObjectURL,b=o.revokeObjectURL,e=o,i=j.btoa,f=j.atob,m=false,h=function(v){m=!v},d=j.ArrayBuffer,g=j.Uint8Array;u.fake=s.fake=true;while(r--){a.prototype[l[r]]=r+1}try{if(g){h.apply(0,new g(1))}}catch(q){}if(!o.createObjectURL){e=j.URL={}}e.createObjectURL=function(w){var x=w.type,v;if(x===null){x="application/octet-stream"}if(w instanceof t){v="data:"+x;if(w.encoding==="base64"){return v+";base64,"+w.data}else{if(w.encoding==="URI"){return v+","+decodeURIComponent(w.data)}}if(i){return v+";base64,"+i(w.data)}else{return v+","+encodeURIComponent(w.data)}}else{if(real_create_object_url){return real_create_object_url.call(o,w)}}};e.revokeObjectURL=function(v){if(v.substring(0,5)!=="data:"&&real_revoke_object_url){real_revoke_object_url.call(o,v)}};k.append=function(z){var B=this.data;if(g&&z instanceof d){if(m){B.push(String.fromCharCode.apply(String,new g(z)))}else{var A="",w=new g(z),x=0,y=w.length;for(;x<y;x++){A+=String.fromCharCode(w[x])}}}else{if(c(z)==="Blob"||c(z)==="File"){if(n){var v=new n;B.push(v.readAsBinaryString(z))}else{throw new a("NOT_READABLE_ERR")}}else{if(z instanceof t){if(z.encoding==="base64"&&f){B.push(f(z.data))}else{if(z.encoding==="URI"){B.push(decodeURIComponent(z.data))}else{if(z.encoding==="raw"){B.push(z.data)}}}}else{if(typeof z!=="string"){z+=""}B.push(unescape(encodeURIComponent(z)))}}}};k.getBlob=function(v){if(!arguments.length){v=null}return new t(this.data.join(""),v,"raw")};k.toString=function(){return"[object BlobBuilder]"};s.slice=function(y,v,x){var w=arguments.length;if(w<3){x=null}return new t(this.data.slice(y,w>1?v:this.data.length),x,this.encoding)};s.toString=function(){return"[object Blob]"};return u}(self));
;
;
cr.plugins_.FileSaver = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.FileSaver.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		this.bb = new BlobBuilder;
	};
	instanceProto.draw = function(ctx)
	{
	};
	instanceProto.drawGL = function (glw)
	{
	};
	pluginProto.cnds = {};
	var cnds = pluginProto.cnds;
	cnds.MyCondition = function (myparam)
	{
		return myparam >= 0;
	};
	pluginProto.acts = {};
	var acts = pluginProto.acts;
	/*acts.MyAction = function (myparam)
	{
		alert(myparam);
	};*/
	acts.appendText = function (content)
	{
		this.bb.append(content);
	};
	acts.saveText = function (filename)
	{
		saveAs(this.bb.getBlob("text/plain;charset=utf-8"), filename);
	};
	acts.clearFile = function(){
		this.bb = '';
		this.bb = new BlobBuilder;
	};
	acts.appendHTML = function(content)
	{
		this.bb.append(content);
	};
	acts.saveHTML = function (filename)
	{
		var blob = this.bb.getBlob("application/xhtml+xml;charset=" + document.characterSet);
		saveAs(blob, filename);
	};
	pluginProto.exps = {};
	var exps = pluginProto.exps;
	exps.MyExpression = function (ret)	// 'ret' must always be the first parameter - always return the expression's result through it!
	{
		ret.set_int(1337);				// return our value
	};
}());
;
;
cr.plugins_.Keyboard = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Keyboard.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		this.keyMap = new Array(256);	// stores key up/down state
		this.usedKeys = new Array(256);
		this.triggerKey = 0;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		var self = this;
		if (!this.runtime.isDomFree)
		{
			jQuery(document).keydown(
				function(info) {
					self.onKeyDown(info);
				}
			);
			jQuery(document).keyup(
				function(info) {
					self.onKeyUp(info);
				}
			);
		}
	};
	var keysToBlockWhenFramed = [32, 33, 34, 35, 36, 37, 38, 39, 40, 44];
	instanceProto.onKeyDown = function (info)
	{
		var alreadyPreventedDefault = false;
		if (window != window.top && keysToBlockWhenFramed.indexOf(info.which) > -1)
		{
			info.preventDefault();
			alreadyPreventedDefault = true;
			info.stopPropagation();
		}
		if (this.keyMap[info.which])
		{
			if (this.usedKeys[info.which] && !alreadyPreventedDefault)
				info.preventDefault();
			return;
		}
		this.keyMap[info.which] = true;
		this.triggerKey = info.which;
		this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnAnyKey, this);
		var eventRan = this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnKey, this);
		var eventRan2 = this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnKeyCode, this);
		if (eventRan || eventRan2)
		{
			this.usedKeys[info.which] = true;
			if (!alreadyPreventedDefault)
				info.preventDefault();
		}
	};
	instanceProto.onKeyUp = function (info)
	{
		this.keyMap[info.which] = false;
		this.triggerKey = info.which;
		this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnAnyKeyReleased, this);
		var eventRan = this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnKeyReleased, this);
		var eventRan2 = this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnKeyCodeReleased, this);
		if (eventRan || eventRan2 || this.usedKeys[info.which])
		{
			this.usedKeys[info.which] = true;
			info.preventDefault();
		}
	};
	instanceProto.saveToJSON = function ()
	{
		return { "triggerKey": this.triggerKey };
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.triggerKey = o["triggerKey"];
	};
	function Cnds() {};
	Cnds.prototype.IsKeyDown = function(key)
	{
		return this.keyMap[key];
	};
	Cnds.prototype.OnKey = function(key)
	{
		return (key === this.triggerKey);
	};
	Cnds.prototype.OnAnyKey = function(key)
	{
		return true;
	};
	Cnds.prototype.OnAnyKeyReleased = function(key)
	{
		return true;
	};
	Cnds.prototype.OnKeyReleased = function(key)
	{
		return (key === this.triggerKey);
	};
	Cnds.prototype.IsKeyCodeDown = function(key)
	{
		key = Math.floor(key);
		if (key < 0 || key >= this.keyMap.length)
			return false;
		return this.keyMap[key];
	};
	Cnds.prototype.OnKeyCode = function(key)
	{
		return (key === this.triggerKey);
	};
	Cnds.prototype.OnKeyCodeReleased = function(key)
	{
		return (key === this.triggerKey);
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.LastKeyCode = function (ret)
	{
		ret.set_int(this.triggerKey);
	};
	function fixedStringFromCharCode(kc)
	{
		kc = Math.floor(kc);
		switch (kc) {
		case 8:		return "backspace";
		case 9:		return "tab";
		case 13:	return "enter";
		case 16:	return "shift";
		case 17:	return "control";
		case 18:	return "alt";
		case 19:	return "pause";
		case 20:	return "capslock";
		case 27:	return "esc";
		case 33:	return "pageup";
		case 34:	return "pagedown";
		case 35:	return "end";
		case 36:	return "home";
		case 37:	return "←";
		case 38:	return "↑";
		case 39:	return "→";
		case 40:	return "↓";
		case 45:	return "insert";
		case 46:	return "del";
		case 91:	return "left window key";
		case 92:	return "right window key";
		case 93:	return "select";
		case 96:	return "numpad 0";
		case 97:	return "numpad 1";
		case 98:	return "numpad 2";
		case 99:	return "numpad 3";
		case 100:	return "numpad 4";
		case 101:	return "numpad 5";
		case 102:	return "numpad 6";
		case 103:	return "numpad 7";
		case 104:	return "numpad 8";
		case 105:	return "numpad 9";
		case 106:	return "numpad *";
		case 107:	return "numpad +";
		case 109:	return "numpad -";
		case 110:	return "numpad .";
		case 111:	return "numpad /";
		case 112:	return "F1";
		case 113:	return "F2";
		case 114:	return "F3";
		case 115:	return "F4";
		case 116:	return "F5";
		case 117:	return "F6";
		case 118:	return "F7";
		case 119:	return "F8";
		case 120:	return "F9";
		case 121:	return "F10";
		case 122:	return "F11";
		case 123:	return "F12";
		case 144:	return "numlock";
		case 145:	return "scroll lock";
		case 186:	return ";";
		case 187:	return "=";
		case 188:	return ",";
		case 189:	return "-";
		case 190:	return ".";
		case 191:	return "/";
		case 192:	return "'";
		case 219:	return "[";
		case 220:	return "\\";
		case 221:	return "]";
		case 222:	return "#";
		case 223:	return "`";
		default:	return String.fromCharCode(kc);
		}
	};
	Exps.prototype.StringFromKeyCode = function (ret, kc)
	{
		ret.set_string(fixedStringFromCharCode(kc));
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.List = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.List.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		if (this.runtime.isDomFree)
		{
			cr.logexport("[Construct 2] List plugin not supported on this platform - the object will not be created");
			return;
		}
		this.elem = document.createElement("select");
		this.elem.id = this.properties[7];
		jQuery(this.elem).appendTo(this.runtime.canvasdiv ? this.runtime.canvasdiv : "body");
		this.elem.title = this.properties[1];
		this.elem.disabled = (this.properties[3] === 0);
		if (this.properties[4] === 0)
			this.elem.size = 2;
		this.elem["multiple"] = (this.properties[5] !== 0);
		this.autoFontSize = (this.properties[6] !== 0);
		if (this.properties[2] === 0)
		{
			jQuery(this.elem).hide();
			this.visible = false;
		}
		var itemsArr = this.properties[0].split(";");
		var i, len, o;
		for (i = 0, len = itemsArr.length; i < len; i++)
		{
			o = document.createElement("option");
			o.text = itemsArr[i];
			this.elem.add(o);
		}
		var self = this;
		this.elem.onchange = function() {
				self.runtime.trigger(cr.plugins_.List.prototype.cnds.OnSelectionChanged, self);
			};
		this.elem.onclick = function(e) {
				e.stopPropagation();
				self.runtime.trigger(cr.plugins_.List.prototype.cnds.OnClicked, self);
			};
		this.elem.ondblclick = function(e) {
				e.stopPropagation();
				self.runtime.trigger(cr.plugins_.List.prototype.cnds.OnDoubleClicked, self);
			};
		this.elem.addEventListener("touchstart", function (e) {
			e.stopPropagation();
		}, false);
		this.elem.addEventListener("touchmove", function (e) {
			e.stopPropagation();
		}, false);
		this.elem.addEventListener("touchend", function (e) {
			e.stopPropagation();
		}, false);
		jQuery(this.elem).mousedown(function (e) {
			e.stopPropagation();
		});
		jQuery(this.elem).mouseup(function (e) {
			e.stopPropagation();
		});
		this.lastLeft = 0;
		this.lastTop = 0;
		this.lastRight = 0;
		this.lastBottom = 0;
		this.lastWinWidth = 0;
		this.lastWinHeight = 0;
		this.isVisible = true;
		this.updatePosition(true);
		this.runtime.tickMe(this);
	};
	instanceProto.saveToJSON = function ()
	{
		var o = {
			"tooltip": this.elem.title,
			"disabled": !!this.elem.disabled,
			"items": [],
			"sel": []
		};
		var i, len;
		var itemsarr = o["items"];
		for (i = 0, len = this.elem.length; i < len; i++)
		{
			itemsarr.push(this.elem.options[i].text);
		}
		var selarr = o["sel"];
		if (this.elem["multiple"])
		{
			for (i = 0, len = this.elem.length; i < len; i++)
			{
				if (this.elem.options[i].selected)
					selarr.push(i);
			}
		}
		else
		{
			selarr.push(this.elem.selectedIndex);
		}
		return o;
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.elem.title = o["tooltip"];
		this.elem.disabled = o["disabled"];
		var itemsarr = o["items"];
		while (this.elem.length)
			this.elem.remove(this.elem.length - 1);
		var i, len, opt;
		for (i = 0, len = itemsarr.length; i < len; i++)
		{
			opt = document.createElement("option");
			opt.text = itemsarr[i];
			this.elem.add(opt);
		}
		var selarr = o["sel"];
		if (this.elem["multiple"])
		{
			for (i = 0, len = selarr.length; i < len; i++)
			{
				if (selarr[i] < this.elem.length)
					this.elem.options[selarr[i]].selected = true;
			}
		}
		else if (selarr.length >= 1)
		{
			this.elem.selectedIndex = selarr[0];
		}
	};
	instanceProto.onDestroy = function ()
	{
		if (this.runtime.isDomFree)
				return;
		jQuery(this.elem).remove();
		this.elem = null;
	};
	instanceProto.tick = function ()
	{
		this.updatePosition();
	};
	instanceProto.updatePosition = function (first)
	{
		if (this.runtime.isDomFree)
			return;
		var left = this.layer.layerToCanvas(this.x, this.y, true);
		var top = this.layer.layerToCanvas(this.x, this.y, false);
		var right = this.layer.layerToCanvas(this.x + this.width, this.y + this.height, true);
		var bottom = this.layer.layerToCanvas(this.x + this.width, this.y + this.height, false);
		if (!this.visible || !this.layer.visible || right <= 0 || bottom <= 0 || left >= this.runtime.width || top >= this.runtime.height)
		{
			jQuery(this.elem).hide();
			this.isVisible = false;
			return;
		}
		if (left < 1)
			left = 1;
		if (top < 1)
			top = 1;
		if (right >= this.runtime.width)
			right = this.runtime.width - 1;
		if (bottom >= this.runtime.height)
			bottom = this.runtime.height - 1;
		var curWinWidth = jQuery(window).width();
		var curWinHeight = jQuery(window).height();
		if (!first && this.lastLeft === left && this.lastTop === top && this.lastRight === right && this.lastBottom === bottom && this.lastWinWidth === curWinWidth && this.lastWinHeight === curWinHeight)
		{
			if (!this.isVisible)
			{
				jQuery(this.elem).show();
				this.isVisible = true;
			}
			return;
		}
		this.lastLeft = left;
		this.lastTop = top;
		this.lastRight = right;
		this.lastBottom = bottom;
		this.lastWinWidth = curWinWidth;
		this.lastWinHeight = curWinHeight;
		jQuery(this.elem).show();
		this.isVisible = true;
		var offx = Math.round(left) + jQuery(this.runtime.canvas).offset().left;
		var offy = Math.round(top) + jQuery(this.runtime.canvas).offset().top;
		jQuery(this.elem).css("position", "absolute");
		jQuery(this.elem).offset({left: offx, top: offy});
		jQuery(this.elem).width(Math.round(right - left));
		jQuery(this.elem).height(Math.round(bottom - top));
		if (this.autoFontSize)
			jQuery(this.elem).css("font-size", ((this.layer.getScale() / this.runtime.devicePixelRatio) - 0.2) + "em");
	};
	instanceProto.draw = function(ctx)
	{
	};
	instanceProto.drawGL = function(glw)
	{
	};
	function Cnds() {};
	Cnds.prototype.CompareSelection = function (cmp_, x_)
	{
		return cr.do_cmp(this.elem.selectedIndex, cmp_, x_);
	};
	Cnds.prototype.OnSelectionChanged = function ()
	{
		return true;
	};
	Cnds.prototype.OnClicked = function ()
	{
		return true;
	};
	Cnds.prototype.OnDoubleClicked = function ()
	{
		return true;
	};
	Cnds.prototype.CompareSelectedText = function (x_, case_)
	{
		var selected_text = "";
		var i = this.elem.selectedIndex;
		if (i < 0 || i >= this.elem.length)
			return false;
		selected_text = this.elem.options[i].text;
		if (case_)
			return selected_text == x_;
		else
			return selected_text.toLowerCase() == x_.toLowerCase();
	};
	Cnds.prototype.CompareTextAt = function (i_, x_, case_)
	{
		var text = "";
		var i = Math.floor(i_);
		if (i < 0 || i >= this.elem.length)
			return false;
		text = this.elem.options[i].text;
		if (case_)
			return text == x_;
		else
			return text.toLowerCase() == x_.toLowerCase();
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Select = function (i)
	{
		if (this.runtime.isDomFree)
			return;
		this.elem.selectedIndex = i;
	};
	Acts.prototype.SetTooltip = function (text)
	{
		if (this.runtime.isDomFree)
			return;
		this.elem.title = text;
	};
	Acts.prototype.SetVisible = function (vis)
	{
		if (this.runtime.isDomFree)
			return;
		this.visible = (vis !== 0);
	};
	Acts.prototype.SetEnabled = function (en)
	{
		if (this.runtime.isDomFree)
			return;
		this.elem.disabled = (en === 0);
	};
	Acts.prototype.SetFocus = function ()
	{
		if (this.runtime.isDomFree)
			return;
		this.elem.focus();
	};
	Acts.prototype.SetBlur = function ()
	{
		if (this.runtime.isDomFree)
			return;
		this.elem.blur();
	};
	Acts.prototype.SetCSSStyle = function (p, v)
	{
		if (this.runtime.isDomFree)
			return;
		jQuery(this.elem).css(p, v);
	};
	Acts.prototype.AddItem = function (text_)
	{
		if (this.runtime.isDomFree)
			return;
		var o = document.createElement("option");
		o.text = text_;
		this.elem.add(o);
	};
	Acts.prototype.AddItemAt = function (index_, text_)
	{
		if (this.runtime.isDomFree)
			return;
		index_ = Math.floor(index_);
		if (index_ < 0)
			index_ = 0;
		var o = document.createElement("option");
		o.text = text_;
		if (index_ >= this.elem.length)
			this.elem.add(o);
		else
		{
			this.elem.add(o, this.elem.options[index_]);
		}
	};
	Acts.prototype.Remove = function (index_)
	{
		if (this.runtime.isDomFree)
			return;
		index_ = Math.floor(index_);
		this.elem.remove(index_);
	};
	Acts.prototype.SetItemText = function (index_, text_)
	{
		if (this.runtime.isDomFree)
			return;
		index_ = Math.floor(index_);
		if (index_ < 0 || index_ >= this.elem.length)
			return;
		this.elem.options[index_].text = text_;
	};
	Acts.prototype.Clear = function ()
	{
		if (this.runtime.isDomFree)
			return;
		while (this.elem.length)
			this.elem.remove(0);
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.ItemCount = function (ret)
	{
		if (this.runtime.isDomFree)
		{
			ret.set_int(0);
			return;
		}
		ret.set_int(this.elem.length);
	};
	Exps.prototype.ItemTextAt = function (ret, i)
	{
		if (this.runtime.isDomFree)
		{
			ret.set_string("");
			return;
		}
		i = Math.floor(i);
		if (i < 0 || i >= this.elem.length)
		{
			ret.set_string("");
			return;
		}
		ret.set_string(this.elem.options[i].text);
	};
	Exps.prototype.SelectedIndex = function (ret)
	{
		if (this.runtime.isDomFree)
		{
			ret.set_int(0);
			return;
		}
		ret.set_int(this.elem.selectedIndex);
	};
	Exps.prototype.SelectedText = function (ret)
	{
		if (this.runtime.isDomFree)
		{
			ret.set_string("");
			return;
		}
		var i = this.elem.selectedIndex;
		if (i < 0 || i >= this.elem.length)
		{
			ret.set_string("");
			return;
		}
		ret.set_string(this.elem.options[i].text);
	};
	Exps.prototype.SelectedCount = function (ret)
	{
		if (this.runtime.isDomFree)
		{
			ret.set_int(0);
			return;
		}
		var i, len, count = 0;
		for (i = 0, len = this.elem.length; i < len; i++)
		{
			if (this.elem.options[i].selected)
				count++;
		}
		ret.set_int(count);
	};
	Exps.prototype.SelectedIndexAt = function (ret, index_)
	{
		if (this.runtime.isDomFree)
		{
			ret.set_int(0);
			return;
		}
		index_ = Math.floor(index_);
		var i, len, count = 0, result = 0;
		for (i = 0, len = this.elem.length; i < len; i++)
		{
			if (this.elem.options[i].selected)
			{
				if (count === index_)
				{
					result = i;
					break;
				}
				count++;
			}
		}
		ret.set_int(result);
	};
	Exps.prototype.SelectedTextAt = function (ret, index_)
	{
		if (this.runtime.isDomFree)
		{
			ret.set_string("");
			return;
		}
		index_ = Math.floor(index_);
		var i, len, count = 0, result = "";
		for (i = 0, len = this.elem.length; i < len; i++)
		{
			if (this.elem.options[i].selected)
			{
				if (count === index_)
				{
					result = this.elem.options[i].text;
					break;
				}
				count++;
			}
		}
		ret.set_string(result);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Mouse = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Mouse.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		this.buttonMap = new Array(4);		// mouse down states
		this.mouseXcanvas = 0;				// mouse position relative to canvas
		this.mouseYcanvas = 0;
		this.triggerButton = 0;
		this.triggerType = 0;
		this.triggerDir = 0;
		this.handled = false;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		var self = this;
		if (!this.runtime.isDomFree)
		{
			jQuery(document).mousemove(
				function(info) {
					self.onMouseMove(info);
				}
			);
			jQuery(document).mousedown(
				function(info) {
					self.onMouseDown(info);
				}
			);
			jQuery(document).mouseup(
				function(info) {
					self.onMouseUp(info);
				}
			);
			jQuery(document).dblclick(
				function(info) {
					self.onDoubleClick(info);
				}
			);
			var wheelevent = function(info) {
								self.onWheel(info);
							};
			document.addEventListener("mousewheel", wheelevent, false);
			document.addEventListener("DOMMouseScroll", wheelevent, false);
		}
	};
	var dummyoffset = {left: 0, top: 0};
	instanceProto.onMouseMove = function(info)
	{
		var offset = this.runtime.isDomFree ? dummyoffset : jQuery(this.runtime.canvas).offset();
		this.mouseXcanvas = info.pageX - offset.left;
		this.mouseYcanvas = info.pageY - offset.top;
	};
	instanceProto.mouseInGame = function ()
	{
		if (this.runtime.fullscreen_mode > 0)
			return true;
		return this.mouseXcanvas >= 0 && this.mouseYcanvas >= 0
		    && this.mouseXcanvas < this.runtime.width && this.mouseYcanvas < this.runtime.height;
	};
	instanceProto.onMouseDown = function(info)
	{
		if (!this.mouseInGame())
			return;
		if (this.runtime.had_a_click)
			info.preventDefault();
		this.buttonMap[info.which] = true;
		this.runtime.trigger(cr.plugins_.Mouse.prototype.cnds.OnAnyClick, this);
		this.triggerButton = info.which - 1;	// 1-based
		this.triggerType = 0;					// single click
		this.runtime.trigger(cr.plugins_.Mouse.prototype.cnds.OnClick, this);
		this.runtime.trigger(cr.plugins_.Mouse.prototype.cnds.OnObjectClicked, this);
	};
	instanceProto.onMouseUp = function(info)
	{
		if (!this.buttonMap[info.which])
			return;
		if (this.runtime.had_a_click)
			info.preventDefault();
		this.runtime.had_a_click = true;
		this.buttonMap[info.which] = false;
		this.triggerButton = info.which - 1;	// 1-based
		this.runtime.trigger(cr.plugins_.Mouse.prototype.cnds.OnRelease, this);
	};
	instanceProto.onDoubleClick = function(info)
	{
		if (!this.mouseInGame())
			return;
		info.preventDefault();
		this.triggerButton = info.which - 1;	// 1-based
		this.triggerType = 1;					// double click
		this.runtime.trigger(cr.plugins_.Mouse.prototype.cnds.OnClick, this);
		this.runtime.trigger(cr.plugins_.Mouse.prototype.cnds.OnObjectClicked, this);
	};
	instanceProto.onWheel = function (info)
	{
		var delta = info.wheelDelta ? info.wheelDelta : info.detail ? -info.detail : 0;
		this.triggerDir = (delta < 0 ? 0 : 1);
		this.handled = false;
		this.runtime.trigger(cr.plugins_.Mouse.prototype.cnds.OnWheel, this);
		if (this.handled)
			info.preventDefault();
	};
	function Cnds() {};
	Cnds.prototype.OnClick = function (button, type)
	{
		return button === this.triggerButton && type === this.triggerType;
	};
	Cnds.prototype.OnAnyClick = function ()
	{
		return true;
	};
	Cnds.prototype.IsButtonDown = function (button)
	{
		return this.buttonMap[button + 1];	// jQuery uses 1-based buttons for some reason
	};
	Cnds.prototype.OnRelease = function (button)
	{
		return button === this.triggerButton;
	};
	Cnds.prototype.IsOverObject = function (obj)
	{
		var cnd = this.runtime.getCurrentCondition();
		if (cr.is_undefined(cnd.extra["mouseOverInverted"]))
		{
			cnd.extra["mouseOverInverted"] = cnd.inverted;
			cnd.inverted = false;
		}
		var mx = this.mouseXcanvas;
		var my = this.mouseYcanvas;
		return this.runtime.testAndSelectCanvasPointOverlap(obj, mx, my, cnd.extra["mouseOverInverted"]);
	};
	Cnds.prototype.OnObjectClicked = function (button, type, obj)
	{
		if (button !== this.triggerButton || type !== this.triggerType)
			return false;	// wrong click type
		return this.runtime.testAndSelectCanvasPointOverlap(obj, this.mouseXcanvas, this.mouseYcanvas, false);
	};
	Cnds.prototype.OnWheel = function (dir)
	{
		this.handled = true;
		return dir === this.triggerDir;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetCursor = function (c)
	{
		var cursor_style = ["auto", "pointer", "text", "crosshair", "move", "help", "wait", "none"][c];
		if (this.runtime.canvas && this.runtime.canvas.style)
			this.runtime.canvas.style.cursor = cursor_style;
	};
	Acts.prototype.SetCursorSprite = function (obj)
	{
		if (this.runtime.isDomFree || this.runtime.isMobile || !obj)
			return;
		var inst = obj.getFirstPicked();
		if (!inst || !inst.curFrame)
			return;
		var frame = inst.curFrame;
		var datauri = frame.getDataUri();
		var cursor_style = "url(" + datauri + ") " + Math.round(frame.hotspotX * frame.width) + " " + Math.round(frame.hotspotY * frame.height) + ", auto";
		jQuery(this.runtime.canvas).css("cursor", cursor_style);
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.X = function (ret, layerparam)
	{
		var layer, oldScale, oldZoomRate, oldParallaxX, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxX = layer.parallaxX;
			oldAngle = layer.angle;
			layer.scale = this.runtime.running_layout.scale;
			layer.zoomRate = 1.0;
			layer.parallaxX = 1.0;
			layer.angle = this.runtime.running_layout.angle;
			ret.set_float(layer.canvasToLayer(this.mouseXcanvas, this.mouseYcanvas, true));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxX = oldParallaxX;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(this.mouseXcanvas, this.mouseYcanvas, true));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.Y = function (ret, layerparam)
	{
		var layer, oldScale, oldZoomRate, oldParallaxY, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxY = layer.parallaxY;
			oldAngle = layer.angle;
			layer.scale = this.runtime.running_layout.scale;
			layer.zoomRate = 1.0;
			layer.parallaxY = 1.0;
			layer.angle = this.runtime.running_layout.angle;
			ret.set_float(layer.canvasToLayer(this.mouseXcanvas, this.mouseYcanvas, false));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxY = oldParallaxY;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(this.mouseXcanvas, this.mouseYcanvas, false));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.AbsoluteX = function (ret)
	{
		ret.set_float(this.mouseXcanvas);
	};
	Exps.prototype.AbsoluteY = function (ret)
	{
		ret.set_float(this.mouseYcanvas);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Sprite = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Sprite.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	function frame_getDataUri()
	{
		if (this.datauri.length === 0)
		{
			var tmpcanvas = document.createElement("canvas");
			tmpcanvas.width = this.width;
			tmpcanvas.height = this.height;
			var tmpctx = tmpcanvas.getContext("2d");
			if (this.spritesheeted)
			{
				tmpctx.drawImage(this.texture_img, this.offx, this.offy, this.width, this.height,
										 0, 0, this.width, this.height);
			}
			else
			{
				tmpctx.drawImage(this.texture_img, 0, 0, this.width, this.height);
			}
			this.datauri = tmpcanvas.toDataURL("image/png");
		}
		return this.datauri;
	};
	typeProto.onCreate = function()
	{
		if (this.is_family)
			return;
		var i, leni, j, lenj;
		var anim, frame, animobj, frameobj, wt, uv;
		this.all_frames = [];
		this.has_loaded_textures = false;
		for (i = 0, leni = this.animations.length; i < leni; i++)
		{
			anim = this.animations[i];
			animobj = {};
			animobj.name = anim[0];
			animobj.speed = anim[1];
			animobj.loop = anim[2];
			animobj.repeatcount = anim[3];
			animobj.repeatto = anim[4];
			animobj.pingpong = anim[5];
			animobj.sid = anim[6];
			animobj.frames = [];
			for (j = 0, lenj = anim[7].length; j < lenj; j++)
			{
				frame = anim[7][j];
				frameobj = {};
				frameobj.texture_file = frame[0];
				frameobj.texture_filesize = frame[1];
				frameobj.offx = frame[2];
				frameobj.offy = frame[3];
				frameobj.width = frame[4];
				frameobj.height = frame[5];
				frameobj.duration = frame[6];
				frameobj.hotspotX = frame[7];
				frameobj.hotspotY = frame[8];
				frameobj.image_points = frame[9];
				frameobj.poly_pts = frame[10];
				frameobj.pixelformat = frame[11];
				frameobj.spritesheeted = (frameobj.width !== 0);
				frameobj.datauri = "";		// generated on demand and cached
				frameobj.getDataUri = frame_getDataUri;
				uv = {};
				uv.left = 0;
				uv.top = 0;
				uv.right = 1;
				uv.bottom = 1;
				frameobj.sheetTex = uv;
				frameobj.webGL_texture = null;
				wt = this.runtime.findWaitingTexture(frame[0]);
				if (wt)
				{
					frameobj.texture_img = wt;
				}
				else
				{
					frameobj.texture_img = new Image();
					frameobj.texture_img.src = frame[0];
					frameobj.texture_img.cr_src = frame[0];
					frameobj.texture_img.cr_filesize = frame[1];
					frameobj.texture_img.c2webGL_texture = null;
					this.runtime.wait_for_textures.push(frameobj.texture_img);
				}
				cr.seal(frameobj);
				animobj.frames.push(frameobj);
				this.all_frames.push(frameobj);
			}
			cr.seal(animobj);
			this.animations[i] = animobj;		// swap array data for object
		}
	};
	typeProto.updateAllCurrentTexture = function ()
	{
		var i, len, inst;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
			inst = this.instances[i];
			inst.curWebGLTexture = inst.curFrame.webGL_texture;
		}
	};
	typeProto.onLostWebGLContext = function ()
	{
		if (this.is_family)
			return;
		var i, len, frame;
		for (i = 0, len = this.all_frames.length; i < len; ++i)
		{
			frame = this.all_frames[i];
			frame.texture_img.c2webGL_texture = null;
			frame.webGL_texture = null;
		}
	};
	typeProto.onRestoreWebGLContext = function ()
	{
		if (this.is_family || !this.instances.length)
			return;
		var i, len, frame;
		for (i = 0, len = this.all_frames.length; i < len; ++i)
		{
			frame = this.all_frames[i];
			frame.webGL_texture = this.runtime.glwrap.loadTexture(frame.texture_img, false, this.runtime.linearSampling, frame.pixelformat);
		}
		this.updateAllCurrentTexture();
	};
	typeProto.loadTextures = function ()
	{
		if (this.is_family || this.has_loaded_textures || !this.runtime.glwrap)
			return;
		var i, len, frame;
		for (i = 0, len = this.all_frames.length; i < len; ++i)
		{
			frame = this.all_frames[i];
			frame.webGL_texture = this.runtime.glwrap.loadTexture(frame.texture_img, false, this.runtime.linearSampling, frame.pixelformat);
		}
		this.has_loaded_textures = true;
	};
	typeProto.unloadTextures = function ()
	{
		if (this.is_family || this.instances.length || !this.has_loaded_textures)
			return;
		var i, len, frame;
		for (i = 0, len = this.all_frames.length; i < len; ++i)
		{
			frame = this.all_frames[i];
			this.runtime.glwrap.deleteTexture(frame.webGL_texture);
		}
		this.has_loaded_textures = false;
	};
	var already_drawn_images = [];
	typeProto.preloadCanvas2D = function (ctx)
	{
		var i, len, frameimg;
		already_drawn_images.length = 0;
		for (i = 0, len = this.all_frames.length; i < len; ++i)
		{
			frameimg = this.all_frames[i].texture_img;
			if (already_drawn_images.indexOf(frameimg) !== -1)
					continue;
			ctx.drawImage(frameimg, 0, 0);
			already_drawn_images.push(frameimg);
		}
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		var poly_pts = this.type.animations[0].frames[0].poly_pts;
		if (this.recycled)
			this.collision_poly.set_pts(poly_pts);
		else
			this.collision_poly = new cr.CollisionPoly(poly_pts);
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		this.visible = (this.properties[0] === 0);	// 0=visible, 1=invisible
		this.isTicking = false;
		this.inAnimTrigger = false;
		this.collisionsEnabled = (this.properties[3] !== 0);
		if (!(this.type.animations.length === 1 && this.type.animations[0].frames.length === 1) && this.type.animations[0].speed !== 0)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
		this.cur_animation = this.getAnimationByName(this.properties[1]) || this.type.animations[0];
		this.cur_frame = this.properties[2];
		if (this.cur_frame < 0)
			this.cur_frame = 0;
		if (this.cur_frame >= this.cur_animation.frames.length)
			this.cur_frame = this.cur_animation.frames.length - 1;
		var curanimframe = this.cur_animation.frames[this.cur_frame];
		this.collision_poly.set_pts(curanimframe.poly_pts);
		this.hotspotX = curanimframe.hotspotX;
		this.hotspotY = curanimframe.hotspotY;
		this.cur_anim_speed = this.cur_animation.speed;
		this.frameStart = this.getNowTime();
		this.animPlaying = true;
		this.animRepeats = 0;
		this.animForwards = true;
		this.animTriggerName = "";
		this.changeAnimName = "";
		this.changeAnimFrom = 0;
		this.changeAnimFrame = -1;
		this.type.loadTextures();
		var i, leni, j, lenj;
		var anim, frame, uv, maintex;
		for (i = 0, leni = this.type.animations.length; i < leni; i++)
		{
			anim = this.type.animations[i];
			for (j = 0, lenj = anim.frames.length; j < lenj; j++)
			{
				frame = anim.frames[j];
				if (frame.width === 0)
				{
					frame.width = frame.texture_img.width;
					frame.height = frame.texture_img.height;
				}
				if (frame.spritesheeted)
				{
					maintex = frame.texture_img;
					uv = frame.sheetTex;
					uv.left = frame.offx / maintex.width;
					uv.top = frame.offy / maintex.height;
					uv.right = (frame.offx + frame.width) / maintex.width;
					uv.bottom = (frame.offy + frame.height) / maintex.height;
					if (frame.offx === 0 && frame.offy === 0 && frame.width === maintex.width && frame.height === maintex.height)
					{
						frame.spritesheeted = false;
					}
				}
			}
		}
		this.curFrame = this.cur_animation.frames[this.cur_frame];
		this.curWebGLTexture = this.curFrame.webGL_texture;
	};
	instanceProto.saveToJSON = function ()
	{
		var o = {
			"a": this.cur_animation.sid,
			"f": this.cur_frame,
			"cas": this.cur_anim_speed,
			"fs": this.frameStart,
			"ar": this.animRepeats
		};
		if (!this.animPlaying)
			o["ap"] = this.animPlaying;
		if (!this.animForwards)
			o["af"] = this.animForwards;
		return o;
	};
	instanceProto.loadFromJSON = function (o)
	{
		var anim = this.getAnimationBySid(o["a"]);
		if (anim)
			this.cur_animation = anim;
		this.cur_frame = o["f"];
		if (this.cur_frame < 0)
			this.cur_frame = 0;
		if (this.cur_frame >= this.cur_animation.frames.length)
			this.cur_frame = this.cur_animation.frames.length - 1;
		this.cur_anim_speed = o["cas"];
		this.frameStart = o["fs"];
		this.animRepeats = o["ar"];
		this.animPlaying = o.hasOwnProperty("ap") ? o["ap"] : true;
		this.animForwards = o.hasOwnProperty("af") ? o["af"] : true;
		this.curFrame = this.cur_animation.frames[this.cur_frame];
		this.curWebGLTexture = this.curFrame.webGL_texture;
		this.collision_poly.set_pts(this.curFrame.poly_pts);
		this.hotspotX = this.curFrame.hotspotX;
		this.hotspotY = this.curFrame.hotspotY;
	};
	instanceProto.animationFinish = function (reverse)
	{
		this.cur_frame = reverse ? 0 : this.cur_animation.frames.length - 1;
		this.animPlaying = false;
		this.animTriggerName = this.cur_animation.name;
		this.inAnimTrigger = true;
		this.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished, this);
		this.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnAnimFinished, this);
		this.inAnimTrigger = false;
		this.animRepeats = 0;
	};
	instanceProto.getNowTime = function()
	{
		return (Date.now() - this.runtime.start_time) / 1000.0;
	};
	instanceProto.tick = function()
	{
		if (this.changeAnimName.length)
			this.doChangeAnim();
		if (this.changeAnimFrame >= 0)
			this.doChangeAnimFrame();
		var now = this.getNowTime();
		var cur_animation = this.cur_animation;
		var prev_frame = cur_animation.frames[this.cur_frame];
		var next_frame;
		var cur_frame_time = prev_frame.duration / this.cur_anim_speed;
		var cur_timescale = this.runtime.timescale;
		if (this.my_timescale !== -1.0)
			cur_timescale = this.my_timescale;
		cur_frame_time /= (cur_timescale === 0 ? 0.000000001 : cur_timescale);
		if (this.animPlaying && now >= this.frameStart + cur_frame_time)
		{
			if (this.animForwards)
			{
				this.cur_frame++;
			}
			else
			{
				this.cur_frame--;
			}
			this.frameStart += cur_frame_time;
			if (this.cur_frame >= cur_animation.frames.length)
			{
				if (cur_animation.pingpong)
				{
					this.animForwards = false;
					this.cur_frame = cur_animation.frames.length - 2;
				}
				else if (cur_animation.loop)
				{
					this.cur_frame = cur_animation.repeatto;
				}
				else
				{
					this.animRepeats++;
					if (this.animRepeats >= cur_animation.repeatcount)
					{
						this.animationFinish(false);
					}
					else
					{
						this.cur_frame = cur_animation.repeatto;
					}
				}
			}
			if (this.cur_frame < 0)
			{
				if (cur_animation.pingpong)
				{
					this.cur_frame = 1;
					this.animForwards = true;
					if (!cur_animation.loop)
					{
						this.animRepeats++;
						if (this.animRepeats >= cur_animation.repeatcount)
						{
							this.animationFinish(true);
						}
					}
				}
				else
				{
					if (cur_animation.loop)
					{
						this.cur_frame = cur_animation.repeatto;
					}
					else
					{
						this.animRepeats++;
						if (this.animRepeats >= cur_animation.repeatcount)
						{
							this.animationFinish(true);
						}
						else
						{
							this.cur_frame = cur_animation.repeatto;
						}
					}
				}
			}
			if (this.cur_frame < 0)
				this.cur_frame = 0;
			else if (this.cur_frame >= cur_animation.frames.length)
				this.cur_frame = cur_animation.frames.length - 1;
			if (now > this.frameStart + ((cur_animation.frames[this.cur_frame].duration / this.cur_anim_speed) / (cur_timescale === 0 ? 0.000000001 : cur_timescale)))
			{
				this.frameStart = now;
			}
			next_frame = cur_animation.frames[this.cur_frame];
			this.OnFrameChanged(prev_frame, next_frame);
			this.runtime.redraw = true;
		}
	};
	instanceProto.getAnimationByName = function (name_)
	{
		var i, len, a, lowername = name_.toLowerCase();
		for (i = 0, len = this.type.animations.length; i < len; i++)
		{
			a = this.type.animations[i];
			if (a.name.toLowerCase() === lowername)
				return a;
		}
		return null;
	};
	instanceProto.getAnimationBySid = function (sid_)
	{
		var i, len, a;
		for (i = 0, len = this.type.animations.length; i < len; i++)
		{
			a = this.type.animations[i];
			if (a.sid === sid_)
				return a;
		}
		return null;
	};
	instanceProto.doChangeAnim = function ()
	{
		var prev_frame = this.cur_animation.frames[this.cur_frame];
		var anim = this.getAnimationByName(this.changeAnimName);
		this.changeAnimName = "";
		if (!anim)
			return;
		if (anim.name.toLowerCase() === this.cur_animation.name.toLowerCase() && this.animPlaying)
			return;
		this.cur_animation = anim;
		this.cur_anim_speed = anim.speed;
		if (this.cur_frame < 0)
			this.cur_frame = 0;
		if (this.cur_frame >= this.cur_animation.frames.length)
			this.cur_frame = this.cur_animation.frames.length - 1;
		if (this.changeAnimFrom === 1)
			this.cur_frame = 0;
		this.animPlaying = true;
		this.frameStart = this.getNowTime();
		this.animForwards = true;
		this.OnFrameChanged(prev_frame, this.cur_animation.frames[this.cur_frame]);
		this.runtime.redraw = true;
	};
	instanceProto.doChangeAnimFrame = function ()
	{
		var prev_frame = this.cur_animation.frames[this.cur_frame];
		var prev_frame_number = this.cur_frame;
		this.cur_frame = cr.floor(this.changeAnimFrame);
		if (this.cur_frame < 0)
			this.cur_frame = 0;
		if (this.cur_frame >= this.cur_animation.frames.length)
			this.cur_frame = this.cur_animation.frames.length - 1;
		if (prev_frame_number !== this.cur_frame)
		{
			this.OnFrameChanged(prev_frame, this.cur_animation.frames[this.cur_frame]);
			this.frameStart = this.getNowTime();
			this.runtime.redraw = true;
		}
		this.changeAnimFrame = -1;
	};
	instanceProto.OnFrameChanged = function (prev_frame, next_frame)
	{
		var oldw = prev_frame.width;
		var oldh = prev_frame.height;
		var neww = next_frame.width;
		var newh = next_frame.height;
		if (oldw != neww)
			this.width *= (neww / oldw);
		if (oldh != newh)
			this.height *= (newh / oldh);
		this.hotspotX = next_frame.hotspotX;
		this.hotspotY = next_frame.hotspotY;
		this.collision_poly.set_pts(next_frame.poly_pts);
		this.set_bbox_changed();
		this.curFrame = next_frame;
		this.curWebGLTexture = next_frame.webGL_texture;
		var i, len, b;
		for (i = 0, len = this.behavior_insts.length; i < len; i++)
		{
			b = this.behavior_insts[i];
			if (b.onSpriteFrameChanged)
				b.onSpriteFrameChanged(prev_frame, next_frame);
		}
		this.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnFrameChanged, this);
	};
	instanceProto.draw = function(ctx)
	{
		ctx.globalAlpha = this.opacity;
		var cur_frame = this.curFrame;
		var spritesheeted = cur_frame.spritesheeted;
		var cur_image = cur_frame.texture_img;
		var myx = this.x;
		var myy = this.y;
		var w = this.width;
		var h = this.height;
		if (this.angle === 0 && w >= 0 && h >= 0)
		{
			myx -= this.hotspotX * w;
			myy -= this.hotspotY * h;
			if (this.runtime.pixel_rounding)
			{
				myx = (myx + 0.5) | 0;
				myy = (myy + 0.5) | 0;
			}
			if (spritesheeted)
			{
				ctx.drawImage(cur_image, cur_frame.offx, cur_frame.offy, cur_frame.width, cur_frame.height,
										 myx, myy, w, h);
			}
			else
			{
				ctx.drawImage(cur_image, myx, myy, w, h);
			}
		}
		else
		{
			if (this.runtime.pixel_rounding)
			{
				myx = (myx + 0.5) | 0;
				myy = (myy + 0.5) | 0;
			}
			ctx.save();
			var widthfactor = w > 0 ? 1 : -1;
			var heightfactor = h > 0 ? 1 : -1;
			ctx.translate(myx, myy);
			if (widthfactor !== 1 || heightfactor !== 1)
				ctx.scale(widthfactor, heightfactor);
			ctx.rotate(this.angle * widthfactor * heightfactor);
			var drawx = 0 - (this.hotspotX * cr.abs(w))
			var drawy = 0 - (this.hotspotY * cr.abs(h));
			if (spritesheeted)
			{
				ctx.drawImage(cur_image, cur_frame.offx, cur_frame.offy, cur_frame.width, cur_frame.height,
										 drawx, drawy, cr.abs(w), cr.abs(h));
			}
			else
			{
				ctx.drawImage(cur_image, drawx, drawy, cr.abs(w), cr.abs(h));
			}
			ctx.restore();
		}
		/*
		ctx.strokeStyle = "#f00";
		ctx.lineWidth = 3;
		ctx.beginPath();
		this.collision_poly.cache_poly(this.width, this.height, this.angle);
		var i, len, ax, ay, bx, by;
		for (i = 0, len = this.collision_poly.pts_count; i < len; i++)
		{
			ax = this.collision_poly.pts_cache[i*2] + this.x;
			ay = this.collision_poly.pts_cache[i*2+1] + this.y;
			bx = this.collision_poly.pts_cache[((i+1)%len)*2] + this.x;
			by = this.collision_poly.pts_cache[((i+1)%len)*2+1] + this.y;
			ctx.moveTo(ax, ay);
			ctx.lineTo(bx, by);
		}
		ctx.stroke();
		ctx.closePath();
		*/
		/*
		if (this.behavior_insts.length >= 1 && this.behavior_insts[0].draw)
		{
			this.behavior_insts[0].draw(ctx);
		}
		*/
	};
	instanceProto.drawGL = function(glw)
	{
		glw.setTexture(this.curWebGLTexture);
		glw.setOpacity(this.opacity);
		var cur_frame = this.curFrame;
		var q = this.bquad;
		if (this.runtime.pixel_rounding)
		{
			var ox = ((this.x + 0.5) | 0) - this.x;
			var oy = ((this.y + 0.5) | 0) - this.y;
			if (cur_frame.spritesheeted)
				glw.quadTex(q.tlx + ox, q.tly + oy, q.trx + ox, q.try_ + oy, q.brx + ox, q.bry + oy, q.blx + ox, q.bly + oy, cur_frame.sheetTex);
			else
				glw.quad(q.tlx + ox, q.tly + oy, q.trx + ox, q.try_ + oy, q.brx + ox, q.bry + oy, q.blx + ox, q.bly + oy);
		}
		else
		{
			if (cur_frame.spritesheeted)
				glw.quadTex(q.tlx, q.tly, q.trx, q.try_, q.brx, q.bry, q.blx, q.bly, cur_frame.sheetTex);
			else
				glw.quad(q.tlx, q.tly, q.trx, q.try_, q.brx, q.bry, q.blx, q.bly);
		}
	};
	instanceProto.getImagePointIndexByName = function(name_)
	{
		var cur_frame = this.curFrame;
		var i, len;
		for (i = 0, len = cur_frame.image_points.length; i < len; i++)
		{
			if (name_.toLowerCase() === cur_frame.image_points[i][0].toLowerCase())
				return i;
		}
		return -1;
	};
	instanceProto.getImagePoint = function(imgpt, getX)
	{
		var cur_frame = this.curFrame;
		var image_points = cur_frame.image_points;
		var index;
		if (cr.is_string(imgpt))
			index = this.getImagePointIndexByName(imgpt);
		else
			index = imgpt - 1;	// 0 is origin
		index = cr.floor(index);
		if (index < 0 || index >= image_points.length)
			return getX ? this.x : this.y;	// return origin
		var x = (image_points[index][1] - cur_frame.hotspotX) * this.width;
		var y = image_points[index][2];
		y = (y - cur_frame.hotspotY) * this.height;
		var cosa = Math.cos(this.angle);
		var sina = Math.sin(this.angle);
		var x_temp = (x * cosa) - (y * sina);
		y = (y * cosa) + (x * sina);
		x = x_temp;
		x += this.x;
		y += this.y;
		return getX ? x : y;
	};
	function Cnds() {};
	var arrCache = [];
	function allocArr()
	{
		if (arrCache.length)
			return arrCache.pop();
		else
			return [0, 0];
	};
	function freeArr(a)
	{
		a[0] = 0;
		a[1] = 0;
		arrCache.push(a);
	};
	function collmemory_add(collmemory, a, b)
	{
		var arr = allocArr();
		arr[0] = a.uid;
		arr[1] = b.uid;
		collmemory.push(arr);
	};
	function collmemory_remove(collmemory, a, b)
	{
;
		var a_uid = a.uid;
		var b_uid = b.uid;
		var i, j = 0, len, entry;
		for (i = 0, len = collmemory.length; i < len; i++)
		{
			entry = collmemory[i];
			if (!((entry[0] === a_uid && entry[1] === b_uid) || (entry[0] === b_uid && entry[1] === a_uid)))
			{
				collmemory[j][0] = collmemory[i][0];
				collmemory[j][1] = collmemory[i][1];
				j++;
			}
		}
		for (i = j; i < len; i++)
			freeArr(collmemory[i]);
		collmemory.length = j;
	};
	function collmemory_removeInstance(collmemory, inst)
	{
;
		var i, j = 0, len, entry, uid = inst.uid;
		for (i = 0, len = collmemory.length; i < len; i++)
		{
			entry = collmemory[i];
			if (entry[0] !== uid && entry[1] !== uid)
			{
				collmemory[j][0] = collmemory[i][0];
				collmemory[j][1] = collmemory[i][1];
				j++;
			}
		}
		for (i = j; i < len; i++)
			freeArr(collmemory[i]);
		collmemory.length = j;
	};
	function collmemory_has(collmemory, a, b)
	{
		var a_uid = a.uid;
		var b_uid = b.uid;
		var i, len, entry;
		for (i = 0, len = collmemory.length; i < len; i++)
		{
			entry = collmemory[i];
			if ((entry[0] === a_uid && entry[1] === b_uid) || (entry[0] === b_uid && entry[1] === a_uid))
				return true;
		}
		return false;
	};
	Cnds.prototype.OnCollision = function (rtype)
	{
		if (!rtype)
			return false;
		var runtime = this.runtime;
		var cnd = runtime.getCurrentCondition();
		var ltype = cnd.type;
		if (!cnd.extra.collmemory)
		{
			cnd.extra.collmemory = [];
			runtime.addDestroyCallback((function (collmemory) {
				return function(inst) {
					collmemory_removeInstance(collmemory, inst);
				};
			})(cnd.extra.collmemory));
		}
		var lsol = ltype.getCurrentSol();
		var rsol = rtype.getCurrentSol();
		var linstances = lsol.getObjects();
		var rinstances = rsol.getObjects();
		var l, linst, r, rinst;
		var curlsol, currsol;
		var current_event = runtime.getCurrentEventStack().current_event;
		var orblock = current_event.orblock;
		for (l = 0; l < linstances.length; l++)
		{
			linst = linstances[l];
			for (r = 0; r < rinstances.length; r++)
			{
				rinst = rinstances[r];
				if (runtime.testOverlap(linst, rinst) || runtime.checkRegisteredCollision(linst, rinst))
				{
					if (!collmemory_has(cnd.extra.collmemory, linst, rinst))
					{
						collmemory_add(cnd.extra.collmemory, linst, rinst);
						runtime.pushCopySol(current_event.solModifiers);
						curlsol = ltype.getCurrentSol();
						currsol = rtype.getCurrentSol();
						curlsol.select_all = false;
						currsol.select_all = false;
						if (ltype === rtype)
						{
							curlsol.instances.length = 2;	// just use lsol, is same reference as rsol
							curlsol.instances[0] = linst;
							curlsol.instances[1] = rinst;
							ltype.applySolToContainer();
						}
						else
						{
							curlsol.instances.length = 1;
							currsol.instances.length = 1;
							curlsol.instances[0] = linst;
							currsol.instances[0] = rinst;
							ltype.applySolToContainer();
							rtype.applySolToContainer();
						}
						current_event.retrigger();
						runtime.popSol(current_event.solModifiers);
					}
				}
				else
				{
					collmemory_remove(cnd.extra.collmemory, linst, rinst);
				}
			}
		}
		return false;
	};
	var rpicktype = null;
	var rtopick = new cr.ObjectSet();
	var needscollisionfinish = false;
	function DoOverlapCondition(rtype, offx, offy)
	{
		if (!rtype)
			return false;
		var do_offset = (offx !== 0 || offy !== 0);
		var oldx, oldy, ret = false, r, lenr, rinst;
		var cnd = this.runtime.getCurrentCondition();
		var ltype = cnd.type;
		var inverted = cnd.inverted;
		var rsol = rtype.getCurrentSol();
		var orblock = this.runtime.getCurrentEventStack().current_event.orblock;
		var rinstances;
		if (rsol.select_all)
			rinstances = rsol.type.instances;
		else if (orblock)
			rinstances = rsol.else_instances;
		else
			rinstances = rsol.instances;
		rpicktype = rtype;
		needscollisionfinish = (ltype !== rtype && !inverted);
		if (do_offset)
		{
			oldx = this.x;
			oldy = this.y;
			this.x += offx;
			this.y += offy;
			this.set_bbox_changed();
		}
		for (r = 0, lenr = rinstances.length; r < lenr; r++)
		{
			rinst = rinstances[r];
			if (this.runtime.testOverlap(this, rinst))
			{
				ret = true;
				if (inverted)
					break;
				if (ltype !== rtype)
					rtopick.add(rinst);
			}
		}
		if (do_offset)
		{
			this.x = oldx;
			this.y = oldy;
			this.set_bbox_changed();
		}
		return ret;
	};
	typeProto.finish = function (do_pick)
	{
		if (!needscollisionfinish)
			return;
		if (do_pick)
		{
			var orblock = this.runtime.getCurrentEventStack().current_event.orblock;
			var sol = rpicktype.getCurrentSol();
			var topick = rtopick.valuesRef();
			var i, len, inst;
			if (sol.select_all)
			{
				sol.select_all = false;
				sol.instances.length = topick.length;
				for (i = 0, len = topick.length; i < len; i++)
				{
					sol.instances[i] = topick[i];
				}
				if (orblock)
				{
					sol.else_instances.length = 0;
					for (i = 0, len = rpicktype.instances.length; i < len; i++)
					{
						inst = rpicktype.instances[i];
						if (!rtopick.contains(inst))
							sol.else_instances.push(inst);
					}
				}
			}
			else
			{
				var initsize = sol.instances.length;
				sol.instances.length = initsize + topick.length;
				for (i = 0, len = topick.length; i < len; i++)
				{
					sol.instances[initsize + i] = topick[i];
					if (orblock)
						cr.arrayFindRemove(sol.else_instances, topick[i]);
				}
			}
			rpicktype.applySolToContainer();
		}
		rtopick.clear();
		needscollisionfinish = false;
	};
	Cnds.prototype.IsOverlapping = function (rtype)
	{
		return DoOverlapCondition.call(this, rtype, 0, 0);
	};
	Cnds.prototype.IsOverlappingOffset = function (rtype, offx, offy)
	{
		return DoOverlapCondition.call(this, rtype, offx, offy);
	};
	Cnds.prototype.IsAnimPlaying = function (animname)
	{
		if (this.changeAnimName.length)
			return this.changeAnimName.toLowerCase() === animname.toLowerCase();
		else
			return this.cur_animation.name.toLowerCase() === animname.toLowerCase();
	};
	Cnds.prototype.CompareFrame = function (cmp, framenum)
	{
		return cr.do_cmp(this.cur_frame, cmp, framenum);
	};
	Cnds.prototype.OnAnimFinished = function (animname)
	{
		return this.animTriggerName.toLowerCase() === animname.toLowerCase();
	};
	Cnds.prototype.OnAnyAnimFinished = function ()
	{
		return true;
	};
	Cnds.prototype.OnFrameChanged = function ()
	{
		return true;
	};
	Cnds.prototype.IsMirrored = function ()
	{
		return this.width < 0;
	};
	Cnds.prototype.IsFlipped = function ()
	{
		return this.height < 0;
	};
	Cnds.prototype.OnURLLoaded = function ()
	{
		return true;
	};
	Cnds.prototype.IsCollisionEnabled = function ()
	{
		return this.collisionsEnabled;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Spawn = function (obj, layer, imgpt)
	{
		if (!obj || !layer)
			return;
		var inst = this.runtime.createInstance(obj, layer, this.getImagePoint(imgpt, true), this.getImagePoint(imgpt, false));
		if (!inst)
			return;
		if (typeof inst.angle !== "undefined")
		{
			inst.angle = this.angle;
			inst.set_bbox_changed();
		}
		this.runtime.isInOnDestroy++;
		var i, len, s;
		this.runtime.trigger(Object.getPrototypeOf(obj.plugin).cnds.OnCreated, inst);
		if (inst.is_contained)
		{
			for (i = 0, len = inst.siblings.length; i < len; i++)
			{
				s = inst.siblings[i];
				this.runtime.trigger(Object.getPrototypeOf(s.type.plugin).cnds.OnCreated, s);
			}
		}
		this.runtime.isInOnDestroy--;
		var cur_act = this.runtime.getCurrentAction();
		var reset_sol = false;
		if (cr.is_undefined(cur_act.extra.Spawn_LastExec) || cur_act.extra.Spawn_LastExec < this.runtime.execcount)
		{
			reset_sol = true;
			cur_act.extra.Spawn_LastExec = this.runtime.execcount;
		}
		var sol;
		if (obj != this.type)
		{
			sol = obj.getCurrentSol();
			sol.select_all = false;
			if (reset_sol)
			{
				sol.instances.length = 1;
				sol.instances[0] = inst;
			}
			else
				sol.instances.push(inst);
			if (inst.is_contained)
			{
				for (i = 0, len = inst.siblings.length; i < len; i++)
				{
					s = inst.siblings[i];
					sol = s.type.getCurrentSol();
					sol.select_all = false;
					if (reset_sol)
					{
						sol.instances.length = 1;
						sol.instances[0] = s;
					}
					else
						sol.instances.push(s);
				}
			}
		}
	};
	Acts.prototype.SetEffect = function (effect)
	{
		this.compositeOp = cr.effectToCompositeOp(effect);
		cr.setGLBlend(this, effect, this.runtime.gl);
		this.runtime.redraw = true;
	};
	Acts.prototype.StopAnim = function ()
	{
		this.animPlaying = false;
	};
	Acts.prototype.StartAnim = function (from)
	{
		this.animPlaying = true;
		this.frameStart = this.getNowTime();
		if (from === 1 && this.cur_frame !== 0)
		{
			this.changeAnimFrame = 0;
			if (!this.inAnimTrigger)
				this.doChangeAnimFrame();
		}
		if (!this.isTicking)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
	};
	Acts.prototype.SetAnim = function (animname, from)
	{
		this.changeAnimName = animname;
		this.changeAnimFrom = from;
		if (!this.isTicking)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
		if (!this.inAnimTrigger)
			this.doChangeAnim();
	};
	Acts.prototype.SetAnimFrame = function (framenumber)
	{
		this.changeAnimFrame = framenumber;
		if (!this.isTicking)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
		if (!this.inAnimTrigger)
			this.doChangeAnimFrame();
	};
	Acts.prototype.SetAnimSpeed = function (s)
	{
		this.cur_anim_speed = cr.abs(s);
		this.animForwards = (s >= 0);
		if (!this.isTicking)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
	};
	Acts.prototype.SetMirrored = function (m)
	{
		var neww = cr.abs(this.width) * (m === 0 ? -1 : 1);
		if (this.width === neww)
			return;
		this.width = neww;
		this.set_bbox_changed();
	};
	Acts.prototype.SetFlipped = function (f)
	{
		var newh = cr.abs(this.height) * (f === 0 ? -1 : 1);
		if (this.height === newh)
			return;
		this.height = newh;
		this.set_bbox_changed();
	};
	Acts.prototype.SetScale = function (s)
	{
		var cur_frame = this.curFrame;
		var mirror_factor = (this.width < 0 ? -1 : 1);
		var flip_factor = (this.height < 0 ? -1 : 1);
		var new_width = cur_frame.width * s * mirror_factor;
		var new_height = cur_frame.height * s * flip_factor;
		if (this.width !== new_width || this.height !== new_height)
		{
			this.width = new_width;
			this.height = new_height;
			this.set_bbox_changed();
		}
	};
	Acts.prototype.LoadURL = function (url_, resize_)
	{
		var img = new Image();
		var self = this;
		var curFrame_ = this.curFrame;
		img.onload = function ()
		{
			if (curFrame_.texture_img.src === img.src)
			{
				if (self.runtime.glwrap && self.curFrame === curFrame_)
					self.curWebGLTexture = curFrame_.webGL_texture;
				self.runtime.redraw = true;
				self.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnURLLoaded, self);
				return;
			}
			curFrame_.texture_img = img;
			curFrame_.offx = 0;
			curFrame_.offy = 0;
			curFrame_.width = img.width;
			curFrame_.height = img.height;
			curFrame_.spritesheeted = false;
			curFrame_.datauri = "";
			if (self.runtime.glwrap)
			{
				if (curFrame_.webGL_texture)
					self.runtime.glwrap.deleteTexture(curFrame_.webGL_texture);
				curFrame_.webGL_texture = self.runtime.glwrap.loadTexture(img, false, self.runtime.linearSampling);
				if (self.curFrame === curFrame_)
					self.curWebGLTexture = curFrame_.webGL_texture;
				self.type.updateAllCurrentTexture();
			}
			if (resize_ === 0)		// resize to image size
			{
				self.width = img.width;
				self.height = img.height;
				self.set_bbox_changed();
			}
			self.runtime.redraw = true;
			self.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnURLLoaded, self);
		};
		if (url_.substr(0, 5) !== "data:")
			img.crossOrigin = 'anonymous';
		img.src = url_;
	};
	Acts.prototype.SetCollisions = function (set_)
	{
		this.collisionsEnabled = (set_ !== 0);
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.AnimationFrame = function (ret)
	{
		ret.set_int(this.cur_frame);
	};
	Exps.prototype.AnimationFrameCount = function (ret)
	{
		ret.set_int(this.cur_animation.frames.length);
	};
	Exps.prototype.AnimationName = function (ret)
	{
		ret.set_string(this.cur_animation.name);
	};
	Exps.prototype.AnimationSpeed = function (ret)
	{
		ret.set_float(this.cur_anim_speed);
	};
	Exps.prototype.ImagePointX = function (ret, imgpt)
	{
		ret.set_float(this.getImagePoint(imgpt, true));
	};
	Exps.prototype.ImagePointY = function (ret, imgpt)
	{
		ret.set_float(this.getImagePoint(imgpt, false));
	};
	Exps.prototype.ImagePointCount = function (ret)
	{
		ret.set_int(this.curFrame.image_points.length);
	};
	Exps.prototype.ImageWidth = function (ret)
	{
		ret.set_float(this.curFrame.width);
	};
	Exps.prototype.ImageHeight = function (ret)
	{
		ret.set_float(this.curFrame.height);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Text = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Text.prototype;
	pluginProto.onCreate = function ()
	{
		pluginProto.acts.SetWidth = function (w)
		{
			if (this.width !== w)
			{
				this.width = w;
				this.text_changed = true;	// also recalculate text wrapping
				this.set_bbox_changed();
			}
		};
	};
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	typeProto.onLostWebGLContext = function ()
	{
		if (this.is_family)
			return;
		var i, len, inst;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
			inst = this.instances[i];
			inst.mycanvas = null;
			inst.myctx = null;
			inst.mytex = null;
		}
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		if (this.recycled)
			this.lines.length = 0;
		else
			this.lines = [];		// for word wrapping
		this.text_changed = true;
	};
	var instanceProto = pluginProto.Instance.prototype;
	var requestedWebFonts = {};		// already requested web fonts have an entry here
	instanceProto.onCreate = function()
	{
		this.text = this.properties[0];
		this.visible = (this.properties[1] === 0);		// 0=visible, 1=invisible
		this.font = this.properties[2];
		this.color = this.properties[3];
		this.halign = this.properties[4];				// 0=left, 1=center, 2=right
		this.valign = this.properties[5];				// 0=top, 1=center, 2=bottom
		this.wrapbyword = (this.properties[7] === 0);	// 0=word, 1=character
		this.lastwidth = this.width;
		this.lastwrapwidth = this.width;
		this.lastheight = this.height;
		this.line_height_offset = this.properties[8];
		this.facename = "";
		this.fontstyle = "";
		var arr = this.font.split(" ");
		this.ptSize = 0;
		this.textWidth = 0;
		this.textHeight = 0;
		var i;
		for (i = 0; i < arr.length; i++)
		{
			if (arr[i].substr(arr[i].length - 2, 2) === "pt")
			{
				this.ptSize = parseInt(arr[i].substr(0, arr[i].length - 2));
				this.pxHeight = Math.ceil((this.ptSize / 72.0) * 96.0) + 4;	// assume 96dpi...
				if (i > 0)
					this.fontstyle = arr[i - 1];
				this.facename = arr[i + 1];
				for (i = i + 2; i < arr.length; i++)
					this.facename += " " + arr[i];
				break;
			}
		}
		this.mycanvas = null;
		this.myctx = null;
		this.mytex = null;
		this.need_text_redraw = false;
		this.last_render_tick = this.runtime.tickcount;
		if (this.recycled)
			this.rcTex.set(0, 0, 1, 1);
		else
			this.rcTex = new cr.rect(0, 0, 1, 1);
		if (this.runtime.glwrap)
			this.runtime.tickMe(this);
;
	};
	instanceProto.saveToJSON = function ()
	{
		return {
			"t": this.text,
			"f": this.font,
			"c": this.color,
			"ha": this.halign,
			"va": this.valign,
			"wr": this.wrapbyword,
			"lho": this.line_height_offset,
			"fn": this.facename,
			"fs": this.fontstyle,
			"ps": this.ptSize,
			"pxh": this.pxHeight,
			"tw": this.textWidth,
			"th": this.textHeight,
			"lrt": this.last_render_tick
		};
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.text = o["t"];
		this.font = o["f"];
		this.color = o["c"];
		this.halign = o["ha"];
		this.valign = o["va"];
		this.wrapbyword = o["wr"];
		this.line_height_offset = o["lho"];
		this.facename = o["fn"];
		this.fontstyle = o["fs"];
		this.ptSize = o["ps"];
		this.pxHeight = o["pxh"];
		this.textWidth = o["tw"];
		this.textHeight = o["th"];
		this.last_render_tick = o["lrt"];
		this.text_changed = true;
		this.lastwidth = this.width;
		this.lastwrapwidth = this.width;
		this.lastheight = this.height;
	};
	instanceProto.tick = function ()
	{
		if (this.runtime.glwrap && this.mytex && (this.runtime.tickcount - this.last_render_tick >= 300))
		{
			var layer = this.layer;
            this.update_bbox();
            var bbox = this.bbox;
            if (bbox.right < layer.viewLeft || bbox.bottom < layer.viewTop || bbox.left > layer.viewRight || bbox.top > layer.viewBottom)
			{
				this.runtime.glwrap.deleteTexture(this.mytex);
				this.mytex = null;
				this.myctx = null;
				this.mycanvas = null;
			}
		}
	};
	instanceProto.onDestroy = function ()
	{
		this.myctx = null;
		this.mycanvas = null;
		if (this.runtime.glwrap && this.mytex)
			this.runtime.glwrap.deleteTexture(this.mytex);
		this.mytex = null;
	};
	instanceProto.updateFont = function ()
	{
		this.font = this.fontstyle + " " + this.ptSize.toString() + "pt " + this.facename;
		this.text_changed = true;
		this.runtime.redraw = true;
	};
	instanceProto.draw = function(ctx, glmode)
	{
		ctx.font = this.font;
		ctx.textBaseline = "top";
		ctx.fillStyle = this.color;
		ctx.globalAlpha = glmode ? 1 : this.opacity;
		var myscale = 1;
		if (glmode)
		{
			myscale = this.layer.getScale();
			ctx.save();
			ctx.scale(myscale, myscale);
		}
		if (this.text_changed || this.width !== this.lastwrapwidth)
		{
			this.type.plugin.WordWrap(this.text, this.lines, ctx, this.width, this.wrapbyword);
			this.text_changed = false;
			this.lastwrapwidth = this.width;
		}
		this.update_bbox();
		var penX = glmode ? 0 : this.bquad.tlx;
		var penY = glmode ? 0 : this.bquad.tly;
		if (this.runtime.pixel_rounding)
		{
			penX = (penX + 0.5) | 0;
			penY = (penY + 0.5) | 0;
		}
		if (this.angle !== 0 && !glmode)
		{
			ctx.save();
			ctx.translate(penX, penY);
			ctx.rotate(this.angle);
			penX = 0;
			penY = 0;
		}
		var endY = penY + this.height;
		var line_height = this.pxHeight;
		line_height += (this.line_height_offset * this.runtime.devicePixelRatio);
		var drawX;
		var i;
		if (this.valign === 1)		// center
			penY += Math.max(this.height / 2 - (this.lines.length * line_height) / 2, 0);
		else if (this.valign === 2)	// bottom
			penY += Math.max(this.height - (this.lines.length * line_height) - 2, 0);
		for (i = 0; i < this.lines.length; i++)
		{
			drawX = penX;
			if (this.halign === 1)		// center
				drawX = penX + (this.width - this.lines[i].width) / 2;
			else if (this.halign === 2)	// right
				drawX = penX + (this.width - this.lines[i].width);
			ctx.fillText(this.lines[i].text, drawX, penY);
			penY += line_height;
			if (penY >= endY - line_height)
				break;
		}
		if (this.angle !== 0 || glmode)
			ctx.restore();
		this.last_render_tick = this.runtime.tickcount;
	};
	instanceProto.drawGL = function(glw)
	{
		if (this.width < 1 || this.height < 1)
			return;
		var need_redraw = this.text_changed || this.need_text_redraw;
		this.need_text_redraw = false;
		var layer_scale = this.layer.getScale();
		var layer_angle = this.layer.getAngle();
		var rcTex = this.rcTex;
		var floatscaledwidth = layer_scale * this.width;
		var floatscaledheight = layer_scale * this.height;
		var scaledwidth = Math.ceil(floatscaledwidth);
		var scaledheight = Math.ceil(floatscaledheight);
		var windowWidth = this.runtime.width;
		var windowHeight = this.runtime.height;
		var halfw = windowWidth / 2;
		var halfh = windowHeight / 2;
		if (!this.myctx)
		{
			this.mycanvas = document.createElement("canvas");
			this.mycanvas.width = scaledwidth;
			this.mycanvas.height = scaledheight;
			this.lastwidth = scaledwidth;
			this.lastheight = scaledheight;
			need_redraw = true;
			this.myctx = this.mycanvas.getContext("2d");
		}
		if (scaledwidth !== this.lastwidth || scaledheight !== this.lastheight)
		{
			this.mycanvas.width = scaledwidth;
			this.mycanvas.height = scaledheight;
			if (this.mytex)
			{
				glw.deleteTexture(this.mytex);
				this.mytex = null;
			}
			need_redraw = true;
		}
		if (need_redraw)
		{
			this.myctx.clearRect(0, 0, scaledwidth, scaledheight);
			this.draw(this.myctx, true);
			if (!this.mytex)
				this.mytex = glw.createEmptyTexture(scaledwidth, scaledheight, this.runtime.linearSampling, this.runtime.isMobile);
			glw.videoToTexture(this.mycanvas, this.mytex, this.runtime.isMobile);
		}
		this.lastwidth = scaledwidth;
		this.lastheight = scaledheight;
		glw.setTexture(this.mytex);
		glw.setOpacity(this.opacity);
		glw.resetModelView();
		glw.translate(-halfw, -halfh);
		glw.updateModelView();
		var q = this.bquad;
		var tlx = this.layer.layerToCanvas(q.tlx, q.tly, true);
		var tly = this.layer.layerToCanvas(q.tlx, q.tly, false);
		var trx = this.layer.layerToCanvas(q.trx, q.try_, true);
		var try_ = this.layer.layerToCanvas(q.trx, q.try_, false);
		var brx = this.layer.layerToCanvas(q.brx, q.bry, true);
		var bry = this.layer.layerToCanvas(q.brx, q.bry, false);
		var blx = this.layer.layerToCanvas(q.blx, q.bly, true);
		var bly = this.layer.layerToCanvas(q.blx, q.bly, false);
		if (this.runtime.pixel_rounding || (this.angle === 0 && layer_angle === 0))
		{
			var ox = ((tlx + 0.5) | 0) - tlx;
			var oy = ((tly + 0.5) | 0) - tly
			tlx += ox;
			tly += oy;
			trx += ox;
			try_ += oy;
			brx += ox;
			bry += oy;
			blx += ox;
			bly += oy;
		}
		if (this.angle === 0 && layer_angle === 0)
		{
			trx = tlx + scaledwidth;
			try_ = tly;
			brx = trx;
			bry = tly + scaledheight;
			blx = tlx;
			bly = bry;
			rcTex.right = 1;
			rcTex.bottom = 1;
		}
		else
		{
			rcTex.right = floatscaledwidth / scaledwidth;
			rcTex.bottom = floatscaledheight / scaledheight;
		}
		glw.quadTex(tlx, tly, trx, try_, brx, bry, blx, bly, rcTex);
		glw.resetModelView();
		glw.scale(layer_scale, layer_scale);
		glw.rotateZ(-this.layer.getAngle());
		glw.translate((this.layer.viewLeft + this.layer.viewRight) / -2, (this.layer.viewTop + this.layer.viewBottom) / -2);
		glw.updateModelView();
		this.last_render_tick = this.runtime.tickcount;
	};
	var wordsCache = [];
	pluginProto.TokeniseWords = function (text)
	{
		wordsCache.length = 0;
		var cur_word = "";
		var ch;
		var i = 0;
		while (i < text.length)
		{
			ch = text.charAt(i);
			if (ch === "\n")
			{
				if (cur_word.length)
				{
					wordsCache.push(cur_word);
					cur_word = "";
				}
				wordsCache.push("\n");
				++i;
			}
			else if (ch === " " || ch === "\t" || ch === "-")
			{
				do {
					cur_word += text.charAt(i);
					i++;
				}
				while (i < text.length && (text.charAt(i) === " " || text.charAt(i) === "\t"));
				wordsCache.push(cur_word);
				cur_word = "";
			}
			else if (i < text.length)
			{
				cur_word += ch;
				i++;
			}
		}
		if (cur_word.length)
			wordsCache.push(cur_word);
	};
	var linesCache = [];
	function allocLine()
	{
		if (linesCache.length)
			return linesCache.pop();
		else
			return {};
	};
	function freeLine(l)
	{
		linesCache.push(l);
	};
	function freeAllLines(arr)
	{
		var i, len;
		for (i = 0, len = arr.length; i < len; i++)
		{
			freeLine(arr[i]);
		}
		arr.length = 0;
	};
	pluginProto.WordWrap = function (text, lines, ctx, width, wrapbyword)
	{
		if (!text || !text.length)
		{
			freeAllLines(lines);
			return;
		}
		if (width <= 2.0)
		{
			freeAllLines(lines);
			return;
		}
		if (text.length <= 100 && text.indexOf("\n") === -1)
		{
			var all_width = ctx.measureText(text).width;
			if (all_width <= width)
			{
				freeAllLines(lines);
				lines.push(allocLine());
				lines[0].text = text;
				lines[0].width = all_width;
				return;
			}
		}
		this.WrapText(text, lines, ctx, width, wrapbyword);
	};
	pluginProto.WrapText = function (text, lines, ctx, width, wrapbyword)
	{
		var wordArray;
		if (wrapbyword)
		{
			this.TokeniseWords(text);	// writes to wordsCache
			wordArray = wordsCache;
		}
		else
			wordArray = text;
		var cur_line = "";
		var prev_line;
		var line_width;
		var i;
		var lineIndex = 0;
		var line;
		for (i = 0; i < wordArray.length; i++)
		{
			if (wordArray[i] === "\n")
			{
				if (lineIndex >= lines.length)
					lines.push(allocLine());
				line = lines[lineIndex];
				line.text = cur_line;
				line.width = ctx.measureText(cur_line).width;
				lineIndex++;
				cur_line = "";
				continue;
			}
			prev_line = cur_line;
			cur_line += wordArray[i];
			line_width = ctx.measureText(cur_line).width;
			if (line_width >= width)
			{
				if (lineIndex >= lines.length)
					lines.push(allocLine());
				line = lines[lineIndex];
				line.text = prev_line;
				line.width = ctx.measureText(prev_line).width;
				lineIndex++;
				cur_line = wordArray[i];
				if (!wrapbyword && cur_line === " ")
					cur_line = "";
			}
		}
		if (cur_line.length)
		{
			if (lineIndex >= lines.length)
				lines.push(allocLine());
			line = lines[lineIndex];
			line.text = cur_line;
			line.width = ctx.measureText(cur_line).width;
			lineIndex++;
		}
		for (i = lineIndex; i < lines.length; i++)
			freeLine(lines[i]);
		lines.length = lineIndex;
	};
	function Cnds() {};
	Cnds.prototype.CompareText = function(text_to_compare, case_sensitive)
	{
		if (case_sensitive)
			return this.text == text_to_compare;
		else
			return this.text.toLowerCase() == text_to_compare.toLowerCase();
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetText = function(param)
	{
		if (cr.is_number(param) && param < 1e9)
			param = Math.round(param * 1e10) / 1e10;	// round to nearest ten billionth - hides floating point errors
		var text_to_set = param.toString();
		if (this.text !== text_to_set)
		{
			this.text = text_to_set;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.AppendText = function(param)
	{
		if (cr.is_number(param))
			param = Math.round(param * 1e10) / 1e10;	// round to nearest ten billionth - hides floating point errors
		var text_to_append = param.toString();
		if (text_to_append)	// not empty
		{
			this.text += text_to_append;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.SetFontFace = function (face_, style_)
	{
		var newstyle = "";
		switch (style_) {
		case 1: newstyle = "bold"; break;
		case 2: newstyle = "italic"; break;
		case 3: newstyle = "bold italic"; break;
		}
		if (face_ === this.facename && newstyle === this.fontstyle)
			return;		// no change
		this.facename = face_;
		this.fontstyle = newstyle;
		this.updateFont();
	};
	Acts.prototype.SetFontSize = function (size_)
	{
		if (this.ptSize === size_)
			return;
		this.ptSize = size_;
		this.pxHeight = Math.ceil((this.ptSize / 72.0) * 96.0) + 4;	// assume 96dpi...
		this.updateFont();
	};
	Acts.prototype.SetFontColor = function (rgb)
	{
		var newcolor = "rgb(" + cr.GetRValue(rgb).toString() + "," + cr.GetGValue(rgb).toString() + "," + cr.GetBValue(rgb).toString() + ")";
		if (newcolor === this.color)
			return;
		this.color = newcolor;
		this.need_text_redraw = true;
		this.runtime.redraw = true;
	};
	Acts.prototype.SetWebFont = function (familyname_, cssurl_)
	{
		if (this.runtime.isDomFree)
		{
			cr.logexport("[Construct 2] Text plugin: 'Set web font' not supported on this platform - the action has been ignored");
			return;		// DC todo
		}
		var self = this;
		var refreshFunc = (function () {
							self.runtime.redraw = true;
							self.text_changed = true;
						});
		if (requestedWebFonts.hasOwnProperty(cssurl_))
		{
			var newfacename = "'" + familyname_ + "'";
			if (this.facename === newfacename)
				return;	// no change
			this.facename = newfacename;
			this.updateFont();
			for (var i = 1; i < 10; i++)
			{
				setTimeout(refreshFunc, i * 100);
				setTimeout(refreshFunc, i * 1000);
			}
			return;
		}
		var wf = document.createElement("link");
		wf.href = cssurl_;
		wf.rel = "stylesheet";
		wf.type = "text/css";
		wf.onload = refreshFunc;
		document.getElementsByTagName('head')[0].appendChild(wf);
		requestedWebFonts[cssurl_] = true;
		this.facename = "'" + familyname_ + "'";
		this.updateFont();
		for (var i = 1; i < 10; i++)
		{
			setTimeout(refreshFunc, i * 100);
			setTimeout(refreshFunc, i * 1000);
		}
;
	};
	Acts.prototype.SetEffect = function (effect)
	{
		this.compositeOp = cr.effectToCompositeOp(effect);
		cr.setGLBlend(this, effect, this.runtime.gl);
		this.runtime.redraw = true;
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.Text = function(ret)
	{
		ret.set_string(this.text);
	};
	Exps.prototype.FaceName = function (ret)
	{
		ret.set_string(this.facename);
	};
	Exps.prototype.FaceSize = function (ret)
	{
		ret.set_int(this.ptSize);
	};
	Exps.prototype.TextWidth = function (ret)
	{
		var w = 0;
		var i, len, x;
		for (i = 0, len = this.lines.length; i < len; i++)
		{
			x = this.lines[i].width;
			if (w < x)
				w = x;
		}
		ret.set_int(w);
	};
	Exps.prototype.TextHeight = function (ret)
	{
		ret.set_int(this.lines.length * this.pxHeight);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.TiledBg = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.TiledBg.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
		if (this.is_family)
			return;
		this.texture_img = new Image();
		this.texture_img.src = this.texture_file;
		this.texture_img.cr_filesize = this.texture_filesize;
		this.runtime.wait_for_textures.push(this.texture_img);
		this.pattern = null;
		this.webGL_texture = null;
	};
	typeProto.onLostWebGLContext = function ()
	{
		if (this.is_family)
			return;
		this.webGL_texture = null;
	};
	typeProto.onRestoreWebGLContext = function ()
	{
		if (this.is_family || !this.instances.length)
			return;
		if (!this.webGL_texture)
		{
			this.webGL_texture = this.runtime.glwrap.loadTexture(this.texture_img, true, this.runtime.linearSampling, this.texture_pixelformat);
		}
		var i, len;
		for (i = 0, len = this.instances.length; i < len; i++)
			this.instances[i].webGL_texture = this.webGL_texture;
	};
	typeProto.loadTextures = function ()
	{
		if (this.is_family || this.webGL_texture || !this.runtime.glwrap)
			return;
		this.webGL_texture = this.runtime.glwrap.loadTexture(this.texture_img, true, this.runtime.linearSampling, this.texture_pixelformat);
	};
	typeProto.unloadTextures = function ()
	{
		if (this.is_family || this.instances.length || !this.webGL_texture)
			return;
		this.runtime.glwrap.deleteTexture(this.webGL_texture);
		this.webGL_texture = null;
	};
	typeProto.preloadCanvas2D = function (ctx)
	{
		ctx.drawImage(this.texture_img, 0, 0);
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		this.visible = (this.properties[0] === 0);							// 0=visible, 1=invisible
		this.rcTex = new cr.rect(0, 0, 0, 0);
		this.has_own_texture = false;										// true if a texture loaded in from URL
		this.texture_img = this.type.texture_img;
		if (this.runtime.glwrap)
		{
			this.type.loadTextures();
			this.webGL_texture = this.type.webGL_texture;
		}
		else
		{
			if (!this.type.pattern)
				this.type.pattern = this.runtime.ctx.createPattern(this.type.texture_img, "repeat");
			this.pattern = this.type.pattern;
		}
	};
	instanceProto.afterLoad = function ()
	{
		this.has_own_texture = false;
		this.texture_img = this.type.texture_img;
	};
	instanceProto.onDestroy = function ()
	{
		if (this.runtime.glwrap && this.has_own_texture && this.webGL_texture)
		{
			this.runtime.glwrap.deleteTexture(this.webGL_texture);
			this.webGL_texture = null;
		}
	};
	instanceProto.draw = function(ctx)
	{
		ctx.globalAlpha = this.opacity;
		ctx.save();
		ctx.fillStyle = this.pattern;
		var myx = this.x;
		var myy = this.y;
		if (this.runtime.pixel_rounding)
		{
			myx = (myx + 0.5) | 0;
			myy = (myy + 0.5) | 0;
		}
		var drawX = -(this.hotspotX * this.width);
		var drawY = -(this.hotspotY * this.height);
		var offX = drawX % this.texture_img.width;
		var offY = drawY % this.texture_img.height;
		if (offX < 0)
			offX += this.texture_img.width;
		if (offY < 0)
			offY += this.texture_img.height;
		ctx.translate(myx, myy);
		ctx.rotate(this.angle);
		ctx.translate(offX, offY);
		ctx.fillRect(drawX - offX,
					 drawY - offY,
					 this.width,
					 this.height);
		ctx.restore();
	};
	instanceProto.drawGL = function(glw)
	{
		glw.setTexture(this.webGL_texture);
		glw.setOpacity(this.opacity);
		var rcTex = this.rcTex;
		rcTex.right = this.width / this.texture_img.width;
		rcTex.bottom = this.height / this.texture_img.height;
		var q = this.bquad;
		if (this.runtime.pixel_rounding)
		{
			var ox = ((this.x + 0.5) | 0) - this.x;
			var oy = ((this.y + 0.5) | 0) - this.y;
			glw.quadTex(q.tlx + ox, q.tly + oy, q.trx + ox, q.try_ + oy, q.brx + ox, q.bry + oy, q.blx + ox, q.bly + oy, rcTex);
		}
		else
			glw.quadTex(q.tlx, q.tly, q.trx, q.try_, q.brx, q.bry, q.blx, q.bly, rcTex);
	};
	function Cnds() {};
	Cnds.prototype.OnURLLoaded = function ()
	{
		return true;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetEffect = function (effect)
	{
		this.compositeOp = cr.effectToCompositeOp(effect);
		cr.setGLBlend(this, effect, this.runtime.gl);
		this.runtime.redraw = true;
	};
	Acts.prototype.LoadURL = function (url_)
	{
		var img = new Image();
		var self = this;
		img.onload = function ()
		{
			self.texture_img = img;
			if (self.runtime.glwrap)
			{
				if (self.has_own_texture && self.webGL_texture)
					self.runtime.glwrap.deleteTexture(self.webGL_texture);
				self.webGL_texture = self.runtime.glwrap.loadTexture(img, true, self.runtime.linearSampling);
			}
			else
			{
				self.pattern = self.runtime.ctx.createPattern(img, "repeat");
			}
			self.has_own_texture = true;
			self.runtime.redraw = true;
			self.runtime.trigger(cr.plugins_.TiledBg.prototype.cnds.OnURLLoaded, self);
		};
		if (url_.substr(0, 5) !== "data:")
			img.crossOrigin = 'anonymous';
		img.src = url_;
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	pluginProto.exps = new Exps();
}());
;
;
cr.behaviors.Anchor = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.Anchor.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		this.anch_left = this.properties[0];		// 0 = left, 1 = right
		this.anch_top = this.properties[1];			// 0 = top, 1 = bottom
		this.anch_right = this.properties[2];		// 0 = none, 1 = right
		this.anch_bottom = this.properties[3];		// 0 = none, 1 = bottom
		this.inst.update_bbox();
		this.xleft = this.inst.bbox.left;
		this.ytop = this.inst.bbox.top;
		this.xright = this.runtime.original_width - this.inst.bbox.left;
		this.ybottom = this.runtime.original_height - this.inst.bbox.top;
		this.rdiff = this.runtime.original_width - this.inst.bbox.right;
		this.bdiff = this.runtime.original_height - this.inst.bbox.bottom;
		this.enabled = (this.properties[4] !== 0);
	};
	behinstProto.saveToJSON = function ()
	{
		return {
			"xleft": this.xleft,
			"ytop": this.ytop,
			"xright": this.xright,
			"ybottom": this.ybottom,
			"rdiff": this.rdiff,
			"bdiff": this.bdiff,
			"enabled": this.enabled
		};
	};
	behinstProto.loadFromJSON = function (o)
	{
		this.xleft = o["xleft"];
		this.ytop = o["ytop"];
		this.xright = o["xright"];
		this.ybottom = o["ybottom"];
		this.rdiff = o["rdiff"];
		this.bdiff = o["bdiff"];
		this.enabled = o["enabled"];
	};
	behinstProto.tick = function ()
	{
		if (!this.enabled)
			return;
		var n;
		var layer = this.inst.layer;
		var inst = this.inst;
		var bbox = this.inst.bbox;
		if (this.anch_left === 0)
		{
			inst.update_bbox();
			n = (layer.viewLeft + this.xleft) - bbox.left;
			if (n !== 0)
			{
				inst.x += n;
				inst.set_bbox_changed();
			}
		}
		else if (this.anch_left === 1)
		{
			inst.update_bbox();
			n = (layer.viewRight - this.xright) - bbox.left;
			if (n !== 0)
			{
				inst.x += n;
				inst.set_bbox_changed();
			}
		}
		if (this.anch_top === 0)
		{
			inst.update_bbox();
			n = (layer.viewTop + this.ytop) - bbox.top;
			if (n !== 0)
			{
				inst.y += n;
				inst.set_bbox_changed();
			}
		}
		else if (this.anch_top === 1)
		{
			inst.update_bbox();
			n = (layer.viewBottom - this.ybottom) - bbox.top;
			if (n !== 0)
			{
				inst.y += n;
				inst.set_bbox_changed();
			}
		}
		if (this.anch_right === 1)
		{
			inst.update_bbox();
			n = (layer.viewRight - this.rdiff) - bbox.right;
			if (n !== 0)
			{
				inst.width += n;
				if (inst.width < 0)
					inst.width = 0;
				inst.set_bbox_changed();
			}
		}
		if (this.anch_bottom === 1)
		{
			inst.update_bbox();
			n = (layer.viewBottom - this.bdiff) - bbox.bottom;
			if (n !== 0)
			{
				inst.height += n;
				if (inst.height < 0)
					inst.height = 0;
				inst.set_bbox_changed();
			}
		}
	};
	function Cnds() {};
	behaviorProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetEnabled = function (e)
	{
		if (this.enabled && e === 0)
			this.enabled = false;
		else if (!this.enabled && e !== 0)
		{
			this.inst.update_bbox();
			this.xleft = this.inst.bbox.left;
			this.ytop = this.inst.bbox.top;
			this.xright = this.runtime.original_width - this.inst.bbox.left;
			this.ybottom = this.runtime.original_height - this.inst.bbox.top;
			this.rdiff = this.runtime.original_width - this.inst.bbox.right;
			this.bdiff = this.runtime.original_height - this.inst.bbox.bottom;
			this.enabled = true;
		}
	};
	behaviorProto.acts = new Acts();
	function Exps() {};
	behaviorProto.exps = new Exps();
}());
cr.getProjectModel = function() { return [
	null,
	"Editing Window",
	[
	[
		cr.plugins_.Dictionary,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.List,
		false,
		true,
		true,
		true,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Keyboard,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Mouse,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.FileSaver,
		false,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Sprite,
		false,
		true,
		true,
		true,
		true,
		true,
		true,
		true,
		false
	]
,	[
		cr.plugins_.Text,
		false,
		true,
		true,
		true,
		true,
		true,
		true,
		true,
		false
	]
,	[
		cr.plugins_.TiledBg,
		false,
		true,
		true,
		true,
		true,
		true,
		true,
		true,
		true
	]
,	[
		cr.plugins_.Button,
		false,
		true,
		true,
		true,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Browser,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
	],
	[
	[
		"t0",
		cr.plugins_.Sprite,
		false,
		[4732580993820909,8954058842959232,3760724372900533,4167270263392477,9574301763638321,760242904498921,1999554757518779,2263003326010933,7370847599918289,9116189202803946,1901534155229682,5997734263958756,5047137878225958,6305235099031622],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1382434682341754,
			[
				["images/gardenroom-sheet0.png", 589, 1, 1, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0.46875,-0.46875,0.46875,0.46875,-0.46875,0.46875],0],
				["images/gardenroom-sheet0.png", 589, 66, 1, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0.46875,-0.46875,0.46875,0.46875,-0.46875,0.46875],0],
				["images/gardenroom-sheet0.png", 589, 131, 1, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0.46875,-0.46875,0.46875,0.46875,-0.46875,0.46875],0],
				["images/gardenroom-sheet0.png", 589, 1, 66, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0.46875,-0.46875,0.46875,0.46875,-0.46875,0.46875],0],
				["images/gardenroom-sheet0.png", 589, 66, 66, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0.46875,-0.46875,0.46875,0.46875,-0.46875,0.46875],0],
				["images/gardenroom-sheet0.png", 589, 131, 66, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0.46875,-0.46875,0.46875,0.46875,-0.46875,0.46875],0],
				["images/gardenroom-sheet0.png", 589, 1, 131, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0.46875,-0.46875,0.46875,0.46875,-0.46875,0.46875],0]
			]
			]
		],
		[
		],
		false,
		false,
		5048881036565449,
		[]
	]
,	[
		"t1",
		cr.plugins_.Sprite,
		false,
		[4732580993820909,8954058842959232,3760724372900533,4167270263392477,9574301763638321,760242904498921,1999554757518779,2263003326010933,7370847599918289,9116189202803946,1901534155229682,5997734263958756,5047137878225958,6305235099031622],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9258274645858728,
			[
				["images/reactorroom-sheet0.png", 592, 1, 1, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0.46875,-0.46875,0.46875,0.46875,-0.46875,0.46875],0],
				["images/reactorroom-sheet0.png", 592, 66, 1, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0.46875,-0.46875,0.46875,0.46875,-0.46875,0.46875],0],
				["images/reactorroom-sheet0.png", 592, 131, 1, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0.46875,-0.46875,0.46875,0.46875,-0.46875,0.46875],0],
				["images/reactorroom-sheet0.png", 592, 1, 66, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0.46875,-0.46875,0.46875,0.46875,-0.46875,0.46875],0],
				["images/reactorroom-sheet0.png", 592, 66, 66, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0.46875,-0.46875,0.46875,0.46875,-0.46875,0.46875],0],
				["images/reactorroom-sheet0.png", 592, 131, 66, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0.46875,-0.46875,0.46875,0.46875,-0.46875,0.46875],0],
				["images/reactorroom-sheet0.png", 592, 1, 131, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0.46875,-0.46875,0.46875,0.46875,-0.46875,0.46875],0]
			]
			]
		],
		[
		],
		false,
		false,
		2351241398797169,
		[]
	]
,	[
		"t2",
		cr.plugins_.Sprite,
		false,
		[4732580993820909,8954058842959232,3760724372900533,4167270263392477,9574301763638321,760242904498921,1999554757518779,2263003326010933,7370847599918289,9116189202803946,1901534155229682,5997734263958756,5047137878225958,6305235099031622],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7574515024066545,
			[
				["images/tjunction-sheet0.png", 476, 1, 1, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0.46875,-0.46875,0.46875,0.46875,-0.46875,0.46875],0],
				["images/tjunction-sheet0.png", 476, 66, 1, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0.46875,-0.46875,0.46875,0.46875,-0.46875,0.46875],0],
				["images/tjunction-sheet0.png", 476, 131, 1, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0.46875,-0.46875,0.46875,0.46875,-0.46875,0.46875],0],
				["images/tjunction-sheet0.png", 476, 1, 66, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0.46875,-0.46875,0.46875,0.46875,-0.46875,0.46875],0],
				["images/tjunction-sheet0.png", 476, 66, 66, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0.46875,-0.46875,0.46875,0.46875,-0.46875,0.46875],0],
				["images/tjunction-sheet0.png", 476, 131, 66, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0.46875,-0.46875,0.46875,0.46875,-0.46875,0.46875],0],
				["images/tjunction-sheet0.png", 476, 1, 131, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0.46875,-0.46875,0.46875,0.46875,-0.46875,0.46875],0]
			]
			]
		],
		[
		],
		false,
		false,
		1882750472171175,
		[]
	]
,	[
		"t3",
		cr.plugins_.Sprite,
		false,
		[4732580993820909,8954058842959232,3760724372900533,4167270263392477,9574301763638321,760242904498921,1999554757518779,2263003326010933,7370847599918289,9116189202803946,1901534155229682,5997734263958756,5047137878225958,6305235099031622],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			817015774860536,
			[
				["images/crossjunction-sheet0.png", 553, 1, 1, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0.46875,-0.46875,0.46875,0.46875,-0.46875,0.46875],0],
				["images/crossjunction-sheet0.png", 553, 66, 1, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0.46875,-0.46875,0.46875,0.46875,-0.46875,0.46875],0],
				["images/crossjunction-sheet0.png", 553, 131, 1, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0.46875,-0.46875,0.46875,0.46875,-0.46875,0.46875],0],
				["images/crossjunction-sheet0.png", 553, 1, 66, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0.46875,-0.46875,0.46875,0.46875,-0.46875,0.46875],0],
				["images/crossjunction-sheet0.png", 553, 66, 66, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0.46875,-0.46875,0.46875,0.46875,-0.46875,0.46875],0],
				["images/crossjunction-sheet0.png", 553, 131, 66, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0.46875,-0.46875,0.46875,0.46875,-0.46875,0.46875],0],
				["images/crossjunction-sheet0.png", 553, 1, 131, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0.46875,-0.46875,0.46875,0.46875,-0.46875,0.46875],0]
			]
			]
		],
		[
		],
		false,
		false,
		7587709333952341,
		[]
	]
,	[
		"t4",
		cr.plugins_.Sprite,
		false,
		[4732580993820909,8954058842959232,3760724372900533,4167270263392477,9574301763638321,760242904498921,1999554757518779,2263003326010933,7370847599918289,9116189202803946,1901534155229682,5997734263958756,5047137878225958,6305235099031622],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5584573042048996,
			[
				["images/longhallway-sheet0.png", 293, 1, 1, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,-0.46875,0.46875,0.46875,0.46875,0.46875,-0.46875],0],
				["images/longhallway-sheet0.png", 293, 66, 1, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,-0.46875,0.46875,0.46875,0.46875,0.46875,-0.46875],0],
				["images/longhallway-sheet0.png", 293, 131, 1, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,-0.46875,0.46875,0.46875,0.46875,0.46875,-0.46875],0],
				["images/longhallway-sheet0.png", 293, 1, 66, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,-0.46875,0.46875,0.46875,0.46875,0.46875,-0.46875],0],
				["images/longhallway-sheet0.png", 293, 66, 66, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,-0.46875,0.46875,0.46875,0.46875,0.46875,-0.46875],0],
				["images/longhallway-sheet0.png", 293, 131, 66, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,-0.46875,0.46875,0.46875,0.46875,0.46875,-0.46875],0],
				["images/longhallway-sheet0.png", 293, 1, 131, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,-0.46875,0.46875,0.46875,0.46875,0.46875,-0.46875],0]
			]
			]
		],
		[
		],
		false,
		false,
		3673010370957263,
		[]
	]
,	[
		"t5",
		cr.plugins_.Sprite,
		false,
		[4732580993820909,8954058842959232,3760724372900533,4167270263392477,9574301763638321,760242904498921,1999554757518779,2263003326010933,7370847599918289,9116189202803946,1901534155229682,5997734263958756,5047137878225958,6305235099031622],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6013091207360808,
			[
				["images/elbowconnector-sheet0.png", 471, 1, 1, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,-0.46875,0.46875,0.46875,0.46875,0.46875,-0.46875],0],
				["images/elbowconnector-sheet0.png", 471, 66, 1, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,-0.46875,0.46875,0.46875,0.46875,0.46875,-0.46875],0],
				["images/elbowconnector-sheet0.png", 471, 131, 1, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,-0.46875,0.46875,0.46875,0.46875,0.46875,-0.46875],0],
				["images/elbowconnector-sheet0.png", 471, 1, 66, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,-0.46875,0.46875,0.46875,0.46875,0.46875,-0.46875],0],
				["images/elbowconnector-sheet0.png", 471, 66, 66, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,-0.46875,0.46875,0.46875,0.46875,0.46875,-0.46875],0],
				["images/elbowconnector-sheet0.png", 471, 131, 66, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,-0.46875,0.46875,0.46875,0.46875,0.46875,-0.46875],0],
				["images/elbowconnector-sheet0.png", 471, 1, 131, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,-0.46875,0.46875,0.46875,0.46875,0.46875,-0.46875],0]
			]
			]
		],
		[
		],
		false,
		false,
		3014807039755452,
		[]
	]
,	[
		"t6",
		cr.plugins_.Sprite,
		false,
		[4732580993820909,8954058842959232,3760724372900533,4167270263392477,9574301763638321,760242904498921,1999554757518779,2263003326010933,7370847599918289,9116189202803946,1901534155229682,5997734263958756,5047137878225958,6305235099031622],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8849272813085939,
			[
				["images/straighthallway-sheet0.png", 248, 1, 1, 32, 32, 1, 0.5, 0.5,[],[-0.4375,-0.4375,0.4375,-0.4375,0.4375,0.4375,-0.4375,0.4375],0],
				["images/straighthallway-sheet0.png", 248, 34, 1, 32, 32, 1, 0.5, 0.5,[],[-0.4375,-0.4375,0.4375,-0.4375,0.4375,0.4375,-0.4375,0.4375],0],
				["images/straighthallway-sheet0.png", 248, 67, 1, 32, 32, 1, 0.5, 0.5,[],[-0.4375,-0.4375,0.4375,-0.4375,0.4375,0.4375,-0.4375,0.4375],0],
				["images/straighthallway-sheet0.png", 248, 1, 34, 32, 32, 1, 0.5, 0.5,[],[-0.4375,-0.4375,0.4375,-0.4375,0.4375,0.4375,-0.4375,0.4375],0],
				["images/straighthallway-sheet0.png", 248, 34, 34, 32, 32, 1, 0.5, 0.5,[],[-0.4375,-0.4375,0.4375,-0.4375,0.4375,0.4375,-0.4375,0.4375],0],
				["images/straighthallway-sheet0.png", 248, 67, 34, 32, 32, 1, 0.5, 0.5,[],[-0.4375,-0.4375,0.4375,-0.4375,0.4375,0.4375,-0.4375,0.4375],0],
				["images/straighthallway-sheet0.png", 248, 1, 67, 32, 32, 1, 0.5, 0.5,[],[-0.4375,-0.4375,0.4375,-0.4375,0.4375,0.4375,-0.4375,0.4375],0]
			]
			]
		],
		[
		],
		false,
		false,
		5782632203970843,
		[]
	]
,	[
		"t7",
		cr.plugins_.Sprite,
		false,
		[1732772833143429,1686753345007427,1617611350283224],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9363428673946164,
			[
				["images/gardenroomspawn-sheet0.png", 592, 0, 0, 72, 66, 1, 0, 0,[],[0.0138889,0.0151515,0.5,0,0.986111,0.0151515,1,0.5,0.986111,0.984848,0.5,1,0.0138889,0.984848,0,0.5],0],
				["images/gardenroomspawn-sheet1.png", 614, 0, 0, 72, 66, 1, 0, 0,[],[0.0138889,0.0151515,0.5,0,0.986111,0.0151515,1,0.5,0.986111,0.984848,0.5,1,0.0138889,0.984848,0,0.5],0]
			]
			]
		],
		[
		],
		false,
		false,
		8120310270498225,
		[]
	]
,	[
		"t8",
		cr.plugins_.Sprite,
		false,
		[1732772833143429,1686753345007427,1617611350283224],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6683558869040519,
			[
				["images/reactorspawn-sheet0.png", 615, 0, 0, 72, 66, 1, 0, 0,[],[0.0138889,0.0151515,0.5,0,0.986111,0.0151515,1,0.5,0.986111,0.984848,0.5,1,0.0138889,0.984848,0,0.5],0],
				["images/reactorspawn-sheet1.png", 638, 0, 0, 72, 66, 1, 0, 0,[],[0.0138889,0.0151515,0.5,0,0.986111,0.0151515,1,0.5,0.986111,0.984848,0.5,1,0.0138889,0.984848,0,0.5],0]
			]
			]
		],
		[
		],
		false,
		false,
		9481874272097195,
		[]
	]
,	[
		"t9",
		cr.plugins_.Sprite,
		false,
		[1732772833143429,1686753345007427,1617611350283224],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7169793288448845,
			[
				["images/tjunctionspawn-sheet0.png", 580, 0, 0, 72, 66, 1, 0, 0,[],[0.0138889,0.0151515,0.5,0,0.986111,0.0151515,1,0.5,0.986111,0.984848,0.5,1,0.0138889,0.984848,0,0.5],0],
				["images/tjunctionspawn-sheet1.png", 621, 0, 0, 72, 66, 1, 0, 0,[],[0.0138889,0.0151515,0.5,0,0.986111,0.0151515,1,0.5,0.986111,0.984848,0.5,1,0.0138889,0.984848,0,0.5],0]
			]
			]
		],
		[
		],
		false,
		false,
		1497960845535107,
		[]
	]
,	[
		"t10",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5886327442383695,
			[
				["images/page1parentspawn-sheet0.png", 168, 0, 0, 250, 250, 1, 0.5, 0.5,[],[],3]
			]
			]
		],
		[
		],
		false,
		false,
		1491972787437245,
		[]
	]
,	[
		"t11",
		cr.plugins_.Sprite,
		false,
		[1732772833143429,1686753345007427,1617611350283224],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4206909001087447,
			[
				["images/crossjunctionspawn-sheet0.png", 565, 0, 0, 72, 66, 1, 0, 0,[],[0.0138889,0.0151515,0.5,0,0.986111,0.0151515,1,0.5,0.986111,0.984848,0.5,1,0.0138889,0.984848,0,0.5],0],
				["images/crossjunctionspawn-sheet1.png", 603, 0, 0, 72, 66, 1, 0, 0,[],[0.0138889,0.0151515,0.5,0,0.986111,0.0151515,1,0.5,0.986111,0.984848,0.5,1,0.0138889,0.984848,0,0.5],0]
			]
			]
		],
		[
		],
		false,
		false,
		1077852776927128,
		[]
	]
,	[
		"t12",
		cr.plugins_.Sprite,
		false,
		[1732772833143429,1686753345007427,1617611350283224],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5404809361997343,
			[
				["images/longhallwayspawn-sheet0.png", 546, 0, 0, 72, 66, 1, 0, 0,[],[0.0138889,0.0151515,0.5,0,0.986111,0.0151515,1,0.5,0.986111,0.984848,0.5,1,0.0138889,0.984848,0,0.5],0],
				["images/longhallwayspawn-sheet1.png", 583, 0, 0, 72, 66, 1, 0, 0,[],[0.0138889,0.0151515,0.5,0,0.986111,0.0151515,1,0.5,0.986111,0.984848,0.5,1,0.0138889,0.984848,0,0.5],0]
			]
			]
		],
		[
		],
		false,
		false,
		834289315891685,
		[]
	]
,	[
		"t13",
		cr.plugins_.Sprite,
		false,
		[1732772833143429,1686753345007427,1617611350283224],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9356319964846928,
			[
				["images/elbowconnectorspawn-sheet0.png", 571, 0, 0, 72, 66, 1, 0, 0,[],[0.0138889,0.0151515,0.5,0,0.986111,0.0151515,1,0.5,0.986111,0.984848,0.5,1,0.0138889,0.984848,0,0.5],0],
				["images/elbowconnectorspawn-sheet1.png", 614, 0, 0, 72, 66, 1, 0, 0,[],[0.0138889,0.0151515,0.5,0,0.986111,0.0151515,1,0.5,0.986111,0.984848,0.5,1,0.0138889,0.984848,0,0.5],0]
			]
			]
		],
		[
		],
		false,
		false,
		5759662467323905,
		[]
	]
,	[
		"t14",
		cr.plugins_.Sprite,
		false,
		[1732772833143429,1686753345007427,1617611350283224],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2584788105736891,
			[
				["images/elevatorspawn-sheet0.png", 642, 0, 0, 72, 66, 1, 0, 0,[],[0.0138889,0.0151515,0.5,0,0.986111,0.0151515,1,0.5,0.986111,0.984848,0.5,1,0.0138889,0.984848,0,0.5],0],
				["images/elevatorspawn-sheet1.png", 665, 0, 0, 72, 66, 1, 0, 0,[],[0.0138889,0.0151515,0.5,0,0.986111,0.0151515,1,0.5,0.986111,0.984848,0.5,1,0.0138889,0.984848,0,0.5],0]
			]
			]
		],
		[
		],
		false,
		false,
		2530197787858323,
		[]
	]
,	[
		"t15",
		cr.plugins_.Sprite,
		false,
		[1732772833143429,1686753345007427,1617611350283224],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8273284797655323,
			[
				["images/straighthallwayspawn-sheet0.png", 547, 0, 0, 72, 66, 1, 0, 0,[],[0.0138889,0.0151515,0.5,0,0.986111,0.0151515,1,0.5,0.986111,0.984848,0.5,1,0.0138889,0.984848,0,0.5],0],
				["images/straighthallwayspawn-sheet1.png", 585, 0, 0, 72, 66, 1, 0, 0,[],[0.0138889,0.0151515,0.5,0,0.986111,0.0151515,1,0.5,0.986111,0.984848,0.5,1,0.0138889,0.984848,0,0.5],0]
			]
			]
		],
		[
		],
		false,
		false,
		6360472315052981,
		[]
	]
,	[
		"t16",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			282892275671916,
			[
				["images/colortilered-sheet0.png", 93, 0, 0, 32, 32, 1, 0, 0,[],[],4]
			]
			]
		],
		[
		],
		false,
		false,
		7670352170291991,
		[]
	]
,	[
		"t17",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3348013759377441,
			[
				["images/colortileorange-sheet0.png", 93, 0, 0, 32, 32, 1, 0, 0,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		94116034765207,
		[]
	]
,	[
		"t18",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7676626608778659,
			[
				["images/colortileyellow-sheet0.png", 93, 0, 0, 32, 32, 1, 0, 0,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		9683786830758863,
		[]
	]
,	[
		"t19",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3371326045404166,
			[
				["images/colortilegreen-sheet0.png", 93, 0, 0, 32, 32, 1, 0, 0,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		5668972032287163,
		[]
	]
,	[
		"t20",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7498076901093381,
			[
				["images/colortileblue-sheet0.png", 93, 0, 0, 32, 32, 1, 0, 0,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		4221740713245563,
		[]
	]
,	[
		"t21",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1159493967623419,
			[
				["images/colortilepurple-sheet0.png", 93, 0, 0, 32, 32, 1, 0, 0,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		6520043880470013,
		[]
	]
,	[
		"t22",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8480754173201968,
			[
				["images/colortileblank-sheet0.png", 93, 0, 0, 32, 32, 1, 0, 0,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		2957782967466722,
		[]
	]
,	[
		"t23",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4164709920770337,
			[
				["images/palettebutton-sheet0.png", 1367, 1, 1, 211, 22, 1, 0, 0,[],[0,0,0.49763,0,0.947867,0.5,0.952607,0.5,0.995261,0.954545,0.49763,1,0,1],0],
				["images/palettebutton-sheet0.png", 1367, 1, 24, 211, 22, 1, 0, 0,[],[0,0,0.49763,0,0.947867,0.5,0.952607,0.5,0.995261,0.954545,0.49763,1,0,1],0]
			]
			]
		],
		[
		],
		false,
		false,
		12183057283064,
		[]
	]
,	[
		"t24",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3649044765632001,
			[
				["images/resourcebutton-sheet0.png", 1414, 1, 1, 300, 22, 1, 0, 0,[],[],0],
				["images/resourcebutton-sheet0.png", 1414, 1, 24, 300, 22, 1, 0, 0,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		1783679557615317,
		[]
	]
,	[
		"t25",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9943702481694394,
			[
				["images/tilebutton-sheet0.png", 885, 1, 1, 128, 22, 1, 0, 0,[],[],0],
				["images/tilebutton-sheet0.png", 885, 1, 24, 128, 22, 1, 0, 0,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		41859751070272,
		[]
	]
,	[
		"t26",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4003282913564765,
			[
				["images/optionbutton-sheet0.png", 1695, 1, 1, 300, 22, 1, 0, 0,[],[0.0366667,0.5,0.5,0,1,0,1,1,0,1,0.0333333,0.5],0],
				["images/optionbutton-sheet0.png", 1695, 1, 24, 300, 22, 1, 0, 0,[],[0.0366667,0.5,0.5,0,1,0,1,1,0,1,0.0333333,0.5],0]
			]
			]
		],
		[
		],
		false,
		false,
		2265683586664506,
		[]
	]
,	[
		"t27",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5315277565716673,
			[
				["images/buttonprev-sheet0.png", 692, 0, 0, 64, 25, 1, 0, 0,[],[0.046875,0.12,0.5,0,1,0,1,1,0,1,0,0.48],0]
			]
			]
		],
		[
		],
		false,
		false,
		4824172325283435,
		[]
	]
,	[
		"t28",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6197201110999208,
			[
				["images/buttonnext-sheet0.png", 673, 0, 0, 65, 25, 1, 0, 0,[],[0,0,0.492308,0,0.953846,0.12,1,0.48,1,1,0,1],0]
			]
			]
		],
		[
		],
		false,
		false,
		4149889175654339,
		[]
	]
,	[
		"t29",
		cr.plugins_.Button,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		7214888662556983,
		[]
	]
,	[
		"t30",
		cr.plugins_.List,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		4686004253371938,
		[]
	]
,	[
		"t31",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		7171798424798392,
		[]
	]
,	[
		"t32",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		1166153916656455,
		[]
	]
,	[
		"t33",
		cr.plugins_.Button,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		4193796019835131,
		[]
	]
,	[
		"t34",
		cr.plugins_.Button,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		5037316086879495,
		[]
	]
,	[
		"t35",
		cr.plugins_.Button,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		8601803540416725,
		[]
	]
,	[
		"t36",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		683107658787667,
		[]
	]
,	[
		"t37",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6214851566318404,
			[
				["images/backgroundgridbutton-sheet0.png", 120, 0, 0, 64, 64, 1, 0.5, 0.5,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		3022219006670436,
		[]
	]
,	[
		"t38",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2546147963550646,
			[
				["images/backgroundgraphbutton-sheet0.png", 126, 0, 0, 64, 64, 1, 0.5, 0.5,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		7308125537194669,
		[]
	]
,	[
		"t39",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		932103233221221,
		[]
	]
,	[
		"t40",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8709940484407311,
			[
				["images/alloyplateicon-sheet0.png", 27634, 0, 0, 250, 156, 1, 0, 0,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		2830724059162594,
		[]
	]
,	[
		"t41",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3910654258883535,
			[
				["images/circuitsicon-sheet0.png", 31629, 0, 0, 250, 156, 1, 0, 0,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		1416475046378158,
		[]
	]
,	[
		"t42",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4149107387541162,
			[
				["images/creditsicon-sheet0.png", 25142, 0, 0, 250, 156, 1, 0, 0,[],[0.276,0.442308,0.5,0.0192308,0.728,0.435897,0.72,0.551282,0.5,0.961538,0.28,0.551282,0.28,0.5],0]
			]
			]
		],
		[
		],
		false,
		false,
		6079287849745424,
		[]
	]
,	[
		"t43",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5568409295144723,
			[
				["images/ferriteicon-sheet0.png", 31657, 0, 0, 250, 156, 1, 0, 0,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		622968977362295,
		[]
	]
,	[
		"t44",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			675980343425189,
			[
				["images/formaicon-sheet0.png", 31120, 0, 0, 250, 156, 1, 0, 0,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		2408640749324839,
		[]
	]
,	[
		"t45",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9441838732549039,
			[
				["images/nanosporesicon-sheet0.png", 34908, 0, 0, 250, 156, 1, 0, 0,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		8902976888544651,
		[]
	]
,	[
		"t46",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6242396461514444,
			[
				["images/salvageicon-sheet0.png", 37165, 0, 0, 250, 156, 1, 0, 0,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		914664119041951,
		[]
	]
,	[
		"t47",
		cr.plugins_.TiledBg,
		false,
		[],
		1,
		0,
		["images/dojotilebg.png", 589, 1],
		null,
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			6873302540831454
		]
		],
		false,
		false,
		3514650150614673,
		[]
	]
,	[
		"t48",
		cr.plugins_.TiledBg,
		false,
		[],
		0,
		0,
		["images/backgroundgrid.png", 120, 1],
		null,
		[
		],
		false,
		false,
		8900158228079026,
		[]
	]
,	[
		"t49",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7217716484406624,
			[
				["images/tilecolorbg-sheet0.png", 692, 0, 0, 270, 42, 1, 0, 0,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		5997413586310809,
		[]
	]
,	[
		"t50",
		cr.plugins_.TiledBg,
		false,
		[],
		0,
		0,
		["images/resourcepane.png", 566, 1],
		null,
		[
		],
		false,
		false,
		3687701502294087,
		[]
	]
,	[
		"t51",
		cr.plugins_.List,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		634993557820626,
		[]
	]
,	[
		"t52",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7545556863954719,
			[
				["images/optionsbg-sheet0.png", 4665, 0, 0, 300, 379, 1, 0, 0,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		8508535674087527,
		[]
	]
,	[
		"t53",
		cr.plugins_.TiledBg,
		false,
		[],
		0,
		0,
		["images/backgroundgraph.png", 126, 1],
		null,
		[
		],
		false,
		false,
		589795693883311,
		[]
	]
,	[
		"t54",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1629744225347161,
			[
				["images/tileinfopane-sheet0.png", 7390, 0, 0, 252, 285, 1, 0, 0,[],[0.0436508,0.0385965,0.5,0,0.956349,0.0385965,1,0.498246,1,1,0,1,0,0.498246],0]
			]
			]
		],
		[
		],
		false,
		false,
		1307370345143401,
		[]
	]
,	[
		"t55",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6717606908862893,
			[
				["images/tileimage-sheet0.png", 311316, 1, 1, 250, 133, 1, 0, 0,[],[],0],
				["images/tileimage-sheet0.png", 311316, 252, 1, 250, 133, 1, 0, 0,[],[],0],
				["images/tileimage-sheet0.png", 311316, 1, 135, 250, 133, 1, 0, 0,[],[],0],
				["images/tileimage-sheet0.png", 311316, 252, 135, 250, 133, 1, 0, 0,[],[],0],
				["images/tileimage-sheet0.png", 311316, 1, 269, 250, 133, 1, 0, 0,[],[],0],
				["images/tileimage-sheet0.png", 311316, 252, 269, 250, 133, 1, 0, 0,[],[],0],
				["images/tileimage-sheet1.png", 119466, 1, 1, 250, 133, 1, 0, 0,[],[],0],
				["images/tileimage-sheet1.png", 119466, 252, 1, 250, 133, 1, 0, 0,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		5768385069323101,
		[]
	]
,	[
		"t56",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9363863436978317,
			[
				["images/tileimage-sheet0.png", 311316, 1, 1, 250, 133, 1, 0, 0,[],[],0],
				["images/tileimage-sheet0.png", 311316, 252, 1, 250, 133, 1, 0, 0,[],[],0],
				["images/tileimage-sheet0.png", 311316, 1, 135, 250, 133, 1, 0, 0,[],[],0],
				["images/tileimage-sheet0.png", 311316, 252, 135, 250, 133, 1, 0, 0,[],[],0],
				["images/tileimage-sheet0.png", 311316, 1, 269, 250, 133, 1, 0, 0,[],[],0],
				["images/tileimage-sheet0.png", 311316, 252, 269, 250, 133, 1, 0, 0,[],[],0],
				["images/tileimage-sheet1.png", 119466, 1, 1, 250, 133, 1, 0, 0,[],[],0],
				["images/tileimage-sheet1.png", 119466, 252, 1, 250, 133, 1, 0, 0,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		4637380383134504,
		[]
	]
,	[
		"t57",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		2248564590928525,
		[]
	]
,	[
		"t58",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		3550867937076193,
		[]
	]
,	[
		"t59",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		9422572694294135,
		[]
	]
,	[
		"t60",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		3215944291476395,
		[]
	]
,	[
		"t61",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		8168801339714006,
		[]
	]
,	[
		"t62",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		5965272616388159,
		[]
	]
,	[
		"t63",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		9617089026838193,
		[]
	]
,	[
		"t64",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		4301517059209621,
		[]
	]
,	[
		"t65",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		7068549670026012,
		[]
	]
,	[
		"t66",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		7625857053733261,
		[]
	]
,	[
		"t67",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		307003991801257,
		[]
	]
,	[
		"t68",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		1441636990613437,
		[]
	]
,	[
		"t69",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		4966390242902803,
		[]
	]
,	[
		"t70",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		7507836522985025,
		[]
	]
,	[
		"t71",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		4454349904690418,
		[]
	]
,	[
		"t72",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		6005185036036177,
		[]
	]
,	[
		"t73",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		4492785873496361,
		[]
	]
,	[
		"t74",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		92142834508073,
		[]
	]
,	[
		"t75",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		1002137057880073,
		[]
	]
,	[
		"t76",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		6444267877019309,
		[]
	]
,	[
		"t77",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		7064831049626557,
		[]
	]
,	[
		"t78",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		4793541449929159,
		[]
	]
,	[
		"t79",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		6817280493505009,
		[]
	]
,	[
		"t80",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		5128920944022042,
		[]
	]
,	[
		"t81",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		1128699082344956,
		[]
	]
,	[
		"t82",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		3148153427999133,
		[]
	]
,	[
		"t83",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		957422863875827,
		[]
	]
,	[
		"t84",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		1505413125613833,
		[]
	]
,	[
		"t85",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		3701693809578199,
		[]
	]
,	[
		"t86",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		7917422244835317,
		[]
	]
,	[
		"t87",
		cr.plugins_.Mouse,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		3613374508068133,
		[]
		,[]
	]
,	[
		"t88",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1930231760058421,
			[
				["images/page1parentspawn-sheet0.png", 168, 0, 0, 250, 250, 1, 0.5, 0.5,[],[],3]
			]
			]
		],
		[
		],
		false,
		false,
		2475720639237909,
		[]
	]
,	[
		"t89",
		cr.plugins_.Keyboard,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		3301804376197008,
		[]
		,[]
	]
,	[
		"t90",
		cr.plugins_.TiledBg,
		false,
		[],
		0,
		0,
		["images/tiledbackground.png", 169, 3],
		null,
		[
		],
		false,
		false,
		5336361655280387,
		[]
	]
,	[
		"t91",
		cr.plugins_.Sprite,
		false,
		[4732580993820909,8954058842959232,3760724372900533,4167270263392477,9574301763638321,760242904498921,1999554757518779,2263003326010933,7370847599918289,9116189202803946,1901534155229682,5997734263958756,5047137878225958,6305235099031622],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2248532160537711,
			[
				["images/elevator-sheet0.png", 671, 1, 1, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0.46875,-0.46875,0.46875,0.46875,-0.46875,0.46875],0],
				["images/elevator-sheet0.png", 671, 66, 1, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0.46875,-0.46875,0.46875,0.46875,-0.46875,0.46875],0],
				["images/elevator-sheet0.png", 671, 131, 1, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0.46875,-0.46875,0.46875,0.46875,-0.46875,0.46875],0],
				["images/elevator-sheet0.png", 671, 1, 66, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0.46875,-0.46875,0.46875,0.46875,-0.46875,0.46875],0],
				["images/elevator-sheet0.png", 671, 66, 66, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0.46875,-0.46875,0.46875,0.46875,-0.46875,0.46875],0],
				["images/elevator-sheet0.png", 671, 131, 66, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0.46875,-0.46875,0.46875,0.46875,-0.46875,0.46875],0],
				["images/elevator-sheet0.png", 671, 1, 131, 64, 64, 1, 0.5, 0.5,[],[-0.46875,-0.46875,0.46875,-0.46875,0.46875,0.46875,-0.46875,0.46875],0]
			]
			]
		],
		[
		],
		false,
		false,
		762926561116561,
		[]
	]
,	[
		"t92",
		cr.plugins_.Button,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		7288471581072565,
		[]
	]
,	[
		"t93",
		cr.plugins_.Browser,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		6485348506616249,
		[]
		,[]
	]
,	[
		"t94",
		cr.plugins_.FileSaver,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		9509613718088986,
		[]
	]
,	[
		"t95",
		cr.plugins_.Dictionary,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		true,
		false,
		7093351780070283,
		[]
	]
,	[
		"t96",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		5404300813453478,
		[]
	]
,	[
		"t97",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6510537422640916,
			[
				["images/infospawnpane-sheet0.png", 5095, 0, 0, 252, 205, 1, 0, 0,[],[0.0436508,0.0536585,0.5,0,0.956349,0.0536585,1,0.497561,1,1,0,1,0,0.497561],0]
			]
			]
		],
		[
		],
		false,
		false,
		3923112949520486,
		[]
	]
,	[
		"t98",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		9057205233313445,
		[]
	]
,	[
		"t99",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		4798904439815875,
		[]
	]
,	[
		"t100",
		cr.plugins_.Sprite,
		true,
		[4732580993820909,8954058842959232,3760724372900533,4167270263392477,9574301763638321,760242904498921,1999554757518779,2263003326010933,7370847599918289,9116189202803946,1901534155229682,5997734263958756,5047137878225958,6305235099031622],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		2778332634908776,
		[]
	]
,	[
		"t101",
		cr.plugins_.Sprite,
		true,
		[1732772833143429,1686753345007427,1617611350283224],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		1346063984015658,
		[]
	]
,	[
		"t102",
		cr.plugins_.Sprite,
		true,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		29377459351113,
		[]
	]
,	[
		"t103",
		cr.plugins_.Sprite,
		true,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		9256363896620725,
		[]
	]
,	[
		"t104",
		cr.plugins_.Sprite,
		true,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		6072809830404293,
		[]
	]
,	[
		"t105",
		cr.plugins_.Text,
		true,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		5275963553748365,
		[]
	]
,	[
		"t106",
		cr.plugins_.TiledBg,
		true,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		7887872809913375,
		[]
	]
,	[
		"t107",
		cr.plugins_.Sprite,
		true,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		2599409551858137,
		[]
	]
,	[
		"t108",
		cr.plugins_.Text,
		true,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		8961357056367021,
		[]
	]
	],
	[
		[100,3,5,91,0,4,1,6,2]
,		[101,11,13,14,7,12,8,15,9]
,		[102,22,20,19,17,21,16,18]
,		[103,11,13,14,7,12,8,15,9]
,		[104,26,23,24,25]
,		[105,61,62,71,72,67,68,57,58,73,74,63,64,65,66,59,60,70,69]
,		[106,53,48]
,		[107,40,41,42,43,44,45,46]
,		[108,82,83,81,75,76,78,79,80,77]
	],
	[
	[
		"Editing Window",
		4000,
		4000,
		false,
		"Event sheet 1",
		801976034567327,
		[
		[
			"Background",
			0,
			1069672684701737,
			true,
			[255, 255, 255],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 4000, 4000, 0, 0, 1, 0, 0, 0, 0, []],
				48,
				1,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
,			[
				[1378, -319, 0, 1, 1, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				10,
				15,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[0, 0, 0, 4000, 4000, 0, 0, 1, 0, 0, 0, 0, []],
				53,
				56,
				[
				],
				[
				],
				[
					1,
					0
				]
			]
			],
			[			]
		]
,		[
			"Tiles",
			1,
			2495952356993912,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"User Interface BG",
			2,
			9689590940446805,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			0,
			0,
			0,
			[
			[
				[-500, 5, 0, 128, 1200, 0, 0, 1, 0, 0, 0, 0, []],
				47,
				3,
				[
				],
				[
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					0
				]
			]
,			[
				[-433, -462, 0, 145, 30, 0, 0, 1, 0, 0, 0, 0, []],
				84,
				6,
				[
				],
				[
				],
				[
					"ViewportX",
					1,
					"18pt Segoe UI Mono",
					"rgb(204,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[881, -269, 0, 270, 42, 0, 0, 1, 0, 0, 0, 0, []],
				49,
				17,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[4011, -7, 0, 300, 1200, 0, 0, 1, 0, 0, 0, 0, []],
				50,
				25,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
,			[
				[-508, 1242, 0, 300, 379, 0, 0, 1, 0, 0, 0, 0, []],
				52,
				34,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"User Interface Text",
			3,
			1052169282587108,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[1224, -456, 0, 150, 30, 0, 0, 1, 0, 0, 0, 0, []],
				57,
				29,
				[
				],
				[
				],
				[
					"Credits:",
					0,
					"12pt Segoe WP Semibold",
					"rgb(255,255,255)",
					2,
					0,
					0,
					0,
					0
				]
			]
,			[
				[1378, -455, 0, 150, 30, 0, 0, 1, 0, 0, 0, 0, []],
				58,
				30,
				[
				],
				[
				],
				[
					"000,000",
					0,
					"12pt Segoe WP SemiLight",
					"rgb(255,255,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[1223, -426, 0, 150, 30, 0, 0, 1, 0, 0, 0, 0, []],
				59,
				31,
				[
				],
				[
				],
				[
					"Nano Spores:",
					0,
					"12pt Segoe WP Semibold",
					"rgb(255,255,255)",
					2,
					0,
					0,
					0,
					0
				]
			]
,			[
				[1379, -426, 0, 150, 30, 0, 0, 1, 0, 0, 0, 0, []],
				60,
				32,
				[
				],
				[
				],
				[
					"000,000",
					0,
					"12pt Segoe WP SemiLight",
					"rgb(255,255,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[1221, -489, 0, 150, 30, 0, 0, 1, 0, 0, 0, 0, []],
				61,
				42,
				[
				],
				[
				],
				[
					"Alloy Plate:",
					0,
					"12pt Segoe WP Semibold",
					"rgb(255,255,255)",
					2,
					0,
					0,
					0,
					0
				]
			]
,			[
				[1381, -493, 0, 150, 30, 0, 0, 1, 0, 0, 0, 0, []],
				62,
				43,
				[
				],
				[
				],
				[
					"000,000",
					0,
					"12pt Segoe WP SemiLight",
					"rgb(255,255,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[1221, -396, 0, 150, 30, 0, 0, 1, 0, 0, 0, 0, []],
				63,
				44,
				[
				],
				[
				],
				[
					"Ferrite:",
					0,
					"12pt Segoe WP Semibold",
					"rgb(255,255,255)",
					2,
					0,
					0,
					0,
					0
				]
			]
,			[
				[1377, -395, 0, 150, 30, 0, 0, 1, 0, 0, 0, 0, []],
				64,
				45,
				[
				],
				[
				],
				[
					"000,000",
					0,
					"12pt Segoe WP SemiLight",
					"rgb(255,255,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[1457, -497, 0, 150, 30, 0, 0, 1, 0, 0, 0, 0, []],
				65,
				46,
				[
				],
				[
				],
				[
					"Forma:",
					0,
					"12pt Segoe WP Semibold",
					"rgb(255,255,255)",
					2,
					0,
					0,
					0,
					0
				]
			]
,			[
				[1609, -496, 0, 150, 30, 0, 0, 1, 0, 0, 0, 0, []],
				66,
				47,
				[
				],
				[
				],
				[
					"000,000",
					0,
					"12pt Segoe WP SemiLight",
					"rgb(255,255,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[1673, -499, 0, 150, 30, 0, 0, 1, 0, 0, 0, 0, []],
				67,
				48,
				[
				],
				[
				],
				[
					"Circuits:",
					0,
					"12pt Segoe WP Semibold",
					"rgb(255,255,255)",
					2,
					0,
					0,
					0,
					0
				]
			]
,			[
				[1828, -499, 0, 150, 30, 0, 0, 1, 0, 0, 0, 0, []],
				68,
				49,
				[
				],
				[
				],
				[
					"000,000",
					0,
					"12pt Segoe WP SemiLight",
					"rgb(255,255,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[1674, -471, 0, 150, 30, 0, 0, 1, 0, 0, 0, 0, []],
				70,
				50,
				[
				],
				[
				],
				[
					"Salvage:",
					0,
					"12pt Segoe WP Semibold",
					"rgb(255,255,255)",
					2,
					0,
					0,
					0,
					0
				]
			]
,			[
				[1830, -469, 0, 150, 30, 0, 0, 1, 0, 0, 0, 0, []],
				69,
				51,
				[
				],
				[
				],
				[
					"000,000",
					0,
					"12pt Segoe WP SemiLight",
					"rgb(255,255,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[1674, -443, 0, 150, 30, 0, 0, 1, 0, 0, 0, 0, []],
				71,
				52,
				[
				],
				[
				],
				[
					"Current Capacity:",
					0,
					"12pt Segoe WP Semibold",
					"rgb(255,255,255)",
					2,
					0,
					0,
					0,
					0
				]
			]
,			[
				[1830, -441, 0, 150, 30, 0, 0, 1, 0, 0, 0, 0, []],
				72,
				53,
				[
				],
				[
				],
				[
					"000,000",
					0,
					"12pt Segoe WP SemiLight",
					"rgb(255,255,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[1676, -416, 0, 150, 30, 0, 0, 1, 0, 0, 0, 0, []],
				73,
				54,
				[
				],
				[
				],
				[
					"Current Energy:",
					0,
					"12pt Segoe WP Semibold",
					"rgb(255,255,255)",
					2,
					0,
					0,
					0,
					0
				]
			]
,			[
				[1832, -415, 0, 150, 30, 0, 0, 1, 0, 0, 0, 0, []],
				74,
				55,
				[
				],
				[
				],
				[
					"000,000",
					0,
					"12pt Segoe WP SemiLight",
					"rgb(255,255,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"User Interface Buttons",
			4,
			5046480641176239,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[-425, -414, 0, 120, 30, 0, 0, 1, 0, 0, 0, 0, []],
				86,
				16,
				[
				],
				[
				],
				[
					"Page 1",
					0,
					"12pt Segoe UI Semilight",
					"rgb(255,255,255)",
					0,
					1,
					0,
					0,
					0
				]
			]
,			[
				[2232, -285, 0, 32, 32, 0, 0, 1, 0, 0, 0, 0, []],
				22,
				24,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2128, -285, 0, 32, 32, 0, 0, 1, 0, 0, 0, 0, []],
				20,
				22,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2077, -286, 0, 32, 32, 0, 0, 1, 0, 0, 0, 0, []],
				19,
				21,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1971, -286, 0, 32, 32, 0, 0, 1, 0, 0, 0, 0, []],
				17,
				19,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2189, -286, 0, 32, 32, 0, 0, 1, 0, 0, 0, 0, []],
				21,
				23,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1922, -285, 0, 32, 32, 0, 0, 1, 0, 0, 0, 0, []],
				16,
				18,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2017, -286, 0, 32, 32, 0, 0, 1, 0, 0, 0, 0, []],
				18,
				20,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1212, -220, 0, 211, 22, 0, 0, 1, 0, 0, 0, 0, []],
				23,
				26,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1188, -194, 0, 300, 22, 0, 0, 1, 0, 0, 0, 0, []],
				24,
				27,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1213, -255, 0, 128, 22, 0, 0, 1, 0, 0, 0, 0, []],
				25,
				13,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1212, -126, 0, 64, 25, 0, 0, 1, 0, 0, 0, 0, []],
				27,
				14,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[1289, -127, 0, 65, 25, 0, 0, 1, 0, 0, 0, 0, []],
				28,
				28,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[511, -407, 0, 150, 22, 0, 0, 1, 0, 0, 0, 0, []],
				30,
				36,
				[
				],
				[
				],
				[
					"Ghost;Shadow;Storm;Mountain;Moon",
					"",
					1,
					1,
					1,
					0,
					1,
					""
				]
			]
,			[
				[1189, -162, 0, 300, 22, 0, 0, 1, 0, 0, 0, 0, []],
				26,
				33,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[422, -324, 0, 120, 20, 0, 0, 1, 0, 0, 0, 0, []],
				33,
				38,
				[
				],
				[
				],
				[
					0,
					"SAVE FILE",
					"",
					1,
					1,
					1,
					"",
					0
				]
			]
,			[
				[554, -325, 0, 120, 20, 0, 0, 1, 0, 0, 0, 0, []],
				34,
				39,
				[
				],
				[
				],
				[
					0,
					"LOAD FILE",
					"",
					1,
					1,
					1,
					"",
					0
				]
			]
,			[
				[416, -300, 0, 250, 20, 0, 0, 1, 0, 0, 0, 0, []],
				35,
				40,
				[
				],
				[
				],
				[
					0,
					"DELETE ALL TILES",
					"",
					1,
					1,
					1,
					"",
					0
				]
			]
,			[
				[809, -438, 0, 32, 32, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				37,
				57,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[866, -440, 0, 32, 32, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				38,
				58,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[394, -407, 0, 100, 22, 0, 0, 1, 0, 0, 0, 0, []],
				31,
				37,
				[
				],
				[
				],
				[
					"Clan Tier:",
					0,
					"12pt Segoe WP Semibold",
					"rgb(255,255,255)",
					2,
					0,
					0,
					0,
					0
				]
			]
,			[
				[426, -376, 0, 250, 20, 0, 0, 1, 0, 0, 0, 0, []],
				32,
				35,
				[
				],
				[
				],
				[
					"You must delete all tiles if you change this!",
					0,
					"8pt Segoe UI Semibold",
					"rgb(255,255,255)",
					1,
					0,
					0,
					0,
					0
				]
			]
,			[
				[421, -277, 0, 275, 64, 0, 0, 1, 0, 0, 0, 0, []],
				36,
				41,
				[
				],
				[
				],
				[
					"  ©2014 Digital Extremes Ltd. All rights reserved. Warframe and the Warframe logo are registered trademarks of Digital Extremes Ltd. I am not associated with Digital Extremes in any way.",
					0,
					"8pt Segoe UI",
					"rgb(255,255,255)",
					1,
					0,
					0,
					0,
					0
				]
			]
,			[
				[451, -354, 0, 250, 25, 0, 0, 1, 0, 0, 0, 0, []],
				39,
				59,
				[
				],
				[
				],
				[
					"Application Background",
					0,
					"12pt Segoe WP Semibold",
					"rgb(255,255,255)",
					1,
					0,
					0,
					0,
					0
				]
			]
,			[
				[-100, 210, 0, 72, 66, 0, 0, 1, 0, 0, 0, 0, []],
				11,
				78,
				[
					"Cross Connector",
					-10,
					-3
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-100, 0, 0, 72, 66, 0, 0, 1, 0, 0, 0, 0, []],
				7,
				4,
				[
					"Garden",
					-10,
					-6
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-100, 140, 0, 72, 66, 0, 0, 1, 0, 0, 0, 0, []],
				9,
				9,
				[
					"T Connector",
					-5,
					-2
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-100, 70, 0, 72, 66, 0, 0, 1, 0, 0, 0, 0, []],
				8,
				10,
				[
					"Reactor",
					25,
					-5
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-100, 280, 0, 72, 66, 0, 0, 1, 0, 0, 0, 0, []],
				12,
				80,
				[
					"Extended Hallway",
					-2,
					-2
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-100, 350, 0, 72, 66, 0, 0, 1, 0, 0, 0, 0, []],
				13,
				81,
				[
					"Elbow Connector",
					-2,
					-2
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-100, 420, 0, 72, 66, 0, 0, 1, 0, 0, 0, 0, []],
				15,
				83,
				[
					"Straight Hallway",
					-1,
					-1
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-100, 490, 0, 72, 66, 0, 0, 1, 0, 0, 0, 0, []],
				14,
				85,
				[
					"Elevator",
					-2,
					-2
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[437, -193, 0, 250, 20, 0, 0, 1, 0, 0, 0, 0, []],
				92,
				87,
				[
				],
				[
				],
				[
					0,
					"GENERATE SCREENSHOT",
					"",
					1,
					1,
					1,
					"",
					0
				]
			]
			],
			[			]
		]
,		[
			"Pop-up BG",
			5,
			362187735543322,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[-505, 1647, 0, 252, 285, 0, 0, 1, 0, 0, 0, 0, []],
				54,
				60,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-505, 1935, 0, 252, 205, 0, 0, 1, 0, 0, 0, 0, []],
				97,
				91,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Pop-up Image",
			6,
			4413646062047661,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[-401, -351, 0, 250, 133, 0, 0, 1, 0, 0, 0, 0, []],
				55,
				12,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-148, -351, 0, 250, 133, 0, 0, 1, 0, 0, 0, 0, []],
				56,
				92,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Pop-up Text",
			7,
			6532078444195511,
			true,
			[255, 255, 255],
			true,
			0,
			0,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[1996, -411, 0, 220, 30, 0, 0, 1, 0, 0, 0, 0, []],
				77,
				0,
				[
				],
				[
				],
				[
					"TILE NAME",
					0,
					"12pt Segoe WP Semibold",
					"rgb(255,255,255)",
					2,
					1,
					0,
					0,
					0
				]
			]
,			[
				[1984, -487, 0, 90, 20, 0, 0, 1, 0, 0, 0, 0, []],
				75,
				69,
				[
				],
				[
				],
				[
					"text",
					0,
					"7pt Segoe UI Semibold",
					"rgb(255,255,255)",
					0,
					1,
					0,
					0,
					0
				]
			]
,			[
				[2093, -485, 0, 90, 20, 0, 0, 1, 0, 0, 0, 0, []],
				76,
				71,
				[
				],
				[
				],
				[
					"text",
					0,
					"7pt Segoe UI Semibold",
					"rgb(255,255,255)",
					0,
					1,
					0,
					0,
					0
				]
			]
,			[
				[1987, -463, 0, 90, 20, 0, 0, 1, 0, 0, 0, 0, []],
				78,
				70,
				[
				],
				[
				],
				[
					"text",
					0,
					"7pt Segoe UI Semibold",
					"rgb(255,255,255)",
					0,
					1,
					0,
					0,
					0
				]
			]
,			[
				[2088, -464, 0, 90, 20, 0, 0, 1, 0, 0, 0, 0, []],
				79,
				72,
				[
				],
				[
				],
				[
					"text",
					0,
					"7pt Segoe UI Semibold",
					"rgb(255,255,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[1983, -442, 0, 90, 20, 0, 0, 1, 0, 0, 0, 0, []],
				80,
				73,
				[
				],
				[
				],
				[
					"text",
					0,
					"7pt Segoe UI Semibold",
					"rgb(255,255,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[2226, -494, 0, 30, 20, 0, 0, 1, 0, 0, 0, 0, []],
				81,
				74,
				[
				],
				[
				],
				[
					"-6",
					0,
					"8pt Segoe UI Light",
					"rgb(255,255,255)",
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[2230, -474, 0, 30, 20, 0, 0, 1, 0, 0, 0, 0, []],
				82,
				75,
				[
				],
				[
				],
				[
					"-10",
					0,
					"8pt Segoe UI Light",
					"rgb(255,255,255)",
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[2703, -448, 0, 32, 20, 0, 0, 1, 0, 0, 0, 0, []],
				41,
				63,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2503, -456, 0, 32, 20, 0, 0, 1, 0, 0, 0, 0, []],
				40,
				11,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2916, -446, 0, 32, 20, 0, 0, 1, 0, 0, 0, 0, []],
				42,
				64,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2519, -290, 0, 32, 20, 0, 0, 1, 0, 0, 0, 0, []],
				43,
				65,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2727, -284, 0, 32, 20, 0, 0, 1, 0, 0, 0, 0, []],
				44,
				66,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2922, -268, 0, 32, 20, 0, 0, 1, 0, 0, 0, 0, []],
				45,
				67,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[3155, -456, 0, 32, 20, 0, 0, 1, 0, 0, 0, 0, []],
				46,
				68,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[2002, -373, 0, 220, 30, 0, 0, 1, 0, 0, 0, 0, []],
				96,
				90,
				[
				],
				[
				],
				[
					"SPAWN TILE NAME",
					0,
					"12pt Segoe WP Semibold",
					"rgb(255,255,255)",
					2,
					1,
					0,
					0,
					0
				]
			]
,			[
				[-286, -461, 0, 145, 30, 0, 0, 1, 0, 0, 0, 0, []],
				85,
				7,
				[
				],
				[
				],
				[
					"ViewportY",
					0,
					"18pt Segoe UI Mono",
					"rgb(204,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[2301.43, -489.588, 0, 30, 20, 0, 0, 1, 0, 0, 0, 0, []],
				98,
				76,
				[
				],
				[
				],
				[
					"-6",
					0,
					"8pt Segoe UI Light",
					"rgb(255,255,255)",
					1,
					1,
					0,
					0,
					0
				]
			]
,			[
				[2300.77, -470.109, 0, 30, 20, 0, 0, 1, 0, 0, 0, 0, []],
				99,
				93,
				[
				],
				[
				],
				[
					"-10",
					0,
					"8pt Segoe UI Light",
					"rgb(255,255,255)",
					1,
					1,
					0,
					0,
					0
				]
			]
			],
			[			]
		]
		],
		[
			[
				null,
				95,
				89,
				[
				],
				[
				],
				[
				]
			]
		],
		[]
	]
,	[
		"TILE GRAVEYARD",
		10,
		10,
		false,
		null,
		7709547786134993,
		[
		[
			"Layer 0",
			0,
			804018393605614,
			true,
			[255, 255, 255],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[179, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				0,
				2,
				[
					0,
					0,
					0,
					"Garden",
					-6,
					-10,
					22500,
					0,
					0,
					16500,
					2,
					60000,
					19500,
					15
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[107, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				1,
				61,
				[
					0,
					0,
					0,
					"Reactor",
					25,
					-5,
					50000,
					15000,
					35000,
					0,
					5,
					0,
					65000,
					0
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[37, 32, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				2,
				62,
				[
					0,
					0,
					0,
					"T Connector",
					-2,
					-5,
					15000,
					0,
					0,
					10500,
					1,
					36000,
					19500,
					15
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[37, 96, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				3,
				77,
				[
					0,
					0,
					0,
					"Cross Connector",
					-3,
					-10,
					15000,
					0,
					0,
					10500,
					1,
					36000,
					19500,
					15
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[37, 160, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				4,
				79,
				[
					0,
					0,
					0,
					"Extended Hallway",
					-2,
					-2,
					22500,
					0,
					0,
					16500,
					2,
					60000,
					19500,
					15
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[37, 198.53, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				5,
				82,
				[
					0,
					0,
					0,
					"Elbow Connector",
					-1,
					-1,
					22500,
					0,
					0,
					16500,
					2,
					60000,
					19500,
					15
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[37, 255.443, 0, 32, 32, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				6,
				84,
				[
					0,
					0,
					0,
					"Straight Hallway",
					-1,
					-1,
					22500,
					0,
					0,
					16500,
					2,
					60000,
					19500,
					15
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[37, 305.359, 0, 64, 64, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				91,
				86,
				[
					0,
					0,
					0,
					"Elevator",
					-2,
					-2,
					22500,
					0,
					0,
					16500,
					2,
					60000,
					19500,
					15
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
	],
	[
	[
		"Event sheet 1",
		[
		[
			1,
			"SpawnRowCounter",
			0,
			0,
false,false,3624735847675558
		]
,		[
			1,
			"screenshot",
			0,
			0,
false,false,3616304196177052
		]
,		[
			1,
			"totalCapacity",
			0,
			0,
false,false,5043595194571188
		]
,		[
			1,
			"totalEnergy",
			0,
			0,
false,false,6217894002342358
		]
,		[
			1,
			"totalCredits",
			0,
			0,
false,false,4889890402154951
		]
,		[
			1,
			"totalAlloyPlate",
			0,
			0,
false,false,3873173842258474
		]
,		[
			1,
			"totalCircuits",
			0,
			0,
false,false,4788201858417878
		]
,		[
			1,
			"totalFerrite",
			0,
			0,
false,false,9270564760159874
		]
,		[
			1,
			"totalForma",
			0,
			0,
false,false,2717496121246923
		]
,		[
			1,
			"totalNanoSpores",
			0,
			0,
false,false,5075786076872019
		]
,		[
			1,
			"totalSalvage",
			0,
			0,
false,false,9969215085675438
		]
,		[
			1,
			"tilePaneOpen",
			0,
			1,
false,false,7288338968347885
		]
,		[
			1,
			"optionsPaneOpen",
			0,
			-1,
false,false,8981163830190249
		]
,		[
			1,
			"palettePaneOpen",
			0,
			-1,
false,false,8436509350398353
		]
,		[
			1,
			"resourcePaneOpen",
			0,
			-1,
false,false,6511487784029497
		]
,		[
			1,
			"mouseHoverTile",
			0,
			0,
false,false,9249243081253304
		]
,		[
			1,
			"mouseHoverSpawn",
			0,
			0,
false,false,3606665602902164
		]
,		[
			1,
			"dojoPagination",
			0,
			0,
false,false,1422516575347927
		]
,		[
			1,
			"sMX",
			0,
			0,
false,false,9608595685769837
		]
,		[
			1,
			"sMY",
			0,
			0,
false,false,9170850694736241
		]
,		[
			1,
			"sSX",
			0,
			0,
false,false,9074807951842735
		]
,		[
			1,
			"sSY",
			0,
			0,
false,false,5766980421994893
		]
,		[
			1,
			"dragging",
			0,
			0,
false,false,1047137592816759
		]
,		[
			0,
			[true, "ManipulateViewPort"],
			false,
			7621660665196677,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				7621660665196677
				,[
				[
					1,
					[
						2,
						"ManipulateViewPort"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				916301452607822,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					3772912376131369
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.Scroll,
					null,
					6732315840548124
					,[
					[
						0,
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.layoutwidth
							]
							,[
								0,
								2
							]
						]
					]
,					[
						0,
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.layoutheight
							]
							,[
								0,
								2
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				936155154164741,
				[
				[
					87,
					cr.plugins_.Mouse.prototype.cnds.OnClick,
					null,
					1,
					false,
					false,
					false,
					9945586037509941
					,[
					[
						3,
						1
					]
,					[
						3,
						0
					]
					]
				]
,				[
					87,
					cr.plugins_.Mouse.prototype.cnds.IsOverObject,
					null,
					0,
					false,
					true,
					false,
					3257689031046851
					,[
					[
						4,
						100
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					2008811878417873
					,[
					[
						11,
						"dragging"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8588979846279318
					,[
					[
						11,
						"sMX"
					]
,					[
						7,
						[
							20,
							87,
							cr.plugins_.Mouse.prototype.exps.AbsoluteX,
							false,
							null
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8718293708843385
					,[
					[
						11,
						"sMY"
					]
,					[
						7,
						[
							20,
							87,
							cr.plugins_.Mouse.prototype.exps.AbsoluteY,
							false,
							null
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				9017776606954771,
				[
				[
					87,
					cr.plugins_.Mouse.prototype.cnds.IsButtonDown,
					null,
					0,
					false,
					true,
					false,
					5601555102919359
					,[
					[
						3,
						1
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					1774487471987559
					,[
					[
						11,
						"dragging"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					6474867363675623
					,[
					[
						11,
						"sSX"
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.scrollx
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7750506398048193
					,[
					[
						11,
						"sSY"
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.scrolly
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				1658392332893577,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					2839620288436623
					,[
					[
						11,
						"dragging"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.Scroll,
					null,
					9281630469831938
					,[
					[
						0,
						[
							5,
							[
								4,
								[
									23,
									"sSX"
								]
								,[
									23,
									"sMX"
								]
							]
							,[
								20,
								87,
								cr.plugins_.Mouse.prototype.exps.AbsoluteX,
								false,
								null
							]
						]
					]
,					[
						0,
						[
							5,
							[
								4,
								[
									23,
									"sSY"
								]
								,[
									23,
									"sMY"
								]
							]
							,[
								20,
								87,
								cr.plugins_.Mouse.prototype.exps.AbsoluteY,
								false,
								null
							]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "ManipulateDojoTiles"],
			false,
			1058082153280536,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				1058082153280536
				,[
				[
					1,
					[
						2,
						"ManipulateDojoTiles"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				8838547162414969,
				[
				[
					100,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					7428732772435246
					,[
					[
						10,
						0
					]
,					[
						8,
						1
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					100,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					7193735392063768
					,[
					[
						10,
						0
					]
,					[
						8,
						1
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					1258271212165328,
					[
					[
						87,
						cr.plugins_.Mouse.prototype.cnds.IsButtonDown,
						null,
						0,
						false,
						false,
						false,
						5237204235333728
						,[
						[
							3,
							0
						]
						]
					]
					],
					[
					[
						100,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						1463626481014839
						,[
						[
							0,
							[
								4,
								[
									20,
									87,
									cr.plugins_.Mouse.prototype.exps.X,
									false,
									null
								]
								,[
									6,
									[
										19,
										cr.system_object.prototype.exps.cos
										,[
[
											21,
											100,
											false,
											null
											,0
										]
										]
									]
									,[
										21,
										100,
										false,
										null
										,1
									]
								]
							]
						]
,						[
							0,
							[
								4,
								[
									20,
									87,
									cr.plugins_.Mouse.prototype.exps.Y,
									false,
									null
								]
								,[
									6,
									[
										19,
										cr.system_object.prototype.exps.sin
										,[
[
											21,
											100,
											false,
											null
											,0
										]
										]
									]
									,[
										21,
										100,
										false,
										null
										,1
									]
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					1040557410901888,
					[
					[
						87,
						cr.plugins_.Mouse.prototype.cnds.OnRelease,
						null,
						1,
						false,
						false,
						false,
						8658910257287623
						,[
						[
							3,
							0
						]
						]
					]
					],
					[
					[
						100,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						784241874231307
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						100,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						5718195430612705
						,[
						[
							10,
							1
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						100,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						6701827539877699
						,[
						[
							0,
							[
								5,
								[
									20,
									87,
									cr.plugins_.Mouse.prototype.exps.X,
									false,
									null
								]
								,[
									8,
									[
										5,
										[
											20,
											87,
											cr.plugins_.Mouse.prototype.exps.X,
											false,
											null
										]
										,[
											0,
											16
										]
									]
									,[
										0,
										16
									]
								]
							]
						]
,						[
							0,
							[
								5,
								[
									20,
									87,
									cr.plugins_.Mouse.prototype.exps.Y,
									false,
									null
								]
								,[
									8,
									[
										5,
										[
											20,
											87,
											cr.plugins_.Mouse.prototype.exps.Y,
											false,
											null
										]
										,[
											0,
											16
										]
									]
									,[
										0,
										16
									]
								]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				1632168984970093,
				[
				[
					87,
					cr.plugins_.Mouse.prototype.cnds.OnObjectClicked,
					null,
					1,
					false,
					false,
					false,
					9237484186413747
					,[
					[
						3,
						0
					]
,					[
						3,
						0
					]
,					[
						4,
						100
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					9055555656966118,
					[
					[
						100,
						cr.plugins_.Sprite.prototype.cnds.PickTopBottom,
						null,
						0,
						false,
						false,
						true,
						3961823391081966
						,[
						[
							3,
							0
						]
						]
					]
					],
					[
					[
						100,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						5027903802153714
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.angle
								,[
[
									20,
									87,
									cr.plugins_.Mouse.prototype.exps.X,
									false,
									null
								]
,[
									20,
									87,
									cr.plugins_.Mouse.prototype.exps.Y,
									false,
									null
								]
,[
									20,
									100,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
,[
									20,
									100,
									cr.plugins_.Sprite.prototype.exps.Y,
									false,
									null
								]
								]
							]
						]
						]
					]
,					[
						100,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						662861955839611
						,[
						[
							10,
							1
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.distance
								,[
[
									20,
									100,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
,[
									20,
									100,
									cr.plugins_.Sprite.prototype.exps.Y,
									false,
									null
								]
,[
									20,
									87,
									cr.plugins_.Mouse.prototype.exps.X,
									false,
									null
								]
,[
									20,
									87,
									cr.plugins_.Mouse.prototype.exps.Y,
									false,
									null
								]
								]
							]
						]
						]
					]
,					[
						100,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						9380109025224733
						,[
						[
							10,
							2
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					7881123894932512,
					[
					[
						100,
						cr.plugins_.Sprite.prototype.cnds.PickTopBottom,
						null,
						0,
						false,
						false,
						true,
						8531495323277098
						,[
						[
							3,
							0
						]
						]
					]
					],
					[
					[
						100,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2257741727092444
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.angle
								,[
[
									20,
									87,
									cr.plugins_.Mouse.prototype.exps.X,
									false,
									null
								]
,[
									20,
									87,
									cr.plugins_.Mouse.prototype.exps.Y,
									false,
									null
								]
,[
									20,
									100,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
,[
									20,
									100,
									cr.plugins_.Sprite.prototype.exps.Y,
									false,
									null
								]
								]
							]
						]
						]
					]
,					[
						100,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						9248412465756963
						,[
						[
							10,
							1
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.distance
								,[
[
									20,
									100,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
,[
									20,
									100,
									cr.plugins_.Sprite.prototype.exps.Y,
									false,
									null
								]
,[
									20,
									87,
									cr.plugins_.Mouse.prototype.exps.X,
									false,
									null
								]
,[
									20,
									87,
									cr.plugins_.Mouse.prototype.exps.Y,
									false,
									null
								]
								]
							]
						]
						]
					]
,					[
						100,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						3126277019038175
						,[
						[
							10,
							2
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				3535160437395033,
				[
				[
					87,
					cr.plugins_.Mouse.prototype.cnds.OnClick,
					null,
					1,
					false,
					false,
					false,
					361724792585919
					,[
					[
						3,
						0
					]
,					[
						3,
						0
					]
					]
				]
,				[
					87,
					cr.plugins_.Mouse.prototype.cnds.IsOverObject,
					null,
					0,
					false,
					true,
					false,
					6451973050243866
					,[
					[
						4,
						100
					]
					]
				]
,				[
					87,
					cr.plugins_.Mouse.prototype.cnds.IsOverObject,
					null,
					0,
					false,
					true,
					false,
					6610814349383458
					,[
					[
						4,
						102
					]
					]
				]
				],
				[
				[
					100,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					5965903986546965
					,[
					[
						10,
						2
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				3000627036940599,
				[
				[
					87,
					cr.plugins_.Mouse.prototype.cnds.OnObjectClicked,
					null,
					1,
					false,
					false,
					false,
					3676769108355731
					,[
					[
						3,
						2
					]
,					[
						3,
						0
					]
,					[
						4,
						100
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					1132349920611233,
					[
					[
						100,
						cr.plugins_.Sprite.prototype.cnds.PickTopBottom,
						null,
						0,
						false,
						false,
						true,
						7707821032256962
						,[
						[
							3,
							0
						]
						]
					]
					],
					[
					[
						100,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						5107008789341727
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.angle
								,[
[
									20,
									87,
									cr.plugins_.Mouse.prototype.exps.X,
									false,
									null
								]
,[
									20,
									87,
									cr.plugins_.Mouse.prototype.exps.Y,
									false,
									null
								]
,[
									20,
									100,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
,[
									20,
									100,
									cr.plugins_.Sprite.prototype.exps.Y,
									false,
									null
								]
								]
							]
						]
						]
					]
,					[
						100,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						5584184364807589
						,[
						[
							10,
							1
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.distance
								,[
[
									20,
									100,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
,[
									20,
									100,
									cr.plugins_.Sprite.prototype.exps.Y,
									false,
									null
								]
,[
									20,
									87,
									cr.plugins_.Mouse.prototype.exps.X,
									false,
									null
								]
,[
									20,
									87,
									cr.plugins_.Mouse.prototype.exps.Y,
									false,
									null
								]
								]
							]
						]
						]
					]
,					[
						100,
						cr.plugins_.Sprite.prototype.acts.RotateClockwise,
						null,
						6186541736090577
						,[
						[
							0,
							[
								0,
								90
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				4608321597071571,
				[
				[
					87,
					cr.plugins_.Mouse.prototype.cnds.OnObjectClicked,
					null,
					1,
					false,
					false,
					false,
					8970193880189322
					,[
					[
						3,
						1
					]
,					[
						3,
						0
					]
,					[
						4,
						100
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					55576528424534,
					[
					[
						100,
						cr.plugins_.Sprite.prototype.cnds.PickTopBottom,
						null,
						0,
						false,
						false,
						true,
						7862142087468198
						,[
						[
							3,
							0
						]
						]
					]
					],
					[
					[
						100,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						7935566987925052
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.angle
								,[
[
									20,
									87,
									cr.plugins_.Mouse.prototype.exps.X,
									false,
									null
								]
,[
									20,
									87,
									cr.plugins_.Mouse.prototype.exps.Y,
									false,
									null
								]
,[
									20,
									100,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
,[
									20,
									100,
									cr.plugins_.Sprite.prototype.exps.Y,
									false,
									null
								]
								]
							]
						]
						]
					]
,					[
						100,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						6801065914722171
						,[
						[
							10,
							1
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.distance
								,[
[
									20,
									100,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
,[
									20,
									100,
									cr.plugins_.Sprite.prototype.exps.Y,
									false,
									null
								]
,[
									20,
									87,
									cr.plugins_.Mouse.prototype.exps.X,
									false,
									null
								]
,[
									20,
									87,
									cr.plugins_.Mouse.prototype.exps.Y,
									false,
									null
								]
								]
							]
						]
						]
					]
,					[
						100,
						cr.plugins_.Sprite.prototype.acts.Destroy,
						null,
						2097895592531706
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "UI Viewport"],
			false,
			9905119126181509,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				9905119126181509
				,[
				[
					1,
					[
						2,
						"UI Viewport"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				2786115467831912,
				[
				[
					-1,
					cr.system_object.prototype.cnds.EveryTick,
					null,
					0,
					false,
					false,
					false,
					5504784191617674
				]
				],
				[
				[
					47,
					cr.plugins_.TiledBg.prototype.acts.SetPos,
					null,
					3177868297135196
					,[
					[
						0,
						[
							19,
							cr.system_object.prototype.exps.viewportleft
							,[
[
								0,
								2
							]
							]
						]
					]
,					[
						0,
						[
							19,
							cr.system_object.prototype.exps.viewporttop
							,[
[
								0,
								2
							]
							]
						]
					]
					]
				]
,				[
					49,
					cr.plugins_.Sprite.prototype.acts.SetPos,
					null,
					3431459472043244
					,[
					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								128
							]
						]
					]
,					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewporttop
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								680
							]
						]
					]
					]
				]
,				[
					16,
					cr.plugins_.Sprite.prototype.acts.SetPos,
					null,
					9390631524198824
					,[
					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								141
							]
						]
					]
,					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewporttop
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								685
							]
						]
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetPos,
					null,
					406756487624816
					,[
					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								176
							]
						]
					]
,					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewporttop
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								685
							]
						]
					]
					]
				]
,				[
					18,
					cr.plugins_.Sprite.prototype.acts.SetPos,
					null,
					7491750833264147
					,[
					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								211
							]
						]
					]
,					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewporttop
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								685
							]
						]
					]
					]
				]
,				[
					19,
					cr.plugins_.Sprite.prototype.acts.SetPos,
					null,
					6635108666293843
					,[
					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								246
							]
						]
					]
,					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewporttop
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								685
							]
						]
					]
					]
				]
,				[
					20,
					cr.plugins_.Sprite.prototype.acts.SetPos,
					null,
					3566760370098858
					,[
					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								281
							]
						]
					]
,					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewporttop
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								685
							]
						]
					]
					]
				]
,				[
					21,
					cr.plugins_.Sprite.prototype.acts.SetPos,
					null,
					8438670720276305
					,[
					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								316
							]
						]
					]
,					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewporttop
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								685
							]
						]
					]
					]
				]
,				[
					22,
					cr.plugins_.Sprite.prototype.acts.SetPos,
					null,
					6534105197587995
					,[
					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								351
							]
						]
					]
,					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewporttop
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								685
							]
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					3703695460679094,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						5148323407582081
						,[
						[
							11,
							"tilePaneOpen"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								-1
							]
						]
						]
					]
					],
					[
					[
						47,
						cr.plugins_.TiledBg.prototype.acts.SetPos,
						null,
						8869505060753567
						,[
						[
							0,
							[
								0,
								-1000
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						25,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						5286315856895113
						,[
						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									0
								]
							]
						]
,						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewporttop
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									698
								]
							]
						]
						]
					]
,					[
						25,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						5468387384475463
						,[
						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						86,
						cr.plugins_.Text.prototype.acts.SetPos,
						null,
						2267777003646837
						,[
						[
							0,
							[
								0,
								-1000
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						27,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						4817387807130644
						,[
						[
							0,
							[
								0,
								-1000
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						28,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						7979665963288327
						,[
						[
							0,
							[
								0,
								-1000
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						7,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						7032109052156442
						,[
						[
							0,
							[
								0,
								-1000
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						8,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						8548618150437588
						,[
						[
							0,
							[
								0,
								-1000
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						9,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						9547096699067661
						,[
						[
							0,
							[
								0,
								-1000
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						11,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						9896090489446619
						,[
						[
							0,
							[
								0,
								-1000
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						12,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						9436233985038843
						,[
						[
							0,
							[
								0,
								-1000
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						13,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						1285979630710527
						,[
						[
							0,
							[
								0,
								-1000
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						15,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						7783976899627144
						,[
						[
							0,
							[
								0,
								-1000
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						14,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						5850604296519744
						,[
						[
							0,
							[
								0,
								-1000
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					7634650807641684,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						8867725077534887
						,[
						[
							11,
							"tilePaneOpen"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						47,
						cr.plugins_.TiledBg.prototype.acts.SetPos,
						null,
						7070514568146656
						,[
						[
							0,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									2
								]
								]
							]
						]
,						[
							0,
							[
								19,
								cr.system_object.prototype.exps.viewporttop
								,[
[
									0,
									2
								]
								]
							]
						]
						]
					]
,					[
						25,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						2545262448363914
						,[
						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									0
								]
							]
						]
,						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewporttop
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									0
								]
							]
						]
						]
					]
,					[
						25,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						2053632350867469
						,[
						[
							0,
							[
								0,
								1
							]
						]
						]
					]
,					[
						86,
						cr.plugins_.Text.prototype.acts.SetPos,
						null,
						3035785837883476
						,[
						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									10
								]
							]
						]
,						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewporttop
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									668
								]
							]
						]
						]
					]
,					[
						27,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						8376968926357967
						,[
						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									0
								]
							]
						]
,						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewporttop
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									695
								]
							]
						]
						]
					]
,					[
						28,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						6011571782670262
						,[
						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									63
								]
							]
						]
,						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewporttop
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									695
								]
							]
						]
						]
					]
,					[
						7,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						4450790115907303
						,[
						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									30
								]
							]
						]
,						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewporttop
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									30
								]
							]
						]
						]
					]
,					[
						8,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						9248040370969779
						,[
						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									30
								]
							]
						]
,						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewporttop
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									100
								]
							]
						]
						]
					]
,					[
						11,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						5380771536351587
						,[
						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									30
								]
							]
						]
,						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewporttop
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									170
								]
							]
						]
						]
					]
,					[
						9,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						5326943382024361
						,[
						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									30
								]
							]
						]
,						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewporttop
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									240
								]
							]
						]
						]
					]
,					[
						13,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						1236988038788851
						,[
						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									30
								]
							]
						]
,						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewporttop
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									310
								]
							]
						]
						]
					]
,					[
						12,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						8499422597832891
						,[
						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									30
								]
							]
						]
,						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewporttop
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									380
								]
							]
						]
						]
					]
,					[
						15,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						4945443935352884
						,[
						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									30
								]
							]
						]
,						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewporttop
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									450
								]
							]
						]
						]
					]
,					[
						14,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						8251484066239881
						,[
						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									30
								]
							]
						]
,						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewporttop
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									520
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					1284711867380008,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						1364334737600194
						,[
						[
							11,
							"resourcePaneOpen"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								-1
							]
						]
						]
					]
					],
					[
					[
						50,
						cr.plugins_.TiledBg.prototype.acts.SetPos,
						null,
						4283142691252161
						,[
						[
							0,
							[
								0,
								-1000
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						24,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						9863870965807169
						,[
						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									980
								]
							]
						]
,						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewporttop
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									698
								]
							]
						]
						]
					]
,					[
						24,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						4283594001342483
						,[
						[
							0,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					5450912157188264,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						6236885940915783
						,[
						[
							11,
							"resourcePaneOpen"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								-1
							]
						]
						]
					]
					],
					[
					[
						50,
						cr.plugins_.TiledBg.prototype.acts.SetPos,
						null,
						3107452974769527
						,[
						[
							0,
							[
								0,
								-1000
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						24,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						6075409085355555
						,[
						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									980
								]
							]
						]
,						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewporttop
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									698
								]
							]
						]
						]
					]
,					[
						24,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						3119947906279288
						,[
						[
							0,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					3068241359044652,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						7301168961688813
						,[
						[
							11,
							"resourcePaneOpen"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						50,
						cr.plugins_.TiledBg.prototype.acts.SetPos,
						null,
						6151438300618381
						,[
						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									980
								]
							]
						]
,						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewporttop
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									22
								]
							]
						]
						]
					]
,					[
						24,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						167016572917091
						,[
						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									980
								]
							]
						]
,						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewporttop
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									0
								]
							]
						]
						]
					]
,					[
						24,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						1846313832159315
						,[
						[
							0,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					2217075426972864,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						8112228555117827
						,[
						[
							11,
							"palettePaneOpen"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								-1
							]
						]
						]
					]
					],
					[
					[
						49,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						534584019029389
						,[
						[
							0,
							[
								0,
								-1000
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						23,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						3655164450320993
						,[
						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									127
								]
							]
						]
,						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewporttop
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									698
								]
							]
						]
						]
					]
,					[
						102,
						cr.plugins_.Sprite.prototype.acts.SetSize,
						null,
						1370650181504203
						,[
						[
							0,
							[
								0,
								0
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						23,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						7494351353321162
						,[
						[
							0,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					223973975566594,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						4395976298395176
						,[
						[
							11,
							"palettePaneOpen"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						23,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						8013439488426921
						,[
						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									127
								]
							]
						]
,						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewporttop
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									659
								]
							]
						]
						]
					]
,					[
						49,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						9243887898021206
						,[
						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									127
								]
							]
						]
,						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewporttop
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									680
								]
							]
						]
						]
					]
,					[
						23,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						1443923656964612
						,[
						[
							0,
							[
								0,
								1
							]
						]
						]
					]
,					[
						102,
						cr.plugins_.Sprite.prototype.acts.SetSize,
						null,
						2774515203333807
						,[
						[
							0,
							[
								0,
								32
							]
						]
,						[
							0,
							[
								0,
								32
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					5988105644216767,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						3144882306143766
						,[
						[
							11,
							"optionsPaneOpen"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								-1
							]
						]
						]
					]
					],
					[
					[
						52,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						2146602407506665
						,[
						[
							0,
							[
								0,
								-1000
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						26,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						9450970295262929
						,[
						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									681
								]
							]
						]
,						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewporttop
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									698
								]
							]
						]
						]
					]
,					[
						31,
						cr.plugins_.Text.prototype.acts.SetPos,
						null,
						4808654890999804
						,[
						[
							0,
							[
								0,
								-1000
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						30,
						cr.plugins_.List.prototype.acts.SetPos,
						null,
						1827633161640811
						,[
						[
							0,
							[
								0,
								-1000
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						26,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						59487546042713
						,[
						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						32,
						cr.plugins_.Text.prototype.acts.SetPos,
						null,
						6086741509554624
						,[
						[
							0,
							[
								0,
								-1000
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						39,
						cr.plugins_.Text.prototype.acts.SetPos,
						null,
						251465846007966
						,[
						[
							0,
							[
								0,
								-1000
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						36,
						cr.plugins_.Text.prototype.acts.SetPos,
						null,
						1719887372584056
						,[
						[
							0,
							[
								0,
								-1000
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						92,
						cr.plugins_.Button.prototype.acts.SetPos,
						null,
						6085236717266268
						,[
						[
							0,
							[
								0,
								-1000
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						34,
						cr.plugins_.Button.prototype.acts.SetPos,
						null,
						3310564520254611
						,[
						[
							0,
							[
								0,
								-1000
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						33,
						cr.plugins_.Button.prototype.acts.SetPos,
						null,
						82119348188973
						,[
						[
							0,
							[
								0,
								-1000
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						35,
						cr.plugins_.Button.prototype.acts.SetPos,
						null,
						6516445721477362
						,[
						[
							0,
							[
								0,
								-1000
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						37,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						2682852359176485
						,[
						[
							0,
							[
								0,
								-1000
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						38,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						2261660075808604
						,[
						[
							0,
							[
								0,
								-1000
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					4774972033531742,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						6508954649909332
						,[
						[
							11,
							"optionsPaneOpen"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						52,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						3961338377387864
						,[
						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									681
								]
							]
						]
,						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewporttop
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									341
								]
							]
						]
						]
					]
,					[
						26,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						2854352535718956
						,[
						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									681
								]
							]
						]
,						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewporttop
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									320
								]
							]
						]
						]
					]
,					[
						31,
						cr.plugins_.Text.prototype.acts.SetPos,
						null,
						490784811801102
						,[
						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									680
								]
							]
						]
,						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewporttop
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									360
								]
							]
						]
						]
					]
,					[
						32,
						cr.plugins_.Text.prototype.acts.SetPos,
						null,
						9162960858915716
						,[
						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									705
								]
							]
						]
,						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewporttop
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									385
								]
							]
						]
						]
					]
,					[
						39,
						cr.plugins_.Text.prototype.acts.SetPos,
						null,
						1981746299216442
						,[
						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									705
								]
							]
						]
,						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewporttop
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									410
								]
							]
						]
						]
					]
,					[
						36,
						cr.plugins_.Text.prototype.acts.SetPos,
						null,
						8625030949673382
						,[
						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									695
								]
							]
						]
,						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewporttop
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									640
								]
							]
						]
						]
					]
,					[
						30,
						cr.plugins_.List.prototype.acts.SetPos,
						null,
						4761746482457946
						,[
						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									800
								]
							]
						]
,						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewporttop
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									360
								]
							]
						]
						]
					]
,					[
						92,
						cr.plugins_.Button.prototype.acts.SetPos,
						null,
						5094312270673092
						,[
						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									700
								]
							]
						]
,						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewporttop
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									530
								]
							]
						]
						]
					]
,					[
						34,
						cr.plugins_.Button.prototype.acts.SetPos,
						null,
						7543828193016436
						,[
						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									700
								]
							]
						]
,						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewporttop
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									560
								]
							]
						]
						]
					]
,					[
						33,
						cr.plugins_.Button.prototype.acts.SetPos,
						null,
						5711236534021888
						,[
						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									830
								]
							]
						]
,						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewporttop
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									560
								]
							]
						]
						]
					]
,					[
						35,
						cr.plugins_.Button.prototype.acts.SetPos,
						null,
						8482859063706004
						,[
						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									700
								]
							]
						]
,						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewporttop
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									590
								]
							]
						]
						]
					]
,					[
						37,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						2863730941747202
						,[
						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									730
								]
							]
						]
,						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewporttop
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									460
								]
							]
						]
						]
					]
,					[
						38,
						cr.plugins_.Sprite.prototype.acts.SetPos,
						null,
						3523742763253604
						,[
						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewportleft
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									765
								]
							]
						]
,						[
							0,
							[
								4,
								[
									19,
									cr.system_object.prototype.exps.viewporttop
									,[
[
										0,
										2
									]
									]
								]
								,[
									0,
									460
								]
							]
						]
						]
					]
,					[
						26,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						5218650766953129
						,[
						[
							0,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				8222447849889754,
				[
				[
					87,
					cr.plugins_.Mouse.prototype.cnds.OnObjectClicked,
					null,
					1,
					false,
					false,
					false,
					4639795818249509
					,[
					[
						3,
						0
					]
,					[
						3,
						0
					]
,					[
						4,
						37
					]
					]
				]
				],
				[
				[
					106,
					cr.plugins_.TiledBg.prototype.acts.SetVisible,
					null,
					3565393734745458
					,[
					[
						3,
						0
					]
					]
				]
,				[
					48,
					cr.plugins_.TiledBg.prototype.acts.SetVisible,
					null,
					3339424448813759
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				6310205439638733,
				[
				[
					87,
					cr.plugins_.Mouse.prototype.cnds.OnObjectClicked,
					null,
					1,
					false,
					false,
					false,
					1255206479299698
					,[
					[
						3,
						0
					]
,					[
						3,
						0
					]
,					[
						4,
						38
					]
					]
				]
				],
				[
				[
					106,
					cr.plugins_.TiledBg.prototype.acts.SetVisible,
					null,
					6364224532487566
					,[
					[
						3,
						0
					]
					]
				]
,				[
					53,
					cr.plugins_.TiledBg.prototype.acts.SetVisible,
					null,
					872618931087147
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				[true, "Dojo Spawn Hover"],
				false,
				4373827643372928,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					4373827643372928
					,[
					[
						1,
						[
							2,
							"Dojo Spawn Hover"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					8813259671330048,
					[
					[
						87,
						cr.plugins_.Mouse.prototype.cnds.IsOverObject,
						null,
						0,
						false,
						false,
						false,
						9026426959840889
						,[
						[
							4,
							101
						]
						]
					]
					],
					[
					[
						101,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						9906051450047542
						,[
						[
							0,
							[
								0,
								1
							]
						]
						]
					]
,					[
						87,
						cr.plugins_.Mouse.prototype.acts.SetCursor,
						null,
						5114101810596816
						,[
						[
							3,
							1
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					5027678547781452,
					[
					[
						87,
						cr.plugins_.Mouse.prototype.cnds.IsOverObject,
						null,
						0,
						false,
						true,
						false,
						5454646377152898
						,[
						[
							4,
							101
						]
						]
					]
					],
					[
					[
						101,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						5994691495244981
						,[
						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						87,
						cr.plugins_.Mouse.prototype.acts.SetCursor,
						null,
						9002716756348702
						,[
						[
							3,
							0
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					2695081343413206,
					[
					[
						87,
						cr.plugins_.Mouse.prototype.cnds.OnObjectClicked,
						null,
						1,
						false,
						false,
						false,
						8295800542866501
						,[
						[
							3,
							0
						]
,						[
							3,
							0
						]
,						[
							4,
							101
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						5617040827912279,
						[
						[
							87,
							cr.plugins_.Mouse.prototype.cnds.IsOverObject,
							null,
							0,
							false,
							false,
							false,
							7084657159631938
							,[
							[
								4,
								7
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.CreateObject,
							null,
							4469811445924576
							,[
							[
								4,
								0
							]
,							[
								5,
								[
									0,
									1
								]
							]
,							[
								0,
								[
									4,
									[
										19,
										cr.system_object.prototype.exps.viewportleft
										,[
[
											0,
											1
										]
										]
									]
									,[
										0,
										200
									]
								]
							]
,							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewporttop
											,[
[
												0,
												1
											]
											]
										]
										,[
											20,
											7,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									,[
										0,
										32
									]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						9198408165605156,
						[
						[
							87,
							cr.plugins_.Mouse.prototype.cnds.IsOverObject,
							null,
							0,
							false,
							false,
							false,
							9928179447674955
							,[
							[
								4,
								8
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.CreateObject,
							null,
							2448260148580307
							,[
							[
								4,
								1
							]
,							[
								5,
								[
									0,
									1
								]
							]
,							[
								0,
								[
									4,
									[
										19,
										cr.system_object.prototype.exps.viewportleft
										,[
[
											0,
											1
										]
										]
									]
									,[
										0,
										200
									]
								]
							]
,							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewporttop
											,[
[
												0,
												1
											]
											]
										]
										,[
											20,
											8,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									,[
										0,
										32
									]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						2710970389658255,
						[
						[
							87,
							cr.plugins_.Mouse.prototype.cnds.IsOverObject,
							null,
							0,
							false,
							false,
							false,
							8004479267580462
							,[
							[
								4,
								9
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.CreateObject,
							null,
							2822468951292337
							,[
							[
								4,
								2
							]
,							[
								5,
								[
									0,
									1
								]
							]
,							[
								0,
								[
									4,
									[
										19,
										cr.system_object.prototype.exps.viewportleft
										,[
[
											0,
											1
										]
										]
									]
									,[
										0,
										200
									]
								]
							]
,							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewporttop
											,[
[
												0,
												1
											]
											]
										]
										,[
											20,
											9,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									,[
										0,
										32
									]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						3615281141851027,
						[
						[
							87,
							cr.plugins_.Mouse.prototype.cnds.IsOverObject,
							null,
							0,
							false,
							false,
							false,
							9136725498640799
							,[
							[
								4,
								11
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.CreateObject,
							null,
							9921759500584846
							,[
							[
								4,
								3
							]
,							[
								5,
								[
									0,
									1
								]
							]
,							[
								0,
								[
									4,
									[
										19,
										cr.system_object.prototype.exps.viewportleft
										,[
[
											0,
											1
										]
										]
									]
									,[
										0,
										200
									]
								]
							]
,							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewporttop
											,[
[
												0,
												1
											]
											]
										]
										,[
											20,
											11,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									,[
										0,
										32
									]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						7257261519242024,
						[
						[
							87,
							cr.plugins_.Mouse.prototype.cnds.IsOverObject,
							null,
							0,
							false,
							false,
							false,
							7186755616477106
							,[
							[
								4,
								12
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.CreateObject,
							null,
							879952311011285
							,[
							[
								4,
								4
							]
,							[
								5,
								[
									0,
									1
								]
							]
,							[
								0,
								[
									4,
									[
										19,
										cr.system_object.prototype.exps.viewportleft
										,[
[
											0,
											1
										]
										]
									]
									,[
										0,
										200
									]
								]
							]
,							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewporttop
											,[
[
												0,
												1
											]
											]
										]
										,[
											20,
											12,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									,[
										0,
										32
									]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						2154028288569591,
						[
						[
							87,
							cr.plugins_.Mouse.prototype.cnds.IsOverObject,
							null,
							0,
							false,
							false,
							false,
							6668257932724127
							,[
							[
								4,
								13
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.CreateObject,
							null,
							7439220013340151
							,[
							[
								4,
								5
							]
,							[
								5,
								[
									0,
									1
								]
							]
,							[
								0,
								[
									4,
									[
										19,
										cr.system_object.prototype.exps.viewportleft
										,[
[
											0,
											1
										]
										]
									]
									,[
										0,
										200
									]
								]
							]
,							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewporttop
											,[
[
												0,
												1
											]
											]
										]
										,[
											20,
											13,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									,[
										0,
										32
									]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						3154596493539315,
						[
						[
							87,
							cr.plugins_.Mouse.prototype.cnds.IsOverObject,
							null,
							0,
							false,
							false,
							false,
							4931938220942241
							,[
							[
								4,
								15
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.CreateObject,
							null,
							8794111971983907
							,[
							[
								4,
								6
							]
,							[
								5,
								[
									0,
									1
								]
							]
,							[
								0,
								[
									4,
									[
										19,
										cr.system_object.prototype.exps.viewportleft
										,[
[
											0,
											1
										]
										]
									]
									,[
										0,
										200
									]
								]
							]
,							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewporttop
											,[
[
												0,
												1
											]
											]
										]
										,[
											20,
											15,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									,[
										0,
										32
									]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						4242331370213509,
						[
						[
							87,
							cr.plugins_.Mouse.prototype.cnds.IsOverObject,
							null,
							0,
							false,
							false,
							false,
							5087625856896115
							,[
							[
								4,
								14
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.CreateObject,
							null,
							4896344416928329
							,[
							[
								4,
								91
							]
,							[
								5,
								[
									0,
									1
								]
							]
,							[
								0,
								[
									4,
									[
										19,
										cr.system_object.prototype.exps.viewportleft
										,[
[
											0,
											1
										]
										]
									]
									,[
										0,
										200
									]
								]
							]
,							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewporttop
											,[
[
												0,
												1
											]
											]
										]
										,[
											20,
											14,
											cr.plugins_.Sprite.prototype.exps.Y,
											false,
											null
										]
									]
									,[
										0,
										32
									]
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				2528117508648704,
				[
				[
					100,
					cr.plugins_.Sprite.prototype.cnds.OnCreated,
					null,
					1,
					false,
					false,
					false,
					8329062920150369
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					4471577215968365
					,[
					[
						11,
						"totalAlloyPlate"
					]
,					[
						7,
						[
							21,
							100,
							false,
							null
							,7
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					1742905754567773
					,[
					[
						11,
						"totalCapacity"
					]
,					[
						7,
						[
							21,
							100,
							false,
							null
							,5
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					9957231700901409
					,[
					[
						11,
						"totalCircuits"
					]
,					[
						7,
						[
							21,
							100,
							false,
							null
							,8
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					5506001886931674
					,[
					[
						11,
						"totalCredits"
					]
,					[
						7,
						[
							21,
							100,
							false,
							null
							,6
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					8907028602144147
					,[
					[
						11,
						"totalEnergy"
					]
,					[
						7,
						[
							21,
							100,
							false,
							null
							,4
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					6181967376439149
					,[
					[
						11,
						"totalFerrite"
					]
,					[
						7,
						[
							21,
							100,
							false,
							null
							,9
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					8100219055770083
					,[
					[
						11,
						"totalForma"
					]
,					[
						7,
						[
							21,
							100,
							false,
							null
							,10
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					8025172411743154
					,[
					[
						11,
						"totalNanoSpores"
					]
,					[
						7,
						[
							21,
							100,
							false,
							null
							,11
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					3191981393141198
					,[
					[
						11,
						"totalSalvage"
					]
,					[
						7,
						[
							21,
							100,
							false,
							null
							,12
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				6568734084130989,
				[
				[
					100,
					cr.plugins_.Sprite.prototype.cnds.OnDestroyed,
					null,
					1,
					false,
					false,
					false,
					2604362892186504
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SubVar,
					null,
					2437565821199644
					,[
					[
						11,
						"totalAlloyPlate"
					]
,					[
						7,
						[
							21,
							100,
							false,
							null
							,7
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SubVar,
					null,
					9851554631963917
					,[
					[
						11,
						"totalCapacity"
					]
,					[
						7,
						[
							21,
							100,
							false,
							null
							,5
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SubVar,
					null,
					4994277081891073
					,[
					[
						11,
						"totalCircuits"
					]
,					[
						7,
						[
							21,
							100,
							false,
							null
							,8
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SubVar,
					null,
					774967434912382
					,[
					[
						11,
						"totalCredits"
					]
,					[
						7,
						[
							21,
							100,
							false,
							null
							,6
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SubVar,
					null,
					3069111524450618
					,[
					[
						11,
						"totalEnergy"
					]
,					[
						7,
						[
							21,
							100,
							false,
							null
							,4
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SubVar,
					null,
					3694912637127325
					,[
					[
						11,
						"totalFerrite"
					]
,					[
						7,
						[
							21,
							100,
							false,
							null
							,9
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SubVar,
					null,
					1964865229118479
					,[
					[
						11,
						"totalForma"
					]
,					[
						7,
						[
							21,
							100,
							false,
							null
							,10
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SubVar,
					null,
					2642225878095207
					,[
					[
						11,
						"totalNanoSpores"
					]
,					[
						7,
						[
							21,
							100,
							false,
							null
							,11
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SubVar,
					null,
					6758883612302061
					,[
					[
						11,
						"totalSalvage"
					]
,					[
						7,
						[
							21,
							100,
							false,
							null
							,12
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "DojoUIPagination"],
			false,
			516553218976428,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				516553218976428
				,[
				[
					1,
					[
						2,
						"DojoUIPagination"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				9762906944368827,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					3793520928700924
					,[
					[
						11,
						"dojoPagination"
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							3
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					1693472593281384
					,[
					[
						11,
						"dojoPagination"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				3750056513467202,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					1389126337770963
					,[
					[
						11,
						"dojoPagination"
					]
,					[
						8,
						4
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SubVar,
					null,
					560398257318837
					,[
					[
						11,
						"dojoPagination"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				5327006685096963,
				[
				[
					-1,
					cr.system_object.prototype.cnds.EveryTick,
					null,
					0,
					false,
					false,
					false,
					3276399025892957
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					325662583987838,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						4000574255968667
						,[
						[
							11,
							"dojoPagination"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						103,
						cr.plugins_.Sprite.prototype.acts.SetSize,
						null,
						7666454657869833
						,[
						[
							0,
							[
								0,
								72
							]
						]
,						[
							0,
							[
								0,
								66
							]
						]
						]
					]
,					[
						86,
						cr.plugins_.Text.prototype.acts.SetText,
						null,
						4776338014313921
						,[
						[
							7,
							[
								2,
								"Page 1"
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					1360412382372996,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						3578962051938614
						,[
						[
							11,
							"dojoPagination"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						103,
						cr.plugins_.Sprite.prototype.acts.SetSize,
						null,
						1951306968250587
						,[
						[
							0,
							[
								0,
								0
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						86,
						cr.plugins_.Text.prototype.acts.SetText,
						null,
						7535930686242314
						,[
						[
							7,
							[
								2,
								"Page 2"
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "TileColor"],
			false,
			8200371073476147,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				8200371073476147
				,[
				[
					1,
					[
						2,
						"TileColor"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				5078229335832199,
				[
				[
					87,
					cr.plugins_.Mouse.prototype.cnds.OnObjectClicked,
					null,
					1,
					false,
					false,
					false,
					991226300300379
					,[
					[
						3,
						0
					]
,					[
						3,
						0
					]
,					[
						4,
						16
					]
					]
				]
,				[
					100,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					5179922222959488
					,[
					[
						10,
						2
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					100,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					2399368658598164
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					100,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					3443651981831461
					,[
					[
						10,
						2
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				7736156213975103,
				[
				[
					87,
					cr.plugins_.Mouse.prototype.cnds.OnObjectClicked,
					null,
					1,
					false,
					false,
					false,
					109695825113329
					,[
					[
						3,
						0
					]
,					[
						3,
						0
					]
,					[
						4,
						17
					]
					]
				]
,				[
					100,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					6787549671238852
					,[
					[
						10,
						2
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					100,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					9503514017023598
					,[
					[
						0,
						[
							0,
							2
						]
					]
					]
				]
,				[
					100,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					7717194716918126
					,[
					[
						10,
						2
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				6241248010790219,
				[
				[
					87,
					cr.plugins_.Mouse.prototype.cnds.OnObjectClicked,
					null,
					1,
					false,
					false,
					false,
					8652397232082036
					,[
					[
						3,
						0
					]
,					[
						3,
						0
					]
,					[
						4,
						18
					]
					]
				]
,				[
					100,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					2375467796152254
					,[
					[
						10,
						2
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					100,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					8567174940893445
					,[
					[
						0,
						[
							0,
							3
						]
					]
					]
				]
,				[
					100,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					6866640376292204
					,[
					[
						10,
						2
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				684015802177751,
				[
				[
					87,
					cr.plugins_.Mouse.prototype.cnds.OnObjectClicked,
					null,
					1,
					false,
					false,
					false,
					8015006755603726
					,[
					[
						3,
						0
					]
,					[
						3,
						0
					]
,					[
						4,
						19
					]
					]
				]
,				[
					100,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					8376895312914161
					,[
					[
						10,
						2
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					100,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					3243451471794458
					,[
					[
						0,
						[
							0,
							4
						]
					]
					]
				]
,				[
					100,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					4180342290847529
					,[
					[
						10,
						2
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				9629957770974356,
				[
				[
					87,
					cr.plugins_.Mouse.prototype.cnds.OnObjectClicked,
					null,
					1,
					false,
					false,
					false,
					6150675139394357
					,[
					[
						3,
						0
					]
,					[
						3,
						0
					]
,					[
						4,
						20
					]
					]
				]
,				[
					100,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					8136034361264839
					,[
					[
						10,
						2
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					100,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					283772786544187
					,[
					[
						0,
						[
							0,
							5
						]
					]
					]
				]
,				[
					100,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					7503405941833736
					,[
					[
						10,
						2
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				2786015791310464,
				[
				[
					87,
					cr.plugins_.Mouse.prototype.cnds.OnObjectClicked,
					null,
					1,
					false,
					false,
					false,
					9285620921442305
					,[
					[
						3,
						0
					]
,					[
						3,
						0
					]
,					[
						4,
						21
					]
					]
				]
,				[
					100,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					3136477280569961
					,[
					[
						10,
						2
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					100,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					4799461185583919
					,[
					[
						0,
						[
							0,
							6
						]
					]
					]
				]
,				[
					100,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					3438797462891972
					,[
					[
						10,
						2
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				4004212321785876,
				[
				[
					87,
					cr.plugins_.Mouse.prototype.cnds.OnObjectClicked,
					null,
					1,
					false,
					false,
					false,
					9933719593091003
					,[
					[
						3,
						0
					]
,					[
						3,
						0
					]
,					[
						4,
						22
					]
					]
				]
,				[
					100,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					8202261535726735
					,[
					[
						10,
						2
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					100,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					1899487482632749
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					100,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					8976315409425876
					,[
					[
						10,
						2
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				4818367661040886,
				[
				[
					-1,
					cr.system_object.prototype.cnds.EveryTick,
					null,
					0,
					false,
					false,
					false,
					1635375388494383
				]
				],
				[
				[
					100,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					4972779885674211
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					104,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					3102257136391317
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					101,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					8164070040783875
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "PaneButtons"],
			false,
			6137121227662529,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				6137121227662529
				,[
				[
					1,
					[
						2,
						"PaneButtons"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				9923064642504378,
				[
				[
					87,
					cr.plugins_.Mouse.prototype.cnds.OnObjectClicked,
					null,
					1,
					false,
					false,
					false,
					4206698875365838
					,[
					[
						3,
						0
					]
,					[
						3,
						0
					]
,					[
						4,
						25
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					2290687574953679
					,[
					[
						11,
						"tilePaneOpen"
					]
,					[
						7,
						[
							6,
							[
								23,
								"tilePaneOpen"
							]
							,[
								0,
								-1
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				4331529913110345,
				[
				[
					87,
					cr.plugins_.Mouse.prototype.cnds.OnObjectClicked,
					null,
					1,
					false,
					false,
					false,
					1733040815100226
					,[
					[
						3,
						0
					]
,					[
						3,
						0
					]
,					[
						4,
						23
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4773356161167853
					,[
					[
						11,
						"palettePaneOpen"
					]
,					[
						7,
						[
							6,
							[
								23,
								"palettePaneOpen"
							]
							,[
								0,
								-1
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				4276955329856263,
				[
				[
					87,
					cr.plugins_.Mouse.prototype.cnds.OnObjectClicked,
					null,
					1,
					false,
					false,
					false,
					3415420272722876
					,[
					[
						3,
						0
					]
,					[
						3,
						0
					]
,					[
						4,
						24
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7831421844199213
					,[
					[
						11,
						"resourcePaneOpen"
					]
,					[
						7,
						[
							6,
							[
								23,
								"resourcePaneOpen"
							]
							,[
								0,
								-1
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				1336378486548712,
				[
				[
					87,
					cr.plugins_.Mouse.prototype.cnds.OnObjectClicked,
					null,
					1,
					false,
					false,
					false,
					5891389511304686
					,[
					[
						3,
						0
					]
,					[
						3,
						0
					]
,					[
						4,
						26
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					684205510839162
					,[
					[
						11,
						"optionsPaneOpen"
					]
,					[
						7,
						[
							6,
							[
								23,
								"optionsPaneOpen"
							]
							,[
								0,
								-1
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				5990606975175919,
				[
				[
					87,
					cr.plugins_.Mouse.prototype.cnds.IsOverObject,
					null,
					0,
					false,
					false,
					false,
					5169190753533261
					,[
					[
						4,
						104
					]
					]
				]
				],
				[
				[
					87,
					cr.plugins_.Mouse.prototype.acts.SetCursor,
					null,
					5505533059417008
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				4554073789373847,
				[
				[
					87,
					cr.plugins_.Mouse.prototype.cnds.IsOverObject,
					null,
					0,
					false,
					true,
					false,
					3886152523265191
					,[
					[
						4,
						104
					]
					]
				]
				],
				[
				[
					87,
					cr.plugins_.Mouse.prototype.acts.SetCursor,
					null,
					5769442648159285
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "Resource Tracking"],
			false,
			3726190468647728,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				3726190468647728
				,[
				[
					1,
					[
						2,
						"Resource Tracking"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				2769105495350417,
				[
				[
					-1,
					cr.system_object.prototype.cnds.EveryTick,
					null,
					0,
					false,
					false,
					false,
					4648029726566077
				]
				],
				[
				[
					57,
					cr.plugins_.Text.prototype.acts.SetPos,
					null,
					9374405369273535
					,[
					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								980
							]
						]
					]
,					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewporttop
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								35
							]
						]
					]
					]
				]
,				[
					58,
					cr.plugins_.Text.prototype.acts.SetPos,
					null,
					7305324463118241
					,[
					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								1140
							]
						]
					]
,					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewporttop
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								35
							]
						]
					]
					]
				]
,				[
					61,
					cr.plugins_.Text.prototype.acts.SetPos,
					null,
					2424375594686615
					,[
					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								980
							]
						]
					]
,					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewporttop
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								55
							]
						]
					]
					]
				]
,				[
					62,
					cr.plugins_.Text.prototype.acts.SetPos,
					null,
					5156574092758564
					,[
					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								1140
							]
						]
					]
,					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewporttop
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								55
							]
						]
					]
					]
				]
,				[
					67,
					cr.plugins_.Text.prototype.acts.SetPos,
					null,
					2721929852501973
					,[
					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								980
							]
						]
					]
,					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewporttop
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								75
							]
						]
					]
					]
				]
,				[
					68,
					cr.plugins_.Text.prototype.acts.SetPos,
					null,
					2435577986541237
					,[
					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								1140
							]
						]
					]
,					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewporttop
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								75
							]
						]
					]
					]
				]
,				[
					63,
					cr.plugins_.Text.prototype.acts.SetPos,
					null,
					7191266559212089
					,[
					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								980
							]
						]
					]
,					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewporttop
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								95
							]
						]
					]
					]
				]
,				[
					64,
					cr.plugins_.Text.prototype.acts.SetPos,
					null,
					2106050442639417
					,[
					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								1140
							]
						]
					]
,					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewporttop
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								95
							]
						]
					]
					]
				]
,				[
					65,
					cr.plugins_.Text.prototype.acts.SetPos,
					null,
					4568859787645193
					,[
					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								980
							]
						]
					]
,					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewporttop
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								115
							]
						]
					]
					]
				]
,				[
					66,
					cr.plugins_.Text.prototype.acts.SetPos,
					null,
					1155532266020935
					,[
					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								1140
							]
						]
					]
,					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewporttop
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								115
							]
						]
					]
					]
				]
,				[
					59,
					cr.plugins_.Text.prototype.acts.SetPos,
					null,
					6113788770405314
					,[
					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								980
							]
						]
					]
,					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewporttop
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								135
							]
						]
					]
					]
				]
,				[
					60,
					cr.plugins_.Text.prototype.acts.SetPos,
					null,
					5107862661175671
					,[
					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								1140
							]
						]
					]
,					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewporttop
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								135
							]
						]
					]
					]
				]
,				[
					70,
					cr.plugins_.Text.prototype.acts.SetPos,
					null,
					3292811933853669
					,[
					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								980
							]
						]
					]
,					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewporttop
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								155
							]
						]
					]
					]
				]
,				[
					69,
					cr.plugins_.Text.prototype.acts.SetPos,
					null,
					4106897841362074
					,[
					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								1140
							]
						]
					]
,					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewporttop
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								155
							]
						]
					]
					]
				]
,				[
					71,
					cr.plugins_.Text.prototype.acts.SetPos,
					null,
					9710479567958436
					,[
					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								980
							]
						]
					]
,					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewporttop
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								500
							]
						]
					]
					]
				]
,				[
					72,
					cr.plugins_.Text.prototype.acts.SetPos,
					null,
					9531704280705627
					,[
					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								1140
							]
						]
					]
,					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewporttop
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								500
							]
						]
					]
					]
				]
,				[
					73,
					cr.plugins_.Text.prototype.acts.SetPos,
					null,
					8699535178791122
					,[
					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								980
							]
						]
					]
,					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewporttop
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								520
							]
						]
					]
					]
				]
,				[
					74,
					cr.plugins_.Text.prototype.acts.SetPos,
					null,
					3242502527279904
					,[
					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								1140
							]
						]
					]
,					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewporttop
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								520
							]
						]
					]
					]
				]
,				[
					62,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					7250730732442541
					,[
					[
						7,
						[
							23,
							"totalAlloyPlate"
						]
					]
					]
				]
,				[
					72,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					9366662401611016
					,[
					[
						7,
						[
							23,
							"totalCapacity"
						]
					]
					]
				]
,				[
					68,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					78204882437556
					,[
					[
						7,
						[
							23,
							"totalCircuits"
						]
					]
					]
				]
,				[
					58,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					3875928818470536
					,[
					[
						7,
						[
							23,
							"totalCredits"
						]
					]
					]
				]
,				[
					74,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					4576942941033642
					,[
					[
						7,
						[
							23,
							"totalEnergy"
						]
					]
					]
				]
,				[
					64,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					5172423773593119
					,[
					[
						7,
						[
							23,
							"totalFerrite"
						]
					]
					]
				]
,				[
					66,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					7061448798545278
					,[
					[
						7,
						[
							23,
							"totalForma"
						]
					]
					]
				]
,				[
					60,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					1684498122510273
					,[
					[
						7,
						[
							23,
							"totalNanoSpores"
						]
					]
					]
				]
,				[
					69,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					9297943114398382
					,[
					[
						7,
						[
							23,
							"totalSalvage"
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					390779706395129,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						468469501756746
						,[
						[
							11,
							"resourcePaneOpen"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								-1
							]
						]
						]
					]
					],
					[
					[
						105,
						cr.plugins_.Text.prototype.acts.SetSize,
						null,
						6782344041186292
						,[
						[
							0,
							[
								0,
								0
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					9974524070353772,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						9295004333335989
						,[
						[
							11,
							"resourcePaneOpen"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						105,
						cr.plugins_.Text.prototype.acts.SetSize,
						null,
						2154615540711121
						,[
						[
							0,
							[
								0,
								150
							]
						]
,						[
							0,
							[
								0,
								30
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "SpawnInfo"],
			false,
			3521233466493796,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				3521233466493796
				,[
				[
					1,
					[
						2,
						"SpawnInfo"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				5201181198609971,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					1168122557891213
					,[
					[
						7,
						[
							20,
							87,
							cr.plugins_.Mouse.prototype.exps.AbsoluteY,
							false,
							null
						]
					]
,					[
						8,
						5
					]
,					[
						7,
						[
							0,
							30
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					1447550372896992
					,[
					[
						7,
						[
							20,
							87,
							cr.plugins_.Mouse.prototype.exps.AbsoluteY,
							false,
							null
						]
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							100
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					6615998091735657
					,[
					[
						11,
						"SpawnRowCounter"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					3958975529646534,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						4051661103731001
						,[
						[
							11,
							"mouseHoverSpawn"
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						97,
						cr.plugins_.Sprite.prototype.acts.SetY,
						null,
						2253007371463961
						,[
						[
							0,
							[
								4,
								[
									4,
									[
										19,
										cr.system_object.prototype.exps.viewportleft
										,[
[
											0,
											2
										]
										]
									]
									,[
										0,
										0
									]
								]
								,[
									6,
									[
										23,
										"SpawnRowCounter"
									]
									,[
										0,
										70
									]
								]
							]
						]
						]
					]
,					[
						96,
						cr.plugins_.Text.prototype.acts.SetY,
						null,
						3665933944324821
						,[
						[
							0,
							[
								4,
								[
									4,
									[
										19,
										cr.system_object.prototype.exps.viewportleft
										,[
[
											0,
											2
										]
										]
									]
									,[
										0,
										126
									]
								]
								,[
									6,
									[
										23,
										"SpawnRowCounter"
									]
									,[
										0,
										70
									]
								]
							]
						]
						]
					]
,					[
						56,
						cr.plugins_.Sprite.prototype.acts.SetY,
						null,
						2930121318091816
						,[
						[
							0,
							[
								4,
								[
									4,
									[
										19,
										cr.system_object.prototype.exps.viewportleft
										,[
[
											0,
											2
										]
										]
									]
									,[
										0,
										22
									]
								]
								,[
									6,
									[
										23,
										"SpawnRowCounter"
									]
									,[
										0,
										70
									]
								]
							]
						]
						]
					]
,					[
						98,
						cr.plugins_.Text.prototype.acts.SetY,
						null,
						4696825540722659
						,[
						[
							0,
							[
								4,
								[
									4,
									[
										19,
										cr.system_object.prototype.exps.viewportleft
										,[
[
											0,
											2
										]
										]
									]
									,[
										0,
										181
									]
								]
								,[
									6,
									[
										23,
										"SpawnRowCounter"
									]
									,[
										0,
										70
									]
								]
							]
						]
						]
					]
,					[
						99,
						cr.plugins_.Text.prototype.acts.SetY,
						null,
						5430102408429029
						,[
						[
							0,
							[
								4,
								[
									4,
									[
										19,
										cr.system_object.prototype.exps.viewportleft
										,[
[
											0,
											2
										]
										]
									]
									,[
										0,
										181
									]
								]
								,[
									6,
									[
										23,
										"SpawnRowCounter"
									]
									,[
										0,
										70
									]
								]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				9277719414856644,
				[
				[
					-1,
					cr.system_object.prototype.cnds.EveryTick,
					null,
					0,
					false,
					false,
					false,
					3841143369929392
				]
				],
				[
				[
					56,
					cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
					null,
					1645917499407687
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7531973259778502
					,[
					[
						11,
						"mouseHoverSpawn"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					96,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					4541920611460395
					,[
					[
						7,
						[
							2,
							""
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				3710289006633938,
				[
				[
					87,
					cr.plugins_.Mouse.prototype.cnds.IsOverObject,
					null,
					0,
					false,
					false,
					false,
					8772088999431327
					,[
					[
						4,
						101
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4374703674609251
					,[
					[
						11,
						"mouseHoverSpawn"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					96,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					1173302322774635
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.uppercase
							,[
[
								21,
								101,
								true,
								null
								,0
							]
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				3706233388750772,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					9596411277851055
					,[
					[
						11,
						"mouseHoverSpawn"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					97,
					cr.plugins_.Sprite.prototype.acts.SetPos,
					null,
					2589709943323303
					,[
					[
						0,
						[
							0,
							-1000
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					96,
					cr.plugins_.Text.prototype.acts.SetPos,
					null,
					789990306301374
					,[
					[
						0,
						[
							0,
							-1000
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					56,
					cr.plugins_.Sprite.prototype.acts.SetPos,
					null,
					3156453107010998
					,[
					[
						0,
						[
							0,
							-1000
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					98,
					cr.plugins_.Text.prototype.acts.SetPos,
					null,
					7387547704525974
					,[
					[
						0,
						[
							0,
							-1000
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					99,
					cr.plugins_.Text.prototype.acts.SetPos,
					null,
					8146094414264273
					,[
					[
						0,
						[
							0,
							-1000
						]
					]
,					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					5718282900241723
					,[
					[
						11,
						"SpawnRowCounter"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				9081282035966755,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					144097474506008
					,[
					[
						11,
						"mouseHoverSpawn"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					97,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					93801357226823
					,[
					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								134
							]
						]
					]
					]
				]
,				[
					96,
					cr.plugins_.Text.prototype.acts.SetX,
					null,
					9698023602208682
					,[
					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								149
							]
						]
					]
					]
				]
,				[
					56,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					6889979656967622
					,[
					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								135
							]
						]
					]
					]
				]
,				[
					98,
					cr.plugins_.Text.prototype.acts.SetX,
					null,
					241627327371347
					,[
					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								190
							]
						]
					]
					]
				]
,				[
					99,
					cr.plugins_.Text.prototype.acts.SetX,
					null,
					3785137258282831
					,[
					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								295
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "Spawn Pane Y Position"],
				false,
				5453269015333569,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					5453269015333569
					,[
					[
						1,
						[
							2,
							"Spawn Pane Y Position"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					2400277277689595,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						6913326749600824
						,[
						[
							7,
							[
								20,
								87,
								cr.plugins_.Mouse.prototype.exps.AbsoluteY,
								false,
								null
							]
						]
,						[
							8,
							5
						]
,						[
							7,
							[
								0,
								100
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						6140648705680848
						,[
						[
							7,
							[
								20,
								87,
								cr.plugins_.Mouse.prototype.exps.AbsoluteY,
								false,
								null
							]
						]
,						[
							8,
							2
						]
,						[
							7,
							[
								0,
								170
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						6373399201800461
						,[
						[
							11,
							"SpawnRowCounter"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						5148717273809809,
						[
						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							5235089463833227
							,[
							[
								11,
								"mouseHoverSpawn"
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						[
							97,
							cr.plugins_.Sprite.prototype.acts.SetY,
							null,
							9183580995626984
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												2
											]
											]
										]
										,[
											0,
											0
										]
									]
									,[
										6,
										[
											23,
											"SpawnRowCounter"
										]
										,[
											0,
											70
										]
									]
								]
							]
							]
						]
,						[
							96,
							cr.plugins_.Text.prototype.acts.SetY,
							null,
							9843069555408228
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												2
											]
											]
										]
										,[
											0,
											126
										]
									]
									,[
										6,
										[
											23,
											"SpawnRowCounter"
										]
										,[
											0,
											70
										]
									]
								]
							]
							]
						]
,						[
							56,
							cr.plugins_.Sprite.prototype.acts.SetY,
							null,
							308892470912947
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												2
											]
											]
										]
										,[
											0,
											22
										]
									]
									,[
										6,
										[
											23,
											"SpawnRowCounter"
										]
										,[
											0,
											70
										]
									]
								]
							]
							]
						]
,						[
							98,
							cr.plugins_.Text.prototype.acts.SetY,
							null,
							7271967072312807
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												2
											]
											]
										]
										,[
											0,
											181
										]
									]
									,[
										6,
										[
											23,
											"SpawnRowCounter"
										]
										,[
											0,
											70
										]
									]
								]
							]
							]
						]
,						[
							99,
							cr.plugins_.Text.prototype.acts.SetY,
							null,
							8101456017851249
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												2
											]
											]
										]
										,[
											0,
											181
										]
									]
									,[
										6,
										[
											23,
											"SpawnRowCounter"
										]
										,[
											0,
											70
										]
									]
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					530911086459905,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						1746333642217533
						,[
						[
							7,
							[
								20,
								87,
								cr.plugins_.Mouse.prototype.exps.AbsoluteY,
								false,
								null
							]
						]
,						[
							8,
							5
						]
,						[
							7,
							[
								0,
								170
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						683519124517979
						,[
						[
							7,
							[
								20,
								87,
								cr.plugins_.Mouse.prototype.exps.AbsoluteY,
								false,
								null
							]
						]
,						[
							8,
							2
						]
,						[
							7,
							[
								0,
								240
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						671666722537456
						,[
						[
							11,
							"SpawnRowCounter"
						]
,						[
							7,
							[
								0,
								2
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						7592643880214749,
						[
						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							2777990650788958
							,[
							[
								11,
								"mouseHoverSpawn"
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						[
							97,
							cr.plugins_.Sprite.prototype.acts.SetY,
							null,
							5527054453067455
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												2
											]
											]
										]
										,[
											0,
											0
										]
									]
									,[
										6,
										[
											23,
											"SpawnRowCounter"
										]
										,[
											0,
											70
										]
									]
								]
							]
							]
						]
,						[
							96,
							cr.plugins_.Text.prototype.acts.SetY,
							null,
							1206997049543545
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												2
											]
											]
										]
										,[
											0,
											126
										]
									]
									,[
										6,
										[
											23,
											"SpawnRowCounter"
										]
										,[
											0,
											70
										]
									]
								]
							]
							]
						]
,						[
							56,
							cr.plugins_.Sprite.prototype.acts.SetY,
							null,
							109878041841542
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												2
											]
											]
										]
										,[
											0,
											22
										]
									]
									,[
										6,
										[
											23,
											"SpawnRowCounter"
										]
										,[
											0,
											70
										]
									]
								]
							]
							]
						]
,						[
							98,
							cr.plugins_.Text.prototype.acts.SetY,
							null,
							1867264707232677
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												2
											]
											]
										]
										,[
											0,
											181
										]
									]
									,[
										6,
										[
											23,
											"SpawnRowCounter"
										]
										,[
											0,
											70
										]
									]
								]
							]
							]
						]
,						[
							99,
							cr.plugins_.Text.prototype.acts.SetY,
							null,
							9996582976432025
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												2
											]
											]
										]
										,[
											0,
											181
										]
									]
									,[
										6,
										[
											23,
											"SpawnRowCounter"
										]
										,[
											0,
											70
										]
									]
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					8413973892844711,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						8920143836693961
						,[
						[
							7,
							[
								20,
								87,
								cr.plugins_.Mouse.prototype.exps.AbsoluteY,
								false,
								null
							]
						]
,						[
							8,
							5
						]
,						[
							7,
							[
								0,
								240
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						7530991754172191
						,[
						[
							7,
							[
								20,
								87,
								cr.plugins_.Mouse.prototype.exps.AbsoluteY,
								false,
								null
							]
						]
,						[
							8,
							2
						]
,						[
							7,
							[
								0,
								310
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						836689071423498
						,[
						[
							11,
							"SpawnRowCounter"
						]
,						[
							7,
							[
								0,
								3
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						283820511789343,
						[
						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							2984428484019789
							,[
							[
								11,
								"mouseHoverSpawn"
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						[
							97,
							cr.plugins_.Sprite.prototype.acts.SetY,
							null,
							4139578398854402
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												2
											]
											]
										]
										,[
											0,
											0
										]
									]
									,[
										6,
										[
											23,
											"SpawnRowCounter"
										]
										,[
											0,
											70
										]
									]
								]
							]
							]
						]
,						[
							96,
							cr.plugins_.Text.prototype.acts.SetY,
							null,
							8343041301375826
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												2
											]
											]
										]
										,[
											0,
											126
										]
									]
									,[
										6,
										[
											23,
											"SpawnRowCounter"
										]
										,[
											0,
											70
										]
									]
								]
							]
							]
						]
,						[
							56,
							cr.plugins_.Sprite.prototype.acts.SetY,
							null,
							4119942946080118
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												2
											]
											]
										]
										,[
											0,
											22
										]
									]
									,[
										6,
										[
											23,
											"SpawnRowCounter"
										]
										,[
											0,
											70
										]
									]
								]
							]
							]
						]
,						[
							98,
							cr.plugins_.Text.prototype.acts.SetY,
							null,
							5615531670411459
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												2
											]
											]
										]
										,[
											0,
											181
										]
									]
									,[
										6,
										[
											23,
											"SpawnRowCounter"
										]
										,[
											0,
											70
										]
									]
								]
							]
							]
						]
,						[
							99,
							cr.plugins_.Text.prototype.acts.SetY,
							null,
							1469233040077923
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												2
											]
											]
										]
										,[
											0,
											181
										]
									]
									,[
										6,
										[
											23,
											"SpawnRowCounter"
										]
										,[
											0,
											70
										]
									]
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					8673477978130487,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						2913864304094149
						,[
						[
							7,
							[
								20,
								87,
								cr.plugins_.Mouse.prototype.exps.AbsoluteY,
								false,
								null
							]
						]
,						[
							8,
							5
						]
,						[
							7,
							[
								0,
								310
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						5593703393218246
						,[
						[
							7,
							[
								20,
								87,
								cr.plugins_.Mouse.prototype.exps.AbsoluteY,
								false,
								null
							]
						]
,						[
							8,
							2
						]
,						[
							7,
							[
								0,
								380
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						3180048655126633
						,[
						[
							11,
							"SpawnRowCounter"
						]
,						[
							7,
							[
								0,
								4
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						6707553338429423,
						[
						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							641586999045603
							,[
							[
								11,
								"mouseHoverSpawn"
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						[
							97,
							cr.plugins_.Sprite.prototype.acts.SetY,
							null,
							4237023392098923
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												2
											]
											]
										]
										,[
											0,
											0
										]
									]
									,[
										6,
										[
											23,
											"SpawnRowCounter"
										]
										,[
											0,
											70
										]
									]
								]
							]
							]
						]
,						[
							96,
							cr.plugins_.Text.prototype.acts.SetY,
							null,
							2617471184396748
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												2
											]
											]
										]
										,[
											0,
											126
										]
									]
									,[
										6,
										[
											23,
											"SpawnRowCounter"
										]
										,[
											0,
											70
										]
									]
								]
							]
							]
						]
,						[
							56,
							cr.plugins_.Sprite.prototype.acts.SetY,
							null,
							5034774358529169
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												2
											]
											]
										]
										,[
											0,
											22
										]
									]
									,[
										6,
										[
											23,
											"SpawnRowCounter"
										]
										,[
											0,
											70
										]
									]
								]
							]
							]
						]
,						[
							98,
							cr.plugins_.Text.prototype.acts.SetY,
							null,
							8442569004584427
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												2
											]
											]
										]
										,[
											0,
											181
										]
									]
									,[
										6,
										[
											23,
											"SpawnRowCounter"
										]
										,[
											0,
											70
										]
									]
								]
							]
							]
						]
,						[
							99,
							cr.plugins_.Text.prototype.acts.SetY,
							null,
							8125376335613103
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												2
											]
											]
										]
										,[
											0,
											181
										]
									]
									,[
										6,
										[
											23,
											"SpawnRowCounter"
										]
										,[
											0,
											70
										]
									]
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					4519634309451153,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						8418592388095664
						,[
						[
							7,
							[
								20,
								87,
								cr.plugins_.Mouse.prototype.exps.AbsoluteY,
								false,
								null
							]
						]
,						[
							8,
							5
						]
,						[
							7,
							[
								0,
								380
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						5826688446639993
						,[
						[
							7,
							[
								20,
								87,
								cr.plugins_.Mouse.prototype.exps.AbsoluteY,
								false,
								null
							]
						]
,						[
							8,
							2
						]
,						[
							7,
							[
								0,
								450
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						3646369501042698
						,[
						[
							11,
							"SpawnRowCounter"
						]
,						[
							7,
							[
								0,
								5
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						6189089345384077,
						[
						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							5636214914522988
							,[
							[
								11,
								"mouseHoverSpawn"
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						[
							97,
							cr.plugins_.Sprite.prototype.acts.SetY,
							null,
							8427668195171925
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												2
											]
											]
										]
										,[
											0,
											0
										]
									]
									,[
										6,
										[
											23,
											"SpawnRowCounter"
										]
										,[
											0,
											70
										]
									]
								]
							]
							]
						]
,						[
							96,
							cr.plugins_.Text.prototype.acts.SetY,
							null,
							472578137408681
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												2
											]
											]
										]
										,[
											0,
											126
										]
									]
									,[
										6,
										[
											23,
											"SpawnRowCounter"
										]
										,[
											0,
											70
										]
									]
								]
							]
							]
						]
,						[
							56,
							cr.plugins_.Sprite.prototype.acts.SetY,
							null,
							4392851950624684
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												2
											]
											]
										]
										,[
											0,
											22
										]
									]
									,[
										6,
										[
											23,
											"SpawnRowCounter"
										]
										,[
											0,
											70
										]
									]
								]
							]
							]
						]
,						[
							98,
							cr.plugins_.Text.prototype.acts.SetY,
							null,
							7707211341288379
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												2
											]
											]
										]
										,[
											0,
											181
										]
									]
									,[
										6,
										[
											23,
											"SpawnRowCounter"
										]
										,[
											0,
											70
										]
									]
								]
							]
							]
						]
,						[
							99,
							cr.plugins_.Text.prototype.acts.SetY,
							null,
							7046223497766711
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												2
											]
											]
										]
										,[
											0,
											181
										]
									]
									,[
										6,
										[
											23,
											"SpawnRowCounter"
										]
										,[
											0,
											70
										]
									]
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					2054225147824555,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						4894024546664779
						,[
						[
							7,
							[
								20,
								87,
								cr.plugins_.Mouse.prototype.exps.AbsoluteY,
								false,
								null
							]
						]
,						[
							8,
							5
						]
,						[
							7,
							[
								0,
								450
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						4433161375811478
						,[
						[
							7,
							[
								20,
								87,
								cr.plugins_.Mouse.prototype.exps.AbsoluteY,
								false,
								null
							]
						]
,						[
							8,
							2
						]
,						[
							7,
							[
								0,
								520
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						1110639897009082
						,[
						[
							11,
							"SpawnRowCounter"
						]
,						[
							7,
							[
								0,
								6
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						8246111505174414,
						[
						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							2129403503100025
							,[
							[
								11,
								"mouseHoverSpawn"
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						[
							97,
							cr.plugins_.Sprite.prototype.acts.SetY,
							null,
							6991875388983463
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												2
											]
											]
										]
										,[
											0,
											0
										]
									]
									,[
										6,
										[
											23,
											"SpawnRowCounter"
										]
										,[
											0,
											70
										]
									]
								]
							]
							]
						]
,						[
							96,
							cr.plugins_.Text.prototype.acts.SetY,
							null,
							1289980145460888
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												2
											]
											]
										]
										,[
											0,
											126
										]
									]
									,[
										6,
										[
											23,
											"SpawnRowCounter"
										]
										,[
											0,
											70
										]
									]
								]
							]
							]
						]
,						[
							56,
							cr.plugins_.Sprite.prototype.acts.SetY,
							null,
							4617169757955
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												2
											]
											]
										]
										,[
											0,
											22
										]
									]
									,[
										6,
										[
											23,
											"SpawnRowCounter"
										]
										,[
											0,
											70
										]
									]
								]
							]
							]
						]
,						[
							98,
							cr.plugins_.Text.prototype.acts.SetY,
							null,
							2564948693125162
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												2
											]
											]
										]
										,[
											0,
											181
										]
									]
									,[
										6,
										[
											23,
											"SpawnRowCounter"
										]
										,[
											0,
											70
										]
									]
								]
							]
							]
						]
,						[
							99,
							cr.plugins_.Text.prototype.acts.SetY,
							null,
							1683975789677099
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												2
											]
											]
										]
										,[
											0,
											181
										]
									]
									,[
										6,
										[
											23,
											"SpawnRowCounter"
										]
										,[
											0,
											70
										]
									]
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					4093438676486311,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						9659619572147864
						,[
						[
							7,
							[
								20,
								87,
								cr.plugins_.Mouse.prototype.exps.AbsoluteY,
								false,
								null
							]
						]
,						[
							8,
							5
						]
,						[
							7,
							[
								0,
								520
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						2033649116417166
						,[
						[
							11,
							"SpawnRowCounter"
						]
,						[
							7,
							[
								0,
								7
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						1494974644878524,
						[
						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							2502184372876776
							,[
							[
								11,
								"mouseHoverSpawn"
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						[
							97,
							cr.plugins_.Sprite.prototype.acts.SetY,
							null,
							6542278184047847
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												2
											]
											]
										]
										,[
											0,
											0
										]
									]
									,[
										6,
										[
											23,
											"SpawnRowCounter"
										]
										,[
											0,
											70
										]
									]
								]
							]
							]
						]
,						[
							96,
							cr.plugins_.Text.prototype.acts.SetY,
							null,
							7976350693576751
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												2
											]
											]
										]
										,[
											0,
											126
										]
									]
									,[
										6,
										[
											23,
											"SpawnRowCounter"
										]
										,[
											0,
											70
										]
									]
								]
							]
							]
						]
,						[
							56,
							cr.plugins_.Sprite.prototype.acts.SetY,
							null,
							1618844211692388
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												2
											]
											]
										]
										,[
											0,
											22
										]
									]
									,[
										6,
										[
											23,
											"SpawnRowCounter"
										]
										,[
											0,
											70
										]
									]
								]
							]
							]
						]
,						[
							98,
							cr.plugins_.Text.prototype.acts.SetY,
							null,
							1187377211384511
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												2
											]
											]
										]
										,[
											0,
											181
										]
									]
									,[
										6,
										[
											23,
											"SpawnRowCounter"
										]
										,[
											0,
											70
										]
									]
								]
							]
							]
						]
,						[
							99,
							cr.plugins_.Text.prototype.acts.SetY,
							null,
							3117305276236267
							,[
							[
								0,
								[
									4,
									[
										4,
										[
											19,
											cr.system_object.prototype.exps.viewportleft
											,[
[
												0,
												2
											]
											]
										]
										,[
											0,
											181
										]
									]
									,[
										6,
										[
											23,
											"SpawnRowCounter"
										]
										,[
											0,
											70
										]
									]
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "SpawnStats"],
				false,
				9662171301992662,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					9662171301992662
					,[
					[
						1,
						[
							2,
							"SpawnStats"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					8246392965575394,
					[
					[
						87,
						cr.plugins_.Mouse.prototype.cnds.IsOverObject,
						null,
						0,
						false,
						false,
						false,
						7946765910487002
						,[
						[
							4,
							101
						]
						]
					]
					],
					[
					[
						99,
						cr.plugins_.Text.prototype.acts.SetText,
						null,
						1498531881957961
						,[
						[
							7,
							[
								21,
								101,
								false,
								null
								,2
							]
						]
						]
					]
,					[
						98,
						cr.plugins_.Text.prototype.acts.SetText,
						null,
						1888049513620305
						,[
						[
							7,
							[
								21,
								101,
								false,
								null
								,1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					47007500493424,
					[
					[
						87,
						cr.plugins_.Mouse.prototype.cnds.IsOverObject,
						null,
						0,
						false,
						false,
						false,
						847257280623127
						,[
						[
							4,
							7
						]
						]
					]
					],
					[
					[
						56,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						5316413651126996
						,[
						[
							0,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					4145707214805126,
					[
					[
						87,
						cr.plugins_.Mouse.prototype.cnds.IsOverObject,
						null,
						0,
						false,
						false,
						false,
						8074547243689084
						,[
						[
							4,
							8
						]
						]
					]
					],
					[
					[
						56,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						4999149134081104
						,[
						[
							0,
							[
								0,
								2
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					955627938666985,
					[
					[
						87,
						cr.plugins_.Mouse.prototype.cnds.IsOverObject,
						null,
						0,
						false,
						false,
						false,
						7320678665626645
						,[
						[
							4,
							11
						]
						]
					]
					],
					[
					[
						56,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						978297952510755
						,[
						[
							0,
							[
								0,
								3
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					1381501732055956,
					[
					[
						87,
						cr.plugins_.Mouse.prototype.cnds.IsOverObject,
						null,
						0,
						false,
						false,
						false,
						5875121309057361
						,[
						[
							4,
							9
						]
						]
					]
					],
					[
					[
						56,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						7110349141077371
						,[
						[
							0,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					8144382706559531,
					[
					[
						87,
						cr.plugins_.Mouse.prototype.cnds.IsOverObject,
						null,
						0,
						false,
						false,
						false,
						50291117230098
						,[
						[
							4,
							13
						]
						]
					]
					],
					[
					[
						56,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						3693670549820027
						,[
						[
							0,
							[
								0,
								4
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					179250152203317,
					[
					[
						87,
						cr.plugins_.Mouse.prototype.cnds.IsOverObject,
						null,
						0,
						false,
						false,
						false,
						5336475607313665
						,[
						[
							4,
							12
						]
						]
					]
					],
					[
					[
						56,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						7861935383405628
						,[
						[
							0,
							[
								0,
								6
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					3832086984020893,
					[
					[
						87,
						cr.plugins_.Mouse.prototype.cnds.IsOverObject,
						null,
						0,
						false,
						false,
						false,
						8062887894006338
						,[
						[
							4,
							15
						]
						]
					]
					],
					[
					[
						56,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						7651582974291335
						,[
						[
							0,
							[
								0,
								5
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					8571372011220224,
					[
					[
						87,
						cr.plugins_.Mouse.prototype.cnds.IsOverObject,
						null,
						0,
						false,
						false,
						false,
						6694495570370743
						,[
						[
							4,
							14
						]
						]
					]
					],
					[
					[
						56,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						1929771783558488
						,[
						[
							0,
							[
								0,
								7
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "TileInfo"],
			false,
			8635266570240333,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				8635266570240333
				,[
				[
					1,
					[
						2,
						"TileInfo"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				982501833675329,
				[
				[
					-1,
					cr.system_object.prototype.cnds.EveryTick,
					null,
					0,
					false,
					false,
					false,
					3825655356323948
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					618469216835016
					,[
					[
						11,
						"mouseHoverTile"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					77,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					6892986908551552
					,[
					[
						7,
						[
							2,
							""
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				4260804529679956,
				[
				[
					87,
					cr.plugins_.Mouse.prototype.cnds.IsOverObject,
					null,
					0,
					false,
					false,
					false,
					6845547523785118
					,[
					[
						4,
						100
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					712262640088755
					,[
					[
						11,
						"mouseHoverTile"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					77,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					6301299494667252
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.uppercase
							,[
[
								21,
								100,
								true,
								null
								,3
							]
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "Pop-up Edge Guard"],
				false,
				4113812555144294,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					4113812555144294
					,[
					[
						1,
						[
							2,
							"Pop-up Edge Guard"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					[true, "Icons"],
					false,
					8166831288498262,
					[
					[
						-1,
						cr.system_object.prototype.cnds.IsGroupActive,
						null,
						0,
						false,
						false,
						false,
						8166831288498262
						,[
						[
							1,
							[
								2,
								"Icons"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						3448220016957527,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							2630734532698455
							,[
							[
								7,
								[
									20,
									87,
									cr.plugins_.Mouse.prototype.exps.AbsoluteY,
									false,
									null
								]
							]
,							[
								8,
								4
							]
,							[
								7,
								[
									0,
									400
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							6422922969613693,
							[
							[
								-1,
								cr.system_object.prototype.cnds.CompareVar,
								null,
								0,
								false,
								false,
								false,
								4020792073166234
								,[
								[
									11,
									"mouseHoverTile"
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								54,
								cr.plugins_.Sprite.prototype.acts.SetY,
								null,
								5572595186206996
								,[
								[
									0,
									[
										5,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteY,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteY,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											300
										]
									]
								]
								]
							]
,							[
								77,
								cr.plugins_.Text.prototype.acts.SetY,
								null,
								5403128584975638
								,[
								[
									0,
									[
										5,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteY,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteY,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											174
										]
									]
								]
								]
							]
,							[
								55,
								cr.plugins_.Sprite.prototype.acts.SetY,
								null,
								4723079364123585
								,[
								[
									0,
									[
										5,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteY,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteY,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											278
										]
									]
								]
								]
							]
,							[
								75,
								cr.plugins_.Text.prototype.acts.SetY,
								null,
								2069306611163297
								,[
								[
									0,
									[
										5,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteY,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteY,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											90
										]
									]
								]
								]
							]
,							[
								76,
								cr.plugins_.Text.prototype.acts.SetY,
								null,
								7075738851821126
								,[
								[
									0,
									[
										5,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteY,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteY,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											90
										]
									]
								]
								]
							]
,							[
								78,
								cr.plugins_.Text.prototype.acts.SetY,
								null,
								116793365109487
								,[
								[
									0,
									[
										5,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteY,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteY,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											65
										]
									]
								]
								]
							]
,							[
								79,
								cr.plugins_.Text.prototype.acts.SetY,
								null,
								8964272512764176
								,[
								[
									0,
									[
										5,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteY,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteY,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											65
										]
									]
								]
								]
							]
,							[
								80,
								cr.plugins_.Text.prototype.acts.SetY,
								null,
								3244759544482389
								,[
								[
									0,
									[
										5,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteY,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteY,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											40
										]
									]
								]
								]
							]
,							[
								82,
								cr.plugins_.Text.prototype.acts.SetY,
								null,
								9756365624314192
								,[
								[
									0,
									[
										5,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteY,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteY,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											120
										]
									]
								]
								]
							]
,							[
								81,
								cr.plugins_.Text.prototype.acts.SetY,
								null,
								3212047883157882
								,[
								[
									0,
									[
										5,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteY,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteY,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											120
										]
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								1121621060019752,
								[
								[
									87,
									cr.plugins_.Mouse.prototype.cnds.IsOverObject,
									null,
									0,
									false,
									false,
									false,
									3487866230812594
									,[
									[
										4,
										0
									]
									]
								]
								],
								[
								[
									42,
									cr.plugins_.Sprite.prototype.acts.SetY,
									null,
									8710065139838499
									,[
									[
										0,
										[
											5,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteY,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteY,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												89
											]
										]
									]
									]
								]
,								[
									44,
									cr.plugins_.Sprite.prototype.acts.SetY,
									null,
									7641983734867865
									,[
									[
										0,
										[
											5,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteY,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteY,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												89
											]
										]
									]
									]
								]
,								[
									43,
									cr.plugins_.Sprite.prototype.acts.SetY,
									null,
									9240861844163109
									,[
									[
										0,
										[
											5,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteY,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteY,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												64
											]
										]
									]
									]
								]
,								[
									45,
									cr.plugins_.Sprite.prototype.acts.SetY,
									null,
									652434939747165
									,[
									[
										0,
										[
											5,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteY,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteY,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												64
											]
										]
									]
									]
								]
,								[
									46,
									cr.plugins_.Sprite.prototype.acts.SetY,
									null,
									1674803298394188
									,[
									[
										0,
										[
											5,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteY,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteY,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												39
											]
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								true,
								7821555424329222,
								[
								[
									87,
									cr.plugins_.Mouse.prototype.cnds.IsOverObject,
									null,
									0,
									false,
									false,
									false,
									7681696761230451
									,[
									[
										4,
										2
									]
									]
								]
,								[
									87,
									cr.plugins_.Mouse.prototype.cnds.IsOverObject,
									null,
									0,
									false,
									false,
									false,
									5921415681789169
									,[
									[
										4,
										3
									]
									]
								]
,								[
									87,
									cr.plugins_.Mouse.prototype.cnds.IsOverObject,
									null,
									0,
									false,
									false,
									false,
									4853539803108107
									,[
									[
										4,
										5
									]
									]
								]
,								[
									87,
									cr.plugins_.Mouse.prototype.cnds.IsOverObject,
									null,
									0,
									false,
									false,
									false,
									6342570460746352
									,[
									[
										4,
										4
									]
									]
								]
,								[
									87,
									cr.plugins_.Mouse.prototype.cnds.IsOverObject,
									null,
									0,
									false,
									false,
									false,
									3463642218818376
									,[
									[
										4,
										6
									]
									]
								]
								],
								[
								[
									42,
									cr.plugins_.Sprite.prototype.acts.SetY,
									null,
									3410285472204502
									,[
									[
										0,
										[
											5,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteY,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteY,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												89
											]
										]
									]
									]
								]
,								[
									44,
									cr.plugins_.Sprite.prototype.acts.SetY,
									null,
									7392958815442152
									,[
									[
										0,
										[
											5,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteY,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteY,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												89
											]
										]
									]
									]
								]
,								[
									43,
									cr.plugins_.Sprite.prototype.acts.SetY,
									null,
									7795785719761886
									,[
									[
										0,
										[
											5,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteY,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteY,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												64
											]
										]
									]
									]
								]
,								[
									45,
									cr.plugins_.Sprite.prototype.acts.SetY,
									null,
									7599403115444382
									,[
									[
										0,
										[
											5,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteY,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteY,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												64
											]
										]
									]
									]
								]
,								[
									46,
									cr.plugins_.Sprite.prototype.acts.SetY,
									null,
									9215474621806526
									,[
									[
										0,
										[
											5,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteY,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteY,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												39
											]
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								9770368096558169,
								[
								[
									87,
									cr.plugins_.Mouse.prototype.cnds.IsOverObject,
									null,
									0,
									false,
									false,
									false,
									1589515821365374
									,[
									[
										4,
										1
									]
									]
								]
								],
								[
								[
									42,
									cr.plugins_.Sprite.prototype.acts.SetY,
									null,
									84665147146971
									,[
									[
										0,
										[
											5,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteY,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteY,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												89
											]
										]
									]
									]
								]
,								[
									44,
									cr.plugins_.Sprite.prototype.acts.SetY,
									null,
									2851665677307236
									,[
									[
										0,
										[
											5,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteY,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteY,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												89
											]
										]
									]
									]
								]
,								[
									40,
									cr.plugins_.Sprite.prototype.acts.SetY,
									null,
									8891934383007215
									,[
									[
										0,
										[
											5,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteY,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteY,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												64
											]
										]
									]
									]
								]
,								[
									41,
									cr.plugins_.Sprite.prototype.acts.SetY,
									null,
									4469069200627181
									,[
									[
										0,
										[
											5,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteY,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteY,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												64
											]
										]
									]
									]
								]
,								[
									46,
									cr.plugins_.Sprite.prototype.acts.SetY,
									null,
									7256327320456381
									,[
									[
										0,
										[
											5,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteY,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteY,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												39
											]
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						9101732187429789,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							4033410633999098
							,[
							[
								7,
								[
									20,
									87,
									cr.plugins_.Mouse.prototype.exps.AbsoluteY,
									false,
									null
								]
							]
,							[
								8,
								3
							]
,							[
								7,
								[
									0,
									400
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							5394536059492589,
							[
							[
								-1,
								cr.system_object.prototype.cnds.CompareVar,
								null,
								0,
								false,
								false,
								false,
								4201750320799796
								,[
								[
									11,
									"mouseHoverTile"
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								54,
								cr.plugins_.Sprite.prototype.acts.SetY,
								null,
								2850213249906953
								,[
								[
									0,
									[
										4,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteY,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteY,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											64
										]
									]
								]
								]
							]
,							[
								77,
								cr.plugins_.Text.prototype.acts.SetY,
								null,
								8697312881122815
								,[
								[
									0,
									[
										4,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteY,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteY,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											190
										]
									]
								]
								]
							]
,							[
								55,
								cr.plugins_.Sprite.prototype.acts.SetY,
								null,
								9420192674094131
								,[
								[
									0,
									[
										4,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteY,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteY,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											86
										]
									]
								]
								]
							]
,							[
								75,
								cr.plugins_.Text.prototype.acts.SetY,
								null,
								49613760643169
								,[
								[
									0,
									[
										4,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteY,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteY,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											275
										]
									]
								]
								]
							]
,							[
								76,
								cr.plugins_.Text.prototype.acts.SetY,
								null,
								916797009095065
								,[
								[
									0,
									[
										4,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteY,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteY,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											275
										]
									]
								]
								]
							]
,							[
								78,
								cr.plugins_.Text.prototype.acts.SetY,
								null,
								3126615697581561
								,[
								[
									0,
									[
										4,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteY,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteY,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											300
										]
									]
								]
								]
							]
,							[
								79,
								cr.plugins_.Text.prototype.acts.SetY,
								null,
								759164681174349
								,[
								[
									0,
									[
										4,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteY,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteY,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											300
										]
									]
								]
								]
							]
,							[
								80,
								cr.plugins_.Text.prototype.acts.SetY,
								null,
								1432534548247058
								,[
								[
									0,
									[
										4,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteY,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteY,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											325
										]
									]
								]
								]
							]
,							[
								82,
								cr.plugins_.Text.prototype.acts.SetY,
								null,
								8483090555026392
								,[
								[
									0,
									[
										4,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteY,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteY,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											245
										]
									]
								]
								]
							]
,							[
								81,
								cr.plugins_.Text.prototype.acts.SetY,
								null,
								4918995233828317
								,[
								[
									0,
									[
										4,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteY,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteY,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											245
										]
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								2148652488809204,
								[
								[
									87,
									cr.plugins_.Mouse.prototype.cnds.IsOverObject,
									null,
									0,
									false,
									false,
									false,
									2669405944998927
									,[
									[
										4,
										0
									]
									]
								]
								],
								[
								[
									42,
									cr.plugins_.Sprite.prototype.acts.SetY,
									null,
									1939132534001747
									,[
									[
										0,
										[
											4,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteY,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteY,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												275
											]
										]
									]
									]
								]
,								[
									44,
									cr.plugins_.Sprite.prototype.acts.SetY,
									null,
									9106975938422326
									,[
									[
										0,
										[
											4,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteY,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteY,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												275
											]
										]
									]
									]
								]
,								[
									43,
									cr.plugins_.Sprite.prototype.acts.SetY,
									null,
									3445854788484361
									,[
									[
										0,
										[
											4,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteY,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteY,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												300
											]
										]
									]
									]
								]
,								[
									45,
									cr.plugins_.Sprite.prototype.acts.SetY,
									null,
									682553189388766
									,[
									[
										0,
										[
											4,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteY,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteY,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												300
											]
										]
									]
									]
								]
,								[
									46,
									cr.plugins_.Sprite.prototype.acts.SetY,
									null,
									9927831577885434
									,[
									[
										0,
										[
											4,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteY,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteY,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												325
											]
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								true,
								7014935898640373,
								[
								[
									87,
									cr.plugins_.Mouse.prototype.cnds.IsOverObject,
									null,
									0,
									false,
									false,
									false,
									9007032455970129
									,[
									[
										4,
										2
									]
									]
								]
,								[
									87,
									cr.plugins_.Mouse.prototype.cnds.IsOverObject,
									null,
									0,
									false,
									false,
									false,
									2987419074615352
									,[
									[
										4,
										3
									]
									]
								]
,								[
									87,
									cr.plugins_.Mouse.prototype.cnds.IsOverObject,
									null,
									0,
									false,
									false,
									false,
									1898810599814936
									,[
									[
										4,
										5
									]
									]
								]
,								[
									87,
									cr.plugins_.Mouse.prototype.cnds.IsOverObject,
									null,
									0,
									false,
									false,
									false,
									2058055378365928
									,[
									[
										4,
										4
									]
									]
								]
,								[
									87,
									cr.plugins_.Mouse.prototype.cnds.IsOverObject,
									null,
									0,
									false,
									false,
									false,
									2926217574303781
									,[
									[
										4,
										6
									]
									]
								]
								],
								[
								[
									42,
									cr.plugins_.Sprite.prototype.acts.SetY,
									null,
									7853406359762514
									,[
									[
										0,
										[
											4,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteY,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteY,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												275
											]
										]
									]
									]
								]
,								[
									44,
									cr.plugins_.Sprite.prototype.acts.SetY,
									null,
									8214161399144316
									,[
									[
										0,
										[
											4,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteY,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteY,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												275
											]
										]
									]
									]
								]
,								[
									43,
									cr.plugins_.Sprite.prototype.acts.SetY,
									null,
									7897091078020414
									,[
									[
										0,
										[
											4,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteY,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteY,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												300
											]
										]
									]
									]
								]
,								[
									45,
									cr.plugins_.Sprite.prototype.acts.SetY,
									null,
									6037908033075796
									,[
									[
										0,
										[
											4,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteY,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteY,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												300
											]
										]
									]
									]
								]
,								[
									46,
									cr.plugins_.Sprite.prototype.acts.SetY,
									null,
									7094477749818882
									,[
									[
										0,
										[
											4,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteY,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteY,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												325
											]
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								9732793085442773,
								[
								[
									87,
									cr.plugins_.Mouse.prototype.cnds.IsOverObject,
									null,
									0,
									false,
									false,
									false,
									6582524816610246
									,[
									[
										4,
										1
									]
									]
								]
								],
								[
								[
									42,
									cr.plugins_.Sprite.prototype.acts.SetY,
									null,
									5440178178661321
									,[
									[
										0,
										[
											4,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteY,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteY,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												275
											]
										]
									]
									]
								]
,								[
									44,
									cr.plugins_.Sprite.prototype.acts.SetY,
									null,
									2330907975582684
									,[
									[
										0,
										[
											4,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteY,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteY,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												275
											]
										]
									]
									]
								]
,								[
									40,
									cr.plugins_.Sprite.prototype.acts.SetY,
									null,
									6263759709111365
									,[
									[
										0,
										[
											4,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteY,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteY,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												300
											]
										]
									]
									]
								]
,								[
									41,
									cr.plugins_.Sprite.prototype.acts.SetY,
									null,
									8001386749370115
									,[
									[
										0,
										[
											4,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteY,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteY,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												300
											]
										]
									]
									]
								]
,								[
									46,
									cr.plugins_.Sprite.prototype.acts.SetY,
									null,
									3128534810993436
									,[
									[
										0,
										[
											4,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteY,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteY,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												325
											]
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						9178536854937548,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							5900683821055246
							,[
							[
								7,
								[
									20,
									87,
									cr.plugins_.Mouse.prototype.exps.AbsoluteX,
									false,
									null
								]
							]
,							[
								8,
								4
							]
,							[
								7,
								[
									0,
									960
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							9109079978047233,
							[
							[
								-1,
								cr.system_object.prototype.cnds.CompareVar,
								null,
								0,
								false,
								false,
								false,
								701892214310956
								,[
								[
									11,
									"mouseHoverTile"
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								54,
								cr.plugins_.Sprite.prototype.acts.SetX,
								null,
								3242742652593882
								,[
								[
									0,
									[
										5,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteX,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteX,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											300
										]
									]
								]
								]
							]
,							[
								55,
								cr.plugins_.Sprite.prototype.acts.SetX,
								null,
								9800600277683422
								,[
								[
									0,
									[
										4,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteX,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteX,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											-299
										]
									]
								]
								]
							]
,							[
								77,
								cr.plugins_.Text.prototype.acts.SetX,
								null,
								6093394271342046
								,[
								[
									0,
									[
										5,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteX,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteX,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											285
										]
									]
								]
								]
							]
,							[
								75,
								cr.plugins_.Text.prototype.acts.SetX,
								null,
								6602269113154026
								,[
								[
									0,
									[
										5,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteX,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteX,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											264
										]
									]
								]
								]
							]
,							[
								76,
								cr.plugins_.Text.prototype.acts.SetX,
								null,
								6247807993535389
								,[
								[
									0,
									[
										5,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteX,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteX,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											144
										]
									]
								]
								]
							]
,							[
								78,
								cr.plugins_.Text.prototype.acts.SetX,
								null,
								7819929561069346
								,[
								[
									0,
									[
										5,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteX,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteX,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											264
										]
									]
								]
								]
							]
,							[
								79,
								cr.plugins_.Text.prototype.acts.SetX,
								null,
								610602865688424
								,[
								[
									0,
									[
										5,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteX,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteX,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											144
										]
									]
								]
								]
							]
,							[
								80,
								cr.plugins_.Text.prototype.acts.SetX,
								null,
								9965559418401956
								,[
								[
									0,
									[
										5,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteX,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteX,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											264
										]
									]
								]
								]
							]
,							[
								82,
								cr.plugins_.Text.prototype.acts.SetX,
								null,
								553479748386033
								,[
								[
									0,
									[
										5,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteX,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteX,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											244
										]
									]
								]
								]
							]
,							[
								81,
								cr.plugins_.Text.prototype.acts.SetX,
								null,
								4124458756964319
								,[
								[
									0,
									[
										5,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteX,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteX,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											140
										]
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								7602839878076307,
								[
								[
									87,
									cr.plugins_.Mouse.prototype.cnds.IsOverObject,
									null,
									0,
									false,
									false,
									false,
									7923199397468201
									,[
									[
										4,
										0
									]
									]
								]
								],
								[
								[
									42,
									cr.plugins_.Sprite.prototype.acts.SetX,
									null,
									9464810234042436
									,[
									[
										0,
										[
											5,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteX,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteX,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												295
											]
										]
									]
									]
								]
,								[
									44,
									cr.plugins_.Sprite.prototype.acts.SetX,
									null,
									3481216139965018
									,[
									[
										0,
										[
											5,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteX,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteX,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												175
											]
										]
									]
									]
								]
,								[
									43,
									cr.plugins_.Sprite.prototype.acts.SetX,
									null,
									4909829508463719
									,[
									[
										0,
										[
											5,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteX,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteX,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												295
											]
										]
									]
									]
								]
,								[
									45,
									cr.plugins_.Sprite.prototype.acts.SetX,
									null,
									3457244135574043
									,[
									[
										0,
										[
											5,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteX,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteX,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												175
											]
										]
									]
									]
								]
,								[
									46,
									cr.plugins_.Sprite.prototype.acts.SetX,
									null,
									4611158187222243
									,[
									[
										0,
										[
											5,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteX,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteX,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												295
											]
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								true,
								7087507592610858,
								[
								[
									87,
									cr.plugins_.Mouse.prototype.cnds.IsOverObject,
									null,
									0,
									false,
									false,
									false,
									7509550443338113
									,[
									[
										4,
										2
									]
									]
								]
,								[
									87,
									cr.plugins_.Mouse.prototype.cnds.IsOverObject,
									null,
									0,
									false,
									false,
									false,
									7870475054337845
									,[
									[
										4,
										3
									]
									]
								]
,								[
									87,
									cr.plugins_.Mouse.prototype.cnds.IsOverObject,
									null,
									0,
									false,
									false,
									false,
									8511816955946166
									,[
									[
										4,
										5
									]
									]
								]
,								[
									87,
									cr.plugins_.Mouse.prototype.cnds.IsOverObject,
									null,
									0,
									false,
									false,
									false,
									9226847323248041
									,[
									[
										4,
										4
									]
									]
								]
,								[
									87,
									cr.plugins_.Mouse.prototype.cnds.IsOverObject,
									null,
									0,
									false,
									false,
									false,
									8700487779746281
									,[
									[
										4,
										6
									]
									]
								]
								],
								[
								[
									42,
									cr.plugins_.Sprite.prototype.acts.SetX,
									null,
									8611909388870515
									,[
									[
										0,
										[
											5,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteX,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteX,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												295
											]
										]
									]
									]
								]
,								[
									44,
									cr.plugins_.Sprite.prototype.acts.SetX,
									null,
									5264985763499364
									,[
									[
										0,
										[
											5,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteX,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteX,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												175
											]
										]
									]
									]
								]
,								[
									43,
									cr.plugins_.Sprite.prototype.acts.SetX,
									null,
									9973049528930269
									,[
									[
										0,
										[
											5,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteX,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteX,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												295
											]
										]
									]
									]
								]
,								[
									45,
									cr.plugins_.Sprite.prototype.acts.SetX,
									null,
									8784438466067655
									,[
									[
										0,
										[
											5,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteX,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteX,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												175
											]
										]
									]
									]
								]
,								[
									46,
									cr.plugins_.Sprite.prototype.acts.SetX,
									null,
									2827847561844249
									,[
									[
										0,
										[
											5,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteX,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteX,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												295
											]
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								7837211933551836,
								[
								[
									87,
									cr.plugins_.Mouse.prototype.cnds.IsOverObject,
									null,
									0,
									false,
									false,
									false,
									2101825007358185
									,[
									[
										4,
										1
									]
									]
								]
								],
								[
								[
									42,
									cr.plugins_.Sprite.prototype.acts.SetX,
									null,
									5955126570617774
									,[
									[
										0,
										[
											5,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteX,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteX,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												295
											]
										]
									]
									]
								]
,								[
									44,
									cr.plugins_.Sprite.prototype.acts.SetX,
									null,
									5304047757020786
									,[
									[
										0,
										[
											5,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteX,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteX,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												175
											]
										]
									]
									]
								]
,								[
									40,
									cr.plugins_.Sprite.prototype.acts.SetX,
									null,
									5886163731989654
									,[
									[
										0,
										[
											5,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteX,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteX,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												295
											]
										]
									]
									]
								]
,								[
									41,
									cr.plugins_.Sprite.prototype.acts.SetX,
									null,
									3028826738794283
									,[
									[
										0,
										[
											5,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteX,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteX,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												175
											]
										]
									]
									]
								]
,								[
									46,
									cr.plugins_.Sprite.prototype.acts.SetX,
									null,
									5864252557671557
									,[
									[
										0,
										[
											5,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteX,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteX,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												295
											]
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						3724913655778635,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							4959075766203266
							,[
							[
								7,
								[
									20,
									87,
									cr.plugins_.Mouse.prototype.exps.AbsoluteX,
									false,
									null
								]
							]
,							[
								8,
								3
							]
,							[
								7,
								[
									0,
									960
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							4812463862770938,
							[
							[
								-1,
								cr.system_object.prototype.cnds.CompareVar,
								null,
								0,
								false,
								false,
								false,
								3801127520837169
								,[
								[
									11,
									"mouseHoverTile"
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								54,
								cr.plugins_.Sprite.prototype.acts.SetX,
								null,
								3229263305054552
								,[
								[
									0,
									[
										4,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteX,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteX,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											64
										]
									]
								]
								]
							]
,							[
								77,
								cr.plugins_.Text.prototype.acts.SetX,
								null,
								1143644361410872
								,[
								[
									0,
									[
										4,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteX,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteX,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											79
										]
									]
								]
								]
							]
,							[
								55,
								cr.plugins_.Sprite.prototype.acts.SetX,
								null,
								4631363789316522
								,[
								[
									0,
									[
										4,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteX,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteX,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											65
										]
									]
								]
								]
							]
,							[
								75,
								cr.plugins_.Text.prototype.acts.SetX,
								null,
								4630651471034463
								,[
								[
									0,
									[
										4,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteX,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteX,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											100
										]
									]
								]
								]
							]
,							[
								76,
								cr.plugins_.Text.prototype.acts.SetX,
								null,
								9798578173211575
								,[
								[
									0,
									[
										4,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteX,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteX,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											220
										]
									]
								]
								]
							]
,							[
								78,
								cr.plugins_.Text.prototype.acts.SetX,
								null,
								196529001406852
								,[
								[
									0,
									[
										4,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteX,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteX,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											100
										]
									]
								]
								]
							]
,							[
								79,
								cr.plugins_.Text.prototype.acts.SetX,
								null,
								6118589036646285
								,[
								[
									0,
									[
										4,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteX,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteX,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											220
										]
									]
								]
								]
							]
,							[
								80,
								cr.plugins_.Text.prototype.acts.SetX,
								null,
								9854750822979885
								,[
								[
									0,
									[
										4,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteX,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteX,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											100
										]
									]
								]
								]
							]
,							[
								82,
								cr.plugins_.Text.prototype.acts.SetX,
								null,
								5338868775196773
								,[
								[
									0,
									[
										4,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteX,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteX,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											120
										]
									]
								]
								]
							]
,							[
								81,
								cr.plugins_.Text.prototype.acts.SetX,
								null,
								4234619724074938
								,[
								[
									0,
									[
										4,
										[
											4,
											[
												19,
												cr.system_object.prototype.exps.viewportleft
												,[
[
													0,
													2
												]
												]
											]
											,[
												5,
												[
													20,
													87,
													cr.plugins_.Mouse.prototype.exps.AbsoluteX,
													false,
													null
												]
												,[
													8,
													[
														4,
														[
															20,
															87,
															cr.plugins_.Mouse.prototype.exps.AbsoluteX,
															false,
															null
														]
														,[
															0,
															64
														]
													]
													,[
														0,
														64
													]
												]
											]
										]
										,[
											0,
											225
										]
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								2282831021360151,
								[
								[
									87,
									cr.plugins_.Mouse.prototype.cnds.IsOverObject,
									null,
									0,
									false,
									false,
									false,
									2175621871836408
									,[
									[
										4,
										0
									]
									]
								]
								],
								[
								[
									42,
									cr.plugins_.Sprite.prototype.acts.SetX,
									null,
									4805031592200976
									,[
									[
										0,
										[
											4,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteX,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteX,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												69
											]
										]
									]
									]
								]
,								[
									44,
									cr.plugins_.Sprite.prototype.acts.SetX,
									null,
									2139763125921093
									,[
									[
										0,
										[
											4,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteX,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteX,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												189
											]
										]
									]
									]
								]
,								[
									43,
									cr.plugins_.Sprite.prototype.acts.SetX,
									null,
									1216099056859476
									,[
									[
										0,
										[
											4,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteX,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteX,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												69
											]
										]
									]
									]
								]
,								[
									45,
									cr.plugins_.Sprite.prototype.acts.SetX,
									null,
									5864809332897237
									,[
									[
										0,
										[
											4,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteX,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteX,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												189
											]
										]
									]
									]
								]
,								[
									46,
									cr.plugins_.Sprite.prototype.acts.SetX,
									null,
									7939067713368201
									,[
									[
										0,
										[
											4,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteX,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteX,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												69
											]
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								true,
								5150028500823308,
								[
								[
									87,
									cr.plugins_.Mouse.prototype.cnds.IsOverObject,
									null,
									0,
									false,
									false,
									false,
									9988544015523025
									,[
									[
										4,
										2
									]
									]
								]
,								[
									87,
									cr.plugins_.Mouse.prototype.cnds.IsOverObject,
									null,
									0,
									false,
									false,
									false,
									2361832108716193
									,[
									[
										4,
										3
									]
									]
								]
,								[
									87,
									cr.plugins_.Mouse.prototype.cnds.IsOverObject,
									null,
									0,
									false,
									false,
									false,
									9323053982590059
									,[
									[
										4,
										5
									]
									]
								]
,								[
									87,
									cr.plugins_.Mouse.prototype.cnds.IsOverObject,
									null,
									0,
									false,
									false,
									false,
									70311052772284
									,[
									[
										4,
										4
									]
									]
								]
,								[
									87,
									cr.plugins_.Mouse.prototype.cnds.IsOverObject,
									null,
									0,
									false,
									false,
									false,
									169786206263401
									,[
									[
										4,
										6
									]
									]
								]
								],
								[
								[
									42,
									cr.plugins_.Sprite.prototype.acts.SetX,
									null,
									4559613337074436
									,[
									[
										0,
										[
											4,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteX,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteX,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												69
											]
										]
									]
									]
								]
,								[
									44,
									cr.plugins_.Sprite.prototype.acts.SetX,
									null,
									1372154489308829
									,[
									[
										0,
										[
											4,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteX,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteX,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												189
											]
										]
									]
									]
								]
,								[
									43,
									cr.plugins_.Sprite.prototype.acts.SetX,
									null,
									763436281174794
									,[
									[
										0,
										[
											4,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteX,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteX,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												69
											]
										]
									]
									]
								]
,								[
									45,
									cr.plugins_.Sprite.prototype.acts.SetX,
									null,
									4863361607152025
									,[
									[
										0,
										[
											4,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteX,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteX,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												189
											]
										]
									]
									]
								]
,								[
									46,
									cr.plugins_.Sprite.prototype.acts.SetX,
									null,
									7872961481736083
									,[
									[
										0,
										[
											4,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteX,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteX,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												69
											]
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								6223325320466061,
								[
								[
									87,
									cr.plugins_.Mouse.prototype.cnds.IsOverObject,
									null,
									0,
									false,
									false,
									false,
									1436280146627034
									,[
									[
										4,
										1
									]
									]
								]
								],
								[
								[
									42,
									cr.plugins_.Sprite.prototype.acts.SetX,
									null,
									3352503170526795
									,[
									[
										0,
										[
											4,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteX,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteX,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												69
											]
										]
									]
									]
								]
,								[
									44,
									cr.plugins_.Sprite.prototype.acts.SetX,
									null,
									3668326991982545
									,[
									[
										0,
										[
											4,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteX,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteX,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												189
											]
										]
									]
									]
								]
,								[
									40,
									cr.plugins_.Sprite.prototype.acts.SetX,
									null,
									9033711295403297
									,[
									[
										0,
										[
											4,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteX,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteX,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												69
											]
										]
									]
									]
								]
,								[
									41,
									cr.plugins_.Sprite.prototype.acts.SetX,
									null,
									5665861106124815
									,[
									[
										0,
										[
											4,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteX,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteX,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												189
											]
										]
									]
									]
								]
,								[
									46,
									cr.plugins_.Sprite.prototype.acts.SetX,
									null,
									7658144087168232
									,[
									[
										0,
										[
											4,
											[
												4,
												[
													19,
													cr.system_object.prototype.exps.viewportleft
													,[
[
														0,
														2
													]
													]
												]
												,[
													5,
													[
														20,
														87,
														cr.plugins_.Mouse.prototype.exps.AbsoluteX,
														false,
														null
													]
													,[
														8,
														[
															4,
															[
																20,
																87,
																cr.plugins_.Mouse.prototype.exps.AbsoluteX,
																false,
																null
															]
															,[
																0,
																64
															]
														]
														,[
															0,
															64
														]
													]
												]
											]
											,[
												0,
												69
											]
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					144764391902096,
					[
					[
						-1,
						cr.system_object.prototype.cnds.EveryTick,
						null,
						0,
						false,
						false,
						false,
						5852387203286918
					]
					],
					[
					[
						55,
						cr.plugins_.Sprite.prototype.acts.SetAnimSpeed,
						null,
						6139236229948743
						,[
						[
							0,
							[
								0,
								0
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						291986265658541,
						[
						[
							-1,
							cr.system_object.prototype.cnds.CompareVar,
							null,
							0,
							false,
							false,
							false,
							4243090845038504
							,[
							[
								11,
								"mouseHoverTile"
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							54,
							cr.plugins_.Sprite.prototype.acts.SetPos,
							null,
							6525913200431938
							,[
							[
								0,
								[
									0,
									-1000
								]
							]
,							[
								0,
								[
									0,
									0
								]
							]
							]
						]
,						[
							108,
							cr.plugins_.Text.prototype.acts.SetPos,
							null,
							2886011616241407
							,[
							[
								0,
								[
									0,
									-1000
								]
							]
,							[
								0,
								[
									0,
									0
								]
							]
							]
						]
,						[
							55,
							cr.plugins_.Sprite.prototype.acts.SetPos,
							null,
							8087548543051725
							,[
							[
								0,
								[
									0,
									-1000
								]
							]
,							[
								0,
								[
									0,
									0
								]
							]
							]
						]
,						[
							107,
							cr.plugins_.Sprite.prototype.acts.SetPos,
							null,
							6572055977597956
							,[
							[
								0,
								[
									0,
									-1000
								]
							]
,							[
								0,
								[
									0,
									0
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				[true, "InfoPane Text"],
				false,
				6458686800984203,
				[
				[
					-1,
					cr.system_object.prototype.cnds.IsGroupActive,
					null,
					0,
					false,
					false,
					false,
					6458686800984203
					,[
					[
						1,
						[
							2,
							"InfoPane Text"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					4967852791388252,
					[
					[
						87,
						cr.plugins_.Mouse.prototype.cnds.IsOverObject,
						null,
						0,
						false,
						false,
						false,
						1214346972109353
						,[
						[
							4,
							100
						]
						]
					]
					],
					[
					[
						75,
						cr.plugins_.Text.prototype.acts.SetText,
						null,
						4624302067466316
						,[
						[
							7,
							[
								10,
								[
									2,
									"Credits: "
								]
								,[
									21,
									100,
									false,
									null
									,6
								]
							]
						]
						]
					]
,					[
						76,
						cr.plugins_.Text.prototype.acts.SetText,
						null,
						8546132671981165
						,[
						[
							7,
							[
								10,
								[
									2,
									"Forma: "
								]
								,[
									21,
									100,
									false,
									null
									,10
								]
							]
						]
						]
					]
,					[
						82,
						cr.plugins_.Text.prototype.acts.SetText,
						null,
						7157557116745851
						,[
						[
							7,
							[
								21,
								100,
								false,
								null
								,5
							]
						]
						]
					]
,					[
						81,
						cr.plugins_.Text.prototype.acts.SetText,
						null,
						9928928452181945
						,[
						[
							7,
							[
								21,
								100,
								false,
								null
								,4
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						5176098902008668,
						[
						[
							87,
							cr.plugins_.Mouse.prototype.cnds.IsOverObject,
							null,
							0,
							false,
							false,
							false,
							7334874559926623
							,[
							[
								4,
								0
							]
							]
						]
						],
						[
						[
							55,
							cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
							null,
							5461628699451031
							,[
							[
								0,
								[
									0,
									0
								]
							]
							]
						]
,						[
							78,
							cr.plugins_.Text.prototype.acts.SetText,
							null,
							8894887317510136
							,[
							[
								7,
								[
									10,
									[
										2,
										"Ferrite: "
									]
									,[
										21,
										100,
										false,
										null
										,9
									]
								]
							]
							]
						]
,						[
							79,
							cr.plugins_.Text.prototype.acts.SetText,
							null,
							9275045600723646
							,[
							[
								7,
								[
									10,
									[
										2,
										"Nano Spores: "
									]
									,[
										21,
										100,
										false,
										null
										,11
									]
								]
							]
							]
						]
,						[
							80,
							cr.plugins_.Text.prototype.acts.SetText,
							null,
							8687724984766511
							,[
							[
								7,
								[
									10,
									[
										2,
										"Salvage: "
									]
									,[
										21,
										100,
										false,
										null
										,12
									]
								]
							]
							]
						]
						]
					]
,					[
						0,
						[true, "Hallways"],
						false,
						8859696644358495,
						[
						[
							-1,
							cr.system_object.prototype.cnds.IsGroupActive,
							null,
							0,
							false,
							false,
							false,
							8859696644358495
							,[
							[
								1,
								[
									2,
									"Hallways"
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							true,
							3460963589974933,
							[
							[
								87,
								cr.plugins_.Mouse.prototype.cnds.IsOverObject,
								null,
								0,
								false,
								false,
								false,
								8854006851131163
								,[
								[
									4,
									2
								]
								]
							]
,							[
								87,
								cr.plugins_.Mouse.prototype.cnds.IsOverObject,
								null,
								0,
								false,
								false,
								false,
								3237772348377755
								,[
								[
									4,
									3
								]
								]
							]
,							[
								87,
								cr.plugins_.Mouse.prototype.cnds.IsOverObject,
								null,
								0,
								false,
								false,
								false,
								1692418813182348
								,[
								[
									4,
									5
								]
								]
							]
,							[
								87,
								cr.plugins_.Mouse.prototype.cnds.IsOverObject,
								null,
								0,
								false,
								false,
								false,
								4721101148076839
								,[
								[
									4,
									4
								]
								]
							]
,							[
								87,
								cr.plugins_.Mouse.prototype.cnds.IsOverObject,
								null,
								0,
								false,
								false,
								false,
								8155644648150921
								,[
								[
									4,
									6
								]
								]
							]
							],
							[
							[
								78,
								cr.plugins_.Text.prototype.acts.SetText,
								null,
								2271025360416191
								,[
								[
									7,
									[
										10,
										[
											2,
											"Ferrite: "
										]
										,[
											21,
											100,
											false,
											null
											,9
										]
									]
								]
								]
							]
,							[
								79,
								cr.plugins_.Text.prototype.acts.SetText,
								null,
								6028693238225823
								,[
								[
									7,
									[
										10,
										[
											2,
											"Nano Spores: "
										]
										,[
											21,
											100,
											false,
											null
											,11
										]
									]
								]
								]
							]
,							[
								80,
								cr.plugins_.Text.prototype.acts.SetText,
								null,
								6414608432849983
								,[
								[
									7,
									[
										10,
										[
											2,
											"Salvage: "
										]
										,[
											21,
											100,
											false,
											null
											,12
										]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							4852771058997289,
							[
							[
								87,
								cr.plugins_.Mouse.prototype.cnds.IsOverObject,
								null,
								0,
								false,
								false,
								false,
								322592220187625
								,[
								[
									4,
									2
								]
								]
							]
							],
							[
							[
								55,
								cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
								null,
								8410757805046893
								,[
								[
									0,
									[
										0,
										1
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							897897928784746,
							[
							[
								87,
								cr.plugins_.Mouse.prototype.cnds.IsOverObject,
								null,
								0,
								false,
								false,
								false,
								8221531388714197
								,[
								[
									4,
									3
								]
								]
							]
							],
							[
							[
								55,
								cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
								null,
								4621944054590499
								,[
								[
									0,
									[
										0,
										3
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							307032910690186,
							[
							[
								87,
								cr.plugins_.Mouse.prototype.cnds.IsOverObject,
								null,
								0,
								false,
								false,
								false,
								4236634537405173
								,[
								[
									4,
									5
								]
								]
							]
							],
							[
							[
								55,
								cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
								null,
								4576470583987005
								,[
								[
									0,
									[
										0,
										4
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							8663449366745918,
							[
							[
								87,
								cr.plugins_.Mouse.prototype.cnds.IsOverObject,
								null,
								0,
								false,
								false,
								false,
								493131768534222
								,[
								[
									4,
									6
								]
								]
							]
							],
							[
							[
								55,
								cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
								null,
								5563107253550655
								,[
								[
									0,
									[
										0,
										5
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							8339085353552648,
							[
							[
								87,
								cr.plugins_.Mouse.prototype.cnds.IsOverObject,
								null,
								0,
								false,
								false,
								false,
								8277964434304453
								,[
								[
									4,
									4
								]
								]
							]
							],
							[
							[
								55,
								cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
								null,
								3399876325724902
								,[
								[
									0,
									[
										0,
										6
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							6843011494839006,
							[
							[
								87,
								cr.plugins_.Mouse.prototype.cnds.IsOverObject,
								null,
								0,
								false,
								false,
								false,
								2381502340978201
								,[
								[
									4,
									91
								]
								]
							]
							],
							[
							[
								55,
								cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
								null,
								5461151698217927
								,[
								[
									0,
									[
										0,
										7
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						1808014226065716,
						[
						[
							87,
							cr.plugins_.Mouse.prototype.cnds.IsOverObject,
							null,
							0,
							false,
							false,
							false,
							4266583902844339
							,[
							[
								4,
								1
							]
							]
						]
						],
						[
						[
							55,
							cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
							null,
							5265445012055829
							,[
							[
								0,
								[
									0,
									2
								]
							]
							]
						]
,						[
							78,
							cr.plugins_.Text.prototype.acts.SetText,
							null,
							1719314057507867
							,[
							[
								7,
								[
									10,
									[
										2,
										"Alloy Plate: "
									]
									,[
										21,
										100,
										false,
										null
										,7
									]
								]
							]
							]
						]
,						[
							79,
							cr.plugins_.Text.prototype.acts.SetText,
							null,
							4329042369025454
							,[
							[
								7,
								[
									10,
									[
										2,
										"Circuits: "
									]
									,[
										21,
										100,
										false,
										null
										,8
									]
								]
							]
							]
						]
,						[
							80,
							cr.plugins_.Text.prototype.acts.SetText,
							null,
							7142119329401486
							,[
							[
								7,
								[
									10,
									[
										2,
										"Salvage: "
									]
									,[
										21,
										100,
										false,
										null
										,12
									]
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "ApplicationOptions Menu"],
			false,
			7699416603241824,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				7699416603241824
				,[
				[
					1,
					[
						2,
						"ApplicationOptions Menu"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				2969506309584541,
				[
				[
					-1,
					cr.system_object.prototype.cnds.EveryTick,
					null,
					0,
					false,
					false,
					false,
					7321672883745943
				]
				],
				[
				[
					85,
					cr.plugins_.Text.prototype.acts.SetPos,
					null,
					6366078759147048
					,[
					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								200
							]
						]
					]
,					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									0,
									2
								]
								]
							]
							,[
								0,
								30
							]
						]
					]
					]
				]
,				[
					85,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					5912562655001097
					,[
					[
						7,
						[
							23,
							"screenshot"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				4295181431268925,
				[
				[
					35,
					cr.plugins_.Button.prototype.cnds.OnClicked,
					null,
					1,
					false,
					false,
					false,
					2611906608836314
				]
				],
				[
				[
					100,
					cr.plugins_.Sprite.prototype.acts.Destroy,
					null,
					4795720207011947
				]
				]
			]
,			[
				0,
				null,
				false,
				3397637697246992,
				[
				[
					92,
					cr.plugins_.Button.prototype.cnds.OnClicked,
					null,
					1,
					false,
					false,
					false,
					4576593932103358
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetCanvasSize,
					null,
					5235382691741054
					,[
					[
						0,
						[
							0,
							4000
						]
					]
,					[
						0,
						[
							0,
							4000
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetLayerVisible,
					null,
					5493498303599075
					,[
					[
						5,
						[
							0,
							2
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetLayerVisible,
					null,
					3126225339753128
					,[
					[
						5,
						[
							0,
							3
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetLayerVisible,
					null,
					1060726888367921
					,[
					[
						5,
						[
							0,
							4
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetLayerVisible,
					null,
					1065247929446311
					,[
					[
						5,
						[
							0,
							5
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetLayerVisible,
					null,
					6965796029648453
					,[
					[
						5,
						[
							0,
							6
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetLayerVisible,
					null,
					5575692498651264
					,[
					[
						5,
						[
							0,
							7
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SnapshotCanvas,
					null,
					3341794194008755
					,[
					[
						3,
						0
					]
,					[
						0,
						[
							0,
							75
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					6588816387172484
					,[
					[
						11,
						"screenshot"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				784083845969638,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnCanvasSnapshot,
					null,
					1,
					false,
					false,
					false,
					5579956726776536
				]
				],
				[
				[
					93,
					cr.plugins_.Browser.prototype.acts.GoToURLWindow,
					null,
					2270641184057922
					,[
					[
						1,
						[
							19,
							cr.system_object.prototype.exps.canvassnapshot
						]
					]
,					[
						1,
						[
							2,
							"Screenshot"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				2555247852236103,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					3645101968327438
					,[
					[
						11,
						"screenshot"
					]
,					[
						8,
						5
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					1350806795517048,
					[
					[
						-1,
						cr.system_object.prototype.cnds.EveryTick,
						null,
						0,
						false,
						false,
						false,
						3205423131783253
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.AddVar,
						null,
						1025646515806586
						,[
						[
							11,
							"screenshot"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					8889020293145758,
					[
					[
						-1,
						cr.system_object.prototype.cnds.CompareVar,
						null,
						0,
						false,
						false,
						false,
						6698836332378506
						,[
						[
							11,
							"screenshot"
						]
,						[
							8,
							5
						]
,						[
							7,
							[
								0,
								4
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetLayerVisible,
						null,
						586922960304787
						,[
						[
							5,
							[
								0,
								2
							]
						]
,						[
							3,
							1
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetLayerVisible,
						null,
						4271597922916841
						,[
						[
							5,
							[
								0,
								3
							]
						]
,						[
							3,
							1
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetLayerVisible,
						null,
						3663894260587691
						,[
						[
							5,
							[
								0,
								4
							]
						]
,						[
							3,
							1
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetLayerVisible,
						null,
						1853981135332295
						,[
						[
							5,
							[
								0,
								5
							]
						]
,						[
							3,
							1
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetLayerVisible,
						null,
						7914714483588162
						,[
						[
							5,
							[
								0,
								6
							]
						]
,						[
							3,
							1
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetLayerVisible,
						null,
						4104644998199125
						,[
						[
							5,
							[
								0,
								7
							]
						]
,						[
							3,
							1
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetCanvasSize,
						null,
						9400611065025389
						,[
						[
							0,
							[
								0,
								1280
							]
						]
,						[
							0,
							[
								0,
								720
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						5778336689530903
						,[
						[
							11,
							"screenshot"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				9597192765159616,
				[
				[
					33,
					cr.plugins_.Button.prototype.cnds.OnClicked,
					null,
					1,
					false,
					false,
					false,
					6863032769180137
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SaveState,
					null,
					758358394974653
					,[
					[
						1,
						[
							2,
							"mysave"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				433831444473582,
				[
				[
					34,
					cr.plugins_.Button.prototype.cnds.OnClicked,
					null,
					1,
					false,
					false,
					false,
					7917886354559273
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.LoadState,
					null,
					9922696043933636
					,[
					[
						1,
						[
							2,
							"mysave"
						]
					]
					]
				]
				]
			]
			]
		]
		]
	]
	],
	"media/",
	false,
	1280,
	720,
	0,
	false,
	true,
	true,
	"0.6",
	1,
	false,
	3,
	false,
	95,
	false,
	[
		[7,8,9,10]
	]
];};
